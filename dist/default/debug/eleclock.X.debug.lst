

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan 30 15:01:18 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0088                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364                           
   365                           	psect	idataBANK0
   366  01F6                     __pidataBANK0:
   367                           
   368                           ;initializer for _LCD_RAM_Tab
   369  01F6  347D               	retlw	125
   370  01F7  3405               	retlw	5
   371  01F8  345B               	retlw	91
   372  01F9  341F               	retlw	31
   373  01FA  3427               	retlw	39
   374  01FB  343E               	retlw	62
   375  01FC  347E               	retlw	126
   376  01FD  3415               	retlw	21
   377  01FE  347F               	retlw	127
   378  01FF  343F               	retlw	63
   379  0200  3477               	retlw	119
   380  0201  346E               	retlw	110
   381  0202  3478               	retlw	120
   382  0203  344F               	retlw	79
   383  0204  347A               	retlw	122
   384  0205  3472               	retlw	114
   385                           
   386                           ;initializer for _sec
   387  0206  3401               	retlw	1
   388  0207  3400               	retlw	0
   389                           
   390                           ;initializer for _min
   391  0208  340B               	retlw	11
   392  0209  3400               	retlw	0
   393                           
   394                           ;initializer for _hour
   395  020A  3411               	retlw	17
   396  020B  3400               	retlw	0
   397                           
   398                           ;initializer for _date
   399  020C  341C               	retlw	28
   400  020D  3400               	retlw	0
   401                           
   402                           ;initializer for _month
   403  020E  3401               	retlw	1
   404  020F  3400               	retlw	0
   405                           
   406                           ;initializer for _year
   407  0210  3416               	retlw	22
   408  0211  3400               	retlw	0
   409                           
   410                           ;initializer for _HT1621_addrbit
   411  0212  3406               	retlw	6
   412                           
   413                           ;initializer for _HT1621_maxcom
   414  0213  3404               	retlw	4
   415                           
   416                           	psect	strings
   417  0004                     __pstrings:
   418  0004                     stringtab:
   419  0004                     __stringtab:
   420  0004                     stringcode:	
   421                           ;	String table - string pointers are 1 byte each
   422                           
   423  0004                     stringdir:
   424  0004  3000               	movlw	high stringdir
   425  0005  008A               	movwf	10
   426  0006  0804               	movf	4,w
   427  0007  0A84               	incf	4,f
   428  0008  0782               	addwf	2,f
   429  0009                     __stringbase:
   430  0009  3400               	retlw	0
   431  000A                     __end_of__stringtab:
   432  000A                     _HT1621_segtab:
   433  000A  3400               	retlw	0
   434  000B  3401               	retlw	1
   435  000C  3402               	retlw	2
   436  000D  3403               	retlw	3
   437  000E  3404               	retlw	4
   438  000F  3405               	retlw	5
   439  0010  3406               	retlw	6
   440  0011  3407               	retlw	7
   441  0012                     __end_of_HT1621_segtab:
   442  0013                     _SSPBUF	set	19
   443  0014                     _SSPCON	set	20
   444  0047                     _RD7	set	71
   445  0045                     _RD5	set	69
   446  0046                     _RD6	set	70
   447  0039                     _RC1	set	57
   448  0035                     _RB5	set	53
   449  0094                     _SSPSTAT	set	148
   450  0093                     _SSPADD	set	147
   451  0091                     _SSPCON2	set	145
   452  048C                     _ACKEN	set	1164
   453  048D                     _ACKDT	set	1165
   454  048B                     _RCEN	set	1163
   455  048A                     _PEN	set	1162
   456  0488                     _SEN	set	1160
   457  043C                     _TRISC4	set	1084
   458  043B                     _TRISC3	set	1083
   459  0447                     _TRISD7	set	1095
   460  0446                     _TRISD6	set	1094
   461  0445                     _TRISD5	set	1093
   462  0439                     _TRISC1	set	1081
   463  0435                     _TRISB5	set	1077
   464                           
   465                           	psect	cinit
   466  07DF                     start_initialization:	
   467                           ; #config settings
   468                           
   469  07DF                     __initialization:
   470                           
   471                           ; Initialize objects allocated to BANK0
   472  07DF  1383               	bcf	3,7	;select IRP bank0
   473  07E0  303E               	movlw	low (__pdataBANK0+30)
   474  07E1  00FD               	movwf	btemp+-1
   475  07E2  3001               	movlw	high __pidataBANK0
   476  07E3  00FE               	movwf	btemp
   477  07E4  30F6               	movlw	low __pidataBANK0
   478  07E5  00FF               	movwf	btemp+1
   479  07E6  3020               	movlw	low __pdataBANK0
   480  07E7  0084               	movwf	4
   481  07E8  120A  118A  21B1  120A  118A  	fcall	init_ram0
   482                           
   483                           ; Clear objects allocated to BANK1
   484  07ED  1683               	bsf	3,5	;RP0=1, select bank1
   485  07EE  1303               	bcf	3,6	;RP1=0, select bank1
   486  07EF  01A0               	clrf	__pbssBANK1& (0+127)
   487  07F0  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   488  07F1  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   489  07F2  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   490  07F3  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   491                           
   492                           ; Clear objects allocated to BANK0
   493  07F4  3058               	movlw	low __pbssBANK0
   494  07F5  0084               	movwf	4
   495  07F6  306C               	movlw	low (__pbssBANK0+20)
   496  07F7  120A  118A  21A5  120A  118A  	fcall	clear_ram0
   497  07FC                     end_of_initialization:	
   498                           ;End of C runtime variable initialization code
   499                           
   500  07FC                     __end_of__initialization:
   501  07FC  0183               	clrf	3
   502  07FD  120A  118A  2BDA   	ljmp	_main	;jump to C main() function
   503                           
   504                           	psect	bssBANK0
   505  0058                     __pbssBANK0:
   506  0058                     _HT1621_dispram:
   507  0058                     	ds	8
   508  0060                     _ir_code:
   509  0060                     	ds	4
   510  0064                     _inv_command:
   511  0064                     	ds	2
   512  0066                     _command:
   513  0066                     	ds	2
   514  0068                     _address:
   515  0068                     	ds	2
   516  006A                     _HT1621_comi:
   517  006A                     	ds	1
   518  006B                     _HT1621_segi:
   519  006B                     	ds	1
   520                           
   521                           	psect	dataBANK0
   522  0020                     __pdataBANK0:
   523  0020                     _LCD_RAM_Tab:
   524  0020                     	ds	16
   525  0030                     _sec:
   526  0030                     	ds	2
   527  0032                     _min:
   528  0032                     	ds	2
   529  0034                     _hour:
   530  0034                     	ds	2
   531  0036                     _date:
   532  0036                     	ds	2
   533  0038                     _month:
   534  0038                     	ds	2
   535  003A                     _year:
   536  003A                     	ds	2
   537  003C                     _HT1621_addrbit:
   538  003C                     	ds	1
   539  003D                     _HT1621_maxcom:
   540  003D                     	ds	1
   541                           
   542                           	psect	bssBANK1
   543  00A0                     __pbssBANK1:
   544  00A0                     _text:
   545  00A0                     	ds	5
   546                           
   547                           	psect	inittext
   548  01AD                     init_fetch0:	
   549                           ;	Called with low address in FSR and high address in W
   550                           
   551  01AD  087E               	movf	btemp,w
   552  01AE  008A               	movwf	10
   553  01AF  087F               	movf	btemp+1,w
   554  01B0  0082               	movwf	2
   555  01B1                     init_ram0:	
   556                           ;Called with:
   557                           ;	high address of idata address in btemp 
   558                           ;	low address of idata address in btemp+1 
   559                           ;	low address of data in FSR
   560                           ;	high address + 1 of data in btemp-1
   561                           
   562  01B1  120A  118A  21AD  120A  118A  	fcall	init_fetch0
   563  01B6  0080               	movwf	0
   564  01B7  0A84               	incf	4,f
   565  01B8  0804               	movf	4,w
   566  01B9  067D               	xorwf	btemp+-1,w
   567  01BA  1903               	btfsc	3,2
   568  01BB  3400               	retlw	0
   569  01BC  0AFF               	incf	btemp+1,f
   570  01BD  1903               	btfsc	3,2
   571  01BE  0AFE               	incf	btemp,f
   572  01BF  29B1               	goto	init_ram0
   573                           
   574                           	psect	clrtext
   575  01A5                     clear_ram0:	
   576                           ;	Called with FSR containing the base address, and
   577                           ;	W with the last address+1
   578                           
   579  01A5  0064               	clrwdt	;clear the watchdog before getting into this loop
   580  01A6                     clrloop0:
   581  01A6  0180               	clrf	0	;clear RAM location pointed to by FSR
   582  01A7  0A84               	incf	4,f	;increment pointer
   583  01A8  0604               	xorwf	4,w	;XOR with final address
   584  01A9  1903               	btfsc	3,2	;have we reached the end yet?
   585  01AA  3400               	retlw	0	;all done for this memory range, return
   586  01AB  0604               	xorwf	4,w	;XOR again to restore value
   587  01AC  29A6               	goto	clrloop0	;do the next byte
   588                           
   589                           	psect	cstackCOMMON
   590  0071                     __pcstackCOMMON:
   591  0071                     ?_HT1621_Init:
   592  0071                     ?_HT1621_num_init:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0071                     ??_HT1621_num_init:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0071                     ?_main:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0071                     ?_HT1621_Delay_us:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0071                     ?_WriteClockHT1621:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0071                     ?_WriteCommandHT1621:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0071                     ?_delay_us:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0071                     ?___lmul:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0071                     HT1621_Delay_us@ucDat:	
   617                           ; 4 bytes @ 0x0
   618                           
   619  0071                     delay_us@ucDat:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0071                     ___lmul@multiplier:	
   623                           ; 2 bytes @ 0x0
   624                           
   625                           
   626                           ; 4 bytes @ 0x0
   627  0071                     	ds	2
   628  0073                     ??_HT1621_Delay_us:
   629  0073                     ??_delay_us:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0073                     HT1621_Delay_us@d:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0073                     delay_us@d:	
   636                           ; 2 bytes @ 0x2
   637                           
   638                           
   639                           ; 2 bytes @ 0x2
   640  0073                     	ds	2
   641  0075                     ??_WriteClockHT1621:
   642  0075                     ??_WriteCommandHT1621:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0075                     ?_Write1DataHT1621:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0075                     ?_nec_remote_read:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0075                     Write1DataHT1621@Dat:	
   652                           ; 2 bytes @ 0x4
   653                           
   654  0075                     ___lmul@multiplicand:	
   655                           ; 1 bytes @ 0x4
   656                           
   657                           
   658                           ; 4 bytes @ 0x4
   659  0075                     	ds	1
   660  0076                     ??_Write1DataHT1621:
   661                           
   662                           ; 1 bytes @ 0x5
   663  0076                     	ds	1
   664  0077                     ??_nec_remote_read:
   665  0077                     WriteCommandHT1621@FunctonCode:	
   666                           ; 1 bytes @ 0x6
   667                           
   668                           
   669                           ; 1 bytes @ 0x6
   670  0077                     	ds	1
   671  0078                     WriteCommandHT1621@Shift:
   672  0078                     Write1DataHT1621@Addr:	
   673                           ; 1 bytes @ 0x7
   674                           
   675                           
   676                           ; 1 bytes @ 0x7
   677  0078                     	ds	1
   678  0079                     ??___lmul:
   679  0079                     WriteCommandHT1621@i:	
   680                           ; 1 bytes @ 0x8
   681                           
   682  0079                     Write1DataHT1621@i:	
   683                           ; 1 bytes @ 0x8
   684                           
   685                           
   686                           ; 1 bytes @ 0x8
   687  0079                     	ds	1
   688  007A                     ??_HT1621_Init:
   689  007A                     Write1DataHT1621@Shift:	
   690                           ; 1 bytes @ 0x9
   691                           
   692  007A                     ___lmul@product:	
   693                           ; 1 bytes @ 0x9
   694                           
   695                           
   696                           ; 4 bytes @ 0x9
   697  007A                     	ds	1
   698  007B                     ??_IR_test_display:
   699                           
   700                           ; 1 bytes @ 0xA
   701  007B                     	ds	3
   702                           
   703                           	psect	cstackBANK0
   704  003E                     __pcstackBANK0:
   705  003E                     ?_IR_test_display:
   706  003E                     ?___lldiv:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  003E                     IR_test_display@add:	
   710                           ; 4 bytes @ 0x0
   711                           
   712  003E                     nec_remote_read@i:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  003E                     ___lldiv@divisor:	
   716                           ; 4 bytes @ 0x0
   717                           
   718                           
   719                           ; 4 bytes @ 0x0
   720  003E                     	ds	2
   721  0040                     IR_test_display@command:
   722                           
   723                           ; 2 bytes @ 0x2
   724  0040                     	ds	2
   725  0042                     IR_test_display@Temp_Data:
   726  0042                     nec_remote_read@count:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0042                     ___lldiv@dividend:	
   730                           ; 4 bytes @ 0x4
   731                           
   732                           
   733                           ; 4 bytes @ 0x4
   734  0042                     	ds	4
   735  0046                     ??___lldiv:
   736                           
   737                           ; 1 bytes @ 0x8
   738  0046                     	ds	1
   739  0047                     ___lldiv@quotient:
   740                           
   741                           ; 4 bytes @ 0x9
   742  0047                     	ds	4
   743  004B                     ___lldiv@counter:
   744                           
   745                           ; 1 bytes @ 0xD
   746  004B                     	ds	1
   747  004C                     ?_I2C_Init:
   748  004C                     I2C_Init@freq:	
   749                           ; 1 bytes @ 0xE
   750                           
   751                           
   752                           ; 4 bytes @ 0xE
   753  004C                     	ds	4
   754  0050                     ??_I2C_Init:
   755                           
   756                           ; 1 bytes @ 0x12
   757  0050                     	ds	4
   758  0054                     ??_main:
   759                           
   760                           ; 1 bytes @ 0x16
   761  0054                     	ds	4
   762                           
   763                           	psect	maintext
   764  03DA                     __pmaintext:	
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 44 in file "eleclockmain.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : B00/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       4       0       0       0
   787 ;;      Totals:         0       4       0       0       0
   788 ;;Total ram usage:        4 bytes
   789 ;; Hardware stack levels required when called: 4
   790 ;; This function calls:
   791 ;;		_HT1621_Init
   792 ;;		_I2C_Init
   793 ;;		_IR_test_display
   794 ;;		_nec_remote_read
   795 ;; This function is called by:
   796 ;;		Startup code after reset
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _main
   802  03DA                     _main:
   803  03DA                     l2044:	
   804                           ;incstack = 0
   805                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   806                           
   807                           
   808                           ;eleclockmain.c: 45:     TRISB5=0;
   809  03DA  1683               	bsf	3,5	;RP0=1, select bank1
   810  03DB  1303               	bcf	3,6	;RP1=0, select bank1
   811  03DC  1286               	bcf	6,5	;volatile
   812                           
   813                           ;eleclockmain.c: 46:     RB5=0;
   814  03DD  1283               	bcf	3,5	;RP0=0, select bank0
   815  03DE  1303               	bcf	3,6	;RP1=0, select bank0
   816  03DF  1286               	bcf	6,5	;volatile
   817                           
   818                           ;eleclockmain.c: 47:     RB5=1;
   819  03E0  1686               	bsf	6,5	;volatile
   820  03E1                     l2046:
   821                           
   822                           ;eleclockmain.c: 48:     HT1621_Init();
   823  03E1  120A  118A  2234  120A  118A  	fcall	_HT1621_Init
   824  03E6                     l2048:
   825                           
   826                           ;eleclockmain.c: 49:     TRISC1=1;
   827  03E6  1683               	bsf	3,5	;RP0=1, select bank1
   828  03E7  1303               	bcf	3,6	;RP1=0, select bank1
   829  03E8  1487               	bsf	7,1	;volatile
   830                           
   831                           ;eleclockmain.c: 50:     I2C_Init(100);
   832  03E9  3000               	movlw	0
   833  03EA  1283               	bcf	3,5	;RP0=0, select bank0
   834  03EB  1303               	bcf	3,6	;RP1=0, select bank0
   835  03EC  00CF               	movwf	I2C_Init@freq+3
   836  03ED  3000               	movlw	0
   837  03EE  00CE               	movwf	I2C_Init@freq+2
   838  03EF  3000               	movlw	0
   839  03F0  00CD               	movwf	I2C_Init@freq+1
   840  03F1  3064               	movlw	100
   841  03F2  00CC               	movwf	I2C_Init@freq
   842  03F3  120A  118A  22BA  120A  118A  	fcall	_I2C_Init
   843  03F8  2C41               	goto	l2058
   844  03F9                     l2050:
   845                           
   846                           ;eleclockmain.c: 64:         {;eleclockmain.c: 65:             if (nec_remote_read()) {
   847  03F9  120A  118A  25D3  120A  118A  	fcall	_nec_remote_read
   848  03FE  0875               	movf	?_nec_remote_read,w
   849  03FF  0476               	iorwf	?_nec_remote_read+1,w
   850  0400  1903               	btfsc	3,2
   851  0401  2C03               	goto	u1641
   852  0402  2C04               	goto	u1640
   853  0403                     u1641:
   854  0403  2C41               	goto	l2058
   855  0404                     u1640:
   856  0404                     l2052:
   857                           
   858                           ;eleclockmain.c: 66:                 address = ir_code >> 16;
   859  0404  1283               	bcf	3,5	;RP0=0, select bank0
   860  0405  1303               	bcf	3,6	;RP1=0, select bank0
   861  0406  0860               	movf	_ir_code,w
   862  0407  00D4               	movwf	??_main
   863  0408  0861               	movf	_ir_code+1,w
   864  0409  00D5               	movwf	??_main+1
   865  040A  0862               	movf	_ir_code+2,w
   866  040B  00D6               	movwf	??_main+2
   867  040C  0863               	movf	_ir_code+3,w
   868  040D  00D7               	movwf	??_main+3
   869  040E  3010               	movlw	16
   870  040F                     u1655:
   871  040F  1003               	clrc
   872  0410  0CD7               	rrf	??_main+3,f
   873  0411  0CD6               	rrf	??_main+2,f
   874  0412  0CD5               	rrf	??_main+1,f
   875  0413  0CD4               	rrf	??_main,f
   876  0414                     u1650:
   877  0414  3EFF               	addlw	-1
   878  0415  1D03               	skipz
   879  0416  2C0F               	goto	u1655
   880  0417  0855               	movf	??_main+1,w
   881  0418  00E9               	movwf	_address+1
   882  0419  0854               	movf	??_main,w
   883  041A  00E8               	movwf	_address
   884                           
   885                           ;eleclockmain.c: 67:                 command = ir_code >> 8;
   886  041B  0860               	movf	_ir_code,w
   887  041C  00D4               	movwf	??_main
   888  041D  0861               	movf	_ir_code+1,w
   889  041E  00D5               	movwf	??_main+1
   890  041F  0862               	movf	_ir_code+2,w
   891  0420  00D6               	movwf	??_main+2
   892  0421  0863               	movf	_ir_code+3,w
   893  0422  00D7               	movwf	??_main+3
   894  0423  3008               	movlw	8
   895  0424                     u1665:
   896  0424  1003               	clrc
   897  0425  0CD7               	rrf	??_main+3,f
   898  0426  0CD6               	rrf	??_main+2,f
   899  0427  0CD5               	rrf	??_main+1,f
   900  0428  0CD4               	rrf	??_main,f
   901  0429                     u1660:
   902  0429  3EFF               	addlw	-1
   903  042A  1D03               	skipz
   904  042B  2C24               	goto	u1665
   905  042C  0855               	movf	??_main+1,w
   906  042D  00E7               	movwf	_command+1
   907  042E  0854               	movf	??_main,w
   908  042F  00E6               	movwf	_command
   909  0430                     l2054:
   910                           
   911                           ;eleclockmain.c: 68:                 inv_command = ir_code;
   912  0430  0861               	movf	_ir_code+1,w
   913  0431  00E5               	movwf	_inv_command+1
   914  0432  0860               	movf	_ir_code,w
   915  0433  00E4               	movwf	_inv_command
   916  0434                     l2056:
   917                           
   918                           ;eleclockmain.c: 69:                 IR_test_display(address,command);
   919  0434  0869               	movf	_address+1,w
   920  0435  00BF               	movwf	IR_test_display@add+1
   921  0436  0868               	movf	_address,w
   922  0437  00BE               	movwf	IR_test_display@add
   923  0438  0867               	movf	_command+1,w
   924  0439  00C1               	movwf	IR_test_display@command+1
   925  043A  0866               	movf	_command,w
   926  043B  00C0               	movwf	IR_test_display@command
   927  043C  120A  118A  24CE  120A  118A  	fcall	_IR_test_display
   928  0441                     l2058:
   929                           
   930                           ;eleclockmain.c: 63:         while (RC1)
   931  0441  1283               	bcf	3,5	;RP0=0, select bank0
   932  0442  1303               	bcf	3,6	;RP1=0, select bank0
   933  0443  1887               	btfsc	7,1	;volatile
   934  0444  2C46               	goto	u1671
   935  0445  2C47               	goto	u1670
   936  0446                     u1671:
   937  0446  2BF9               	goto	l2050
   938  0447                     u1670:
   939  0447  2C41               	goto	l2058
   940  0448  120A  118A  2801   	ljmp	start
   941  044B                     __end_of_main:
   942                           
   943                           	psect	text1
   944  05D3                     __ptext1:	
   945 ;; *************** function _nec_remote_read *****************
   946 ;; Defined at:
   947 ;;		line 11 in file "irf.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  count           4    4[BANK0 ] unsigned long 
   952 ;;  i               4    0[BANK0 ] unsigned long 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2    4[COMMON] short 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         2       0       0       0       0
   963 ;;      Locals:         0       8       0       0       0
   964 ;;      Temps:          4       0       0       0       0
   965 ;;      Totals:         6       8       0       0       0
   966 ;;Total ram usage:       14 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 1
   969 ;; This function calls:
   970 ;;		_delay_us
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _nec_remote_read
   978  05D3                     _nec_remote_read:
   979  05D3                     l1824:	
   980                           ;incstack = 0
   981                           ; Regs used in _nec_remote_read: [wreg+status,2+status,0+pclath+cstack]
   982                           
   983                           
   984                           ;irf.c: 13:   unsigned long count = 0, i;
   985  05D3  3000               	movlw	0
   986  05D4  1283               	bcf	3,5	;RP0=0, select bank0
   987  05D5  1303               	bcf	3,6	;RP1=0, select bank0
   988  05D6  00C5               	movwf	nec_remote_read@count+3
   989  05D7  3000               	movlw	0
   990  05D8  00C4               	movwf	nec_remote_read@count+2
   991  05D9  3000               	movlw	0
   992  05DA  00C3               	movwf	nec_remote_read@count+1
   993  05DB  3000               	movlw	0
   994  05DC  00C2               	movwf	nec_remote_read@count
   995                           
   996                           ;irf.c: 15:   while ((RC1 == 0) && (count <= 180)) {
   997  05DD  2DF7               	goto	l1830
   998  05DE                     l1826:
   999                           
  1000                           ;irf.c: 16:     count++;
  1001  05DE  3001               	movlw	1
  1002  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1003  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1004  05E1  07C2               	addwf	nec_remote_read@count,f
  1005  05E2  3000               	movlw	0
  1006  05E3  1803               	skipnc
  1007  05E4  3001               	movlw	1
  1008  05E5  07C3               	addwf	nec_remote_read@count+1,f
  1009  05E6  3000               	movlw	0
  1010  05E7  1803               	skipnc
  1011  05E8  3001               	movlw	1
  1012  05E9  07C4               	addwf	nec_remote_read@count+2,f
  1013  05EA  3000               	movlw	0
  1014  05EB  1803               	skipnc
  1015  05EC  3001               	movlw	1
  1016  05ED  07C5               	addwf	nec_remote_read@count+3,f
  1017  05EE                     l1828:
  1018                           
  1019                           ;irf.c: 17:     delay_us(50);
  1020  05EE  3032               	movlw	50
  1021  05EF  00F1               	movwf	delay_us@ucDat
  1022  05F0  3000               	movlw	0
  1023  05F1  00F2               	movwf	delay_us@ucDat+1
  1024  05F2  120A  118A  21D9  120A  118A  	fcall	_delay_us
  1025  05F7                     l1830:
  1026                           
  1027                           ;irf.c: 15:   while ((RC1 == 0) && (count <= 180)) {
  1028  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1029  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1030  05F9  1887               	btfsc	7,1	;volatile
  1031  05FA  2DFC               	goto	u1261
  1032  05FB  2DFD               	goto	u1260
  1033  05FC                     u1261:
  1034  05FC  2E0E               	goto	l1834
  1035  05FD                     u1260:
  1036  05FD                     l1832:
  1037  05FD  0845               	movf	nec_remote_read@count+3,w
  1038  05FE  1D03               	btfss	3,2
  1039  05FF  2E0E               	goto	u1270
  1040  0600  0844               	movf	nec_remote_read@count+2,w
  1041  0601  1D03               	btfss	3,2
  1042  0602  2E0E               	goto	u1270
  1043  0603  0843               	movf	nec_remote_read@count+1,w
  1044  0604  1D03               	btfss	3,2
  1045  0605  2E0E               	goto	u1270
  1046  0606  30B5               	movlw	181
  1047  0607  0242               	subwf	nec_remote_read@count,w
  1048  0608  1D03               	skipz
  1049  0609  2E0A               	goto	u1273
  1050  060A                     u1273:
  1051  060A  1C03               	btfss	3,0
  1052  060B  2E0D               	goto	u1271
  1053  060C  2E0E               	goto	u1270
  1054  060D                     u1271:
  1055  060D  2DDE               	goto	l1826
  1056  060E                     u1270:
  1057  060E                     l1834:
  1058                           
  1059                           ;irf.c: 19:   if ( (count > 179) || (count < 120))
  1060  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1061  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0610  0845               	movf	nec_remote_read@count+3,w
  1063  0611  1D03               	btfss	3,2
  1064  0612  2E20               	goto	u1281
  1065  0613  0844               	movf	nec_remote_read@count+2,w
  1066  0614  1D03               	btfss	3,2
  1067  0615  2E20               	goto	u1281
  1068  0616  0843               	movf	nec_remote_read@count+1,w
  1069  0617  1D03               	btfss	3,2
  1070  0618  2E20               	goto	u1281
  1071  0619  30B4               	movlw	180
  1072  061A  0242               	subwf	nec_remote_read@count,w
  1073  061B  1D03               	skipz
  1074  061C  2E1D               	goto	u1283
  1075  061D                     u1283:
  1076  061D  1803               	btfsc	3,0
  1077  061E  2E20               	goto	u1281
  1078  061F  2E21               	goto	u1280
  1079  0620                     u1281:
  1080  0620  2E34               	goto	l1838
  1081  0621                     u1280:
  1082  0621                     l1836:
  1083  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0623  0845               	movf	nec_remote_read@count+3,w
  1086  0624  1D03               	btfss	3,2
  1087  0625  2E33               	goto	u1291
  1088  0626  0844               	movf	nec_remote_read@count+2,w
  1089  0627  1D03               	btfss	3,2
  1090  0628  2E33               	goto	u1291
  1091  0629  0843               	movf	nec_remote_read@count+1,w
  1092  062A  1D03               	btfss	3,2
  1093  062B  2E33               	goto	u1291
  1094  062C  3078               	movlw	120
  1095  062D  0242               	subwf	nec_remote_read@count,w
  1096  062E  1D03               	skipz
  1097  062F  2E30               	goto	u1293
  1098  0630                     u1293:
  1099  0630  1803               	btfsc	3,0
  1100  0631  2E33               	goto	u1291
  1101  0632  2E34               	goto	u1290
  1102  0633                     u1291:
  1103  0633  2E37               	goto	l1842
  1104  0634                     u1290:
  1105  0634                     l1838:
  1106                           
  1107                           ;irf.c: 20:     return 0;
  1108  0634  01F5               	clrf	?_nec_remote_read
  1109  0635  01F6               	clrf	?_nec_remote_read+1
  1110  0636  2FDE               	goto	l292
  1111  0637                     l1842:
  1112                           
  1113                           ;irf.c: 22:   count = 0;
  1114  0637  3000               	movlw	0
  1115  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1117  063A  00C5               	movwf	nec_remote_read@count+3
  1118  063B  3000               	movlw	0
  1119  063C  00C4               	movwf	nec_remote_read@count+2
  1120  063D  3000               	movlw	0
  1121  063E  00C3               	movwf	nec_remote_read@count+1
  1122  063F  3000               	movlw	0
  1123  0640  00C2               	movwf	nec_remote_read@count
  1124                           
  1125                           ;irf.c: 24:   while (RC1 && (count <= 90)) {
  1126  0641  2E5B               	goto	l1848
  1127  0642                     l1844:
  1128                           
  1129                           ;irf.c: 25:     count++;
  1130  0642  3001               	movlw	1
  1131  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0645  07C2               	addwf	nec_remote_read@count,f
  1134  0646  3000               	movlw	0
  1135  0647  1803               	skipnc
  1136  0648  3001               	movlw	1
  1137  0649  07C3               	addwf	nec_remote_read@count+1,f
  1138  064A  3000               	movlw	0
  1139  064B  1803               	skipnc
  1140  064C  3001               	movlw	1
  1141  064D  07C4               	addwf	nec_remote_read@count+2,f
  1142  064E  3000               	movlw	0
  1143  064F  1803               	skipnc
  1144  0650  3001               	movlw	1
  1145  0651  07C5               	addwf	nec_remote_read@count+3,f
  1146  0652                     l1846:
  1147                           
  1148                           ;irf.c: 26:     delay_us(50);
  1149  0652  3032               	movlw	50
  1150  0653  00F1               	movwf	delay_us@ucDat
  1151  0654  3000               	movlw	0
  1152  0655  00F2               	movwf	delay_us@ucDat+1
  1153  0656  120A  118A  21D9  120A  118A  	fcall	_delay_us
  1154  065B                     l1848:
  1155                           
  1156                           ;irf.c: 24:   while (RC1 && (count <= 90)) {
  1157  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1158  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1159  065D  1C87               	btfss	7,1	;volatile
  1160  065E  2E60               	goto	u1301
  1161  065F  2E61               	goto	u1300
  1162  0660                     u1301:
  1163  0660  2E72               	goto	l1852
  1164  0661                     u1300:
  1165  0661                     l1850:
  1166  0661  0845               	movf	nec_remote_read@count+3,w
  1167  0662  1D03               	btfss	3,2
  1168  0663  2E72               	goto	u1310
  1169  0664  0844               	movf	nec_remote_read@count+2,w
  1170  0665  1D03               	btfss	3,2
  1171  0666  2E72               	goto	u1310
  1172  0667  0843               	movf	nec_remote_read@count+1,w
  1173  0668  1D03               	btfss	3,2
  1174  0669  2E72               	goto	u1310
  1175  066A  305B               	movlw	91
  1176  066B  0242               	subwf	nec_remote_read@count,w
  1177  066C  1D03               	skipz
  1178  066D  2E6E               	goto	u1313
  1179  066E                     u1313:
  1180  066E  1C03               	btfss	3,0
  1181  066F  2E71               	goto	u1311
  1182  0670  2E72               	goto	u1310
  1183  0671                     u1311:
  1184  0671  2E42               	goto	l1844
  1185  0672                     u1310:
  1186  0672                     l1852:
  1187                           
  1188                           ;irf.c: 28:   if ( (count > 89) || (count < 40))
  1189  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0674  0845               	movf	nec_remote_read@count+3,w
  1192  0675  1D03               	btfss	3,2
  1193  0676  2E84               	goto	u1321
  1194  0677  0844               	movf	nec_remote_read@count+2,w
  1195  0678  1D03               	btfss	3,2
  1196  0679  2E84               	goto	u1321
  1197  067A  0843               	movf	nec_remote_read@count+1,w
  1198  067B  1D03               	btfss	3,2
  1199  067C  2E84               	goto	u1321
  1200  067D  305A               	movlw	90
  1201  067E  0242               	subwf	nec_remote_read@count,w
  1202  067F  1D03               	skipz
  1203  0680  2E81               	goto	u1323
  1204  0681                     u1323:
  1205  0681  1803               	btfsc	3,0
  1206  0682  2E84               	goto	u1321
  1207  0683  2E85               	goto	u1320
  1208  0684                     u1321:
  1209  0684  2E34               	goto	l1838
  1210  0685                     u1320:
  1211  0685                     l1854:
  1212  0685  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0686  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0687  0845               	movf	nec_remote_read@count+3,w
  1215  0688  1D03               	btfss	3,2
  1216  0689  2E97               	goto	u1331
  1217  068A  0844               	movf	nec_remote_read@count+2,w
  1218  068B  1D03               	btfss	3,2
  1219  068C  2E97               	goto	u1331
  1220  068D  0843               	movf	nec_remote_read@count+1,w
  1221  068E  1D03               	btfss	3,2
  1222  068F  2E97               	goto	u1331
  1223  0690  3028               	movlw	40
  1224  0691  0242               	subwf	nec_remote_read@count,w
  1225  0692  1D03               	skipz
  1226  0693  2E94               	goto	u1333
  1227  0694                     u1333:
  1228  0694  1803               	btfsc	3,0
  1229  0695  2E97               	goto	u1331
  1230  0696  2E98               	goto	u1330
  1231  0697                     u1331:
  1232  0697  2E99               	goto	l1860
  1233  0698                     u1330:
  1234  0698  2E34               	goto	l1838
  1235  0699                     l1860:
  1236                           
  1237                           ;irf.c: 32:   for (i = 0; i < 32; i++) {
  1238  0699  3000               	movlw	0
  1239  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1240  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1241  069C  00C1               	movwf	nec_remote_read@i+3
  1242  069D  3000               	movlw	0
  1243  069E  00C0               	movwf	nec_remote_read@i+2
  1244  069F  3000               	movlw	0
  1245  06A0  00BF               	movwf	nec_remote_read@i+1
  1246  06A1  3000               	movlw	0
  1247  06A2  00BE               	movwf	nec_remote_read@i
  1248  06A3                     l1866:
  1249                           
  1250                           ;irf.c: 33:     count = 0;
  1251  06A3  3000               	movlw	0
  1252  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1253  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1254  06A6  00C5               	movwf	nec_remote_read@count+3
  1255  06A7  3000               	movlw	0
  1256  06A8  00C4               	movwf	nec_remote_read@count+2
  1257  06A9  3000               	movlw	0
  1258  06AA  00C3               	movwf	nec_remote_read@count+1
  1259  06AB  3000               	movlw	0
  1260  06AC  00C2               	movwf	nec_remote_read@count
  1261                           
  1262                           ;irf.c: 34:     while ((RC1 == 0) && (count <= 23)) {
  1263  06AD  2EC7               	goto	l1872
  1264  06AE                     l1868:
  1265                           
  1266                           ;irf.c: 35:       count++;
  1267  06AE  3001               	movlw	1
  1268  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1269  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1270  06B1  07C2               	addwf	nec_remote_read@count,f
  1271  06B2  3000               	movlw	0
  1272  06B3  1803               	skipnc
  1273  06B4  3001               	movlw	1
  1274  06B5  07C3               	addwf	nec_remote_read@count+1,f
  1275  06B6  3000               	movlw	0
  1276  06B7  1803               	skipnc
  1277  06B8  3001               	movlw	1
  1278  06B9  07C4               	addwf	nec_remote_read@count+2,f
  1279  06BA  3000               	movlw	0
  1280  06BB  1803               	skipnc
  1281  06BC  3001               	movlw	1
  1282  06BD  07C5               	addwf	nec_remote_read@count+3,f
  1283  06BE                     l1870:
  1284                           
  1285                           ;irf.c: 36:       delay_us(50);
  1286  06BE  3032               	movlw	50
  1287  06BF  00F1               	movwf	delay_us@ucDat
  1288  06C0  3000               	movlw	0
  1289  06C1  00F2               	movwf	delay_us@ucDat+1
  1290  06C2  120A  118A  21D9  120A  118A  	fcall	_delay_us
  1291  06C7                     l1872:
  1292                           
  1293                           ;irf.c: 34:     while ((RC1 == 0) && (count <= 23)) {
  1294  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1295  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1296  06C9  1887               	btfsc	7,1	;volatile
  1297  06CA  2ECC               	goto	u1341
  1298  06CB  2ECD               	goto	u1340
  1299  06CC                     u1341:
  1300  06CC  2EDE               	goto	l1876
  1301  06CD                     u1340:
  1302  06CD                     l1874:
  1303  06CD  0845               	movf	nec_remote_read@count+3,w
  1304  06CE  1D03               	btfss	3,2
  1305  06CF  2EDE               	goto	u1350
  1306  06D0  0844               	movf	nec_remote_read@count+2,w
  1307  06D1  1D03               	btfss	3,2
  1308  06D2  2EDE               	goto	u1350
  1309  06D3  0843               	movf	nec_remote_read@count+1,w
  1310  06D4  1D03               	btfss	3,2
  1311  06D5  2EDE               	goto	u1350
  1312  06D6  3018               	movlw	24
  1313  06D7  0242               	subwf	nec_remote_read@count,w
  1314  06D8  1D03               	skipz
  1315  06D9  2EDA               	goto	u1353
  1316  06DA                     u1353:
  1317  06DA  1C03               	btfss	3,0
  1318  06DB  2EDD               	goto	u1351
  1319  06DC  2EDE               	goto	u1350
  1320  06DD                     u1351:
  1321  06DD  2EAE               	goto	l1868
  1322  06DE                     u1350:
  1323  06DE                     l1876:
  1324                           
  1325                           ;irf.c: 38:     if ( (count > 22) || (count < 4))
  1326  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1327  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1328  06E0  0845               	movf	nec_remote_read@count+3,w
  1329  06E1  1D03               	btfss	3,2
  1330  06E2  2EF0               	goto	u1361
  1331  06E3  0844               	movf	nec_remote_read@count+2,w
  1332  06E4  1D03               	btfss	3,2
  1333  06E5  2EF0               	goto	u1361
  1334  06E6  0843               	movf	nec_remote_read@count+1,w
  1335  06E7  1D03               	btfss	3,2
  1336  06E8  2EF0               	goto	u1361
  1337  06E9  3017               	movlw	23
  1338  06EA  0242               	subwf	nec_remote_read@count,w
  1339  06EB  1D03               	skipz
  1340  06EC  2EED               	goto	u1363
  1341  06ED                     u1363:
  1342  06ED  1803               	btfsc	3,0
  1343  06EE  2EF0               	goto	u1361
  1344  06EF  2EF1               	goto	u1360
  1345  06F0                     u1361:
  1346  06F0  2E34               	goto	l1838
  1347  06F1                     u1360:
  1348  06F1                     l1878:
  1349  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1350  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1351  06F3  0845               	movf	nec_remote_read@count+3,w
  1352  06F4  1D03               	btfss	3,2
  1353  06F5  2F03               	goto	u1371
  1354  06F6  0844               	movf	nec_remote_read@count+2,w
  1355  06F7  1D03               	btfss	3,2
  1356  06F8  2F03               	goto	u1371
  1357  06F9  0843               	movf	nec_remote_read@count+1,w
  1358  06FA  1D03               	btfss	3,2
  1359  06FB  2F03               	goto	u1371
  1360  06FC  3004               	movlw	4
  1361  06FD  0242               	subwf	nec_remote_read@count,w
  1362  06FE  1D03               	skipz
  1363  06FF  2F00               	goto	u1373
  1364  0700                     u1373:
  1365  0700  1803               	btfsc	3,0
  1366  0701  2F03               	goto	u1371
  1367  0702  2F04               	goto	u1370
  1368  0703                     u1371:
  1369  0703  2F05               	goto	l1884
  1370  0704                     u1370:
  1371  0704  2E34               	goto	l1838
  1372  0705                     l1884:
  1373                           
  1374                           ;irf.c: 41:     count = 0;
  1375  0705  3000               	movlw	0
  1376  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0708  00C5               	movwf	nec_remote_read@count+3
  1379  0709  3000               	movlw	0
  1380  070A  00C4               	movwf	nec_remote_read@count+2
  1381  070B  3000               	movlw	0
  1382  070C  00C3               	movwf	nec_remote_read@count+1
  1383  070D  3000               	movlw	0
  1384  070E  00C2               	movwf	nec_remote_read@count
  1385                           
  1386                           ;irf.c: 42:     while (RC1 && (count <= 45)) {
  1387  070F  2F29               	goto	l1890
  1388  0710                     l1886:
  1389                           
  1390                           ;irf.c: 43:       count++;
  1391  0710  3001               	movlw	1
  1392  0711  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0712  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0713  07C2               	addwf	nec_remote_read@count,f
  1395  0714  3000               	movlw	0
  1396  0715  1803               	skipnc
  1397  0716  3001               	movlw	1
  1398  0717  07C3               	addwf	nec_remote_read@count+1,f
  1399  0718  3000               	movlw	0
  1400  0719  1803               	skipnc
  1401  071A  3001               	movlw	1
  1402  071B  07C4               	addwf	nec_remote_read@count+2,f
  1403  071C  3000               	movlw	0
  1404  071D  1803               	skipnc
  1405  071E  3001               	movlw	1
  1406  071F  07C5               	addwf	nec_remote_read@count+3,f
  1407  0720                     l1888:
  1408                           
  1409                           ;irf.c: 44:       delay_us(50);
  1410  0720  3032               	movlw	50
  1411  0721  00F1               	movwf	delay_us@ucDat
  1412  0722  3000               	movlw	0
  1413  0723  00F2               	movwf	delay_us@ucDat+1
  1414  0724  120A  118A  21D9  120A  118A  	fcall	_delay_us
  1415  0729                     l1890:
  1416                           
  1417                           ;irf.c: 42:     while (RC1 && (count <= 45)) {
  1418  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1419  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1420  072B  1C87               	btfss	7,1	;volatile
  1421  072C  2F2E               	goto	u1381
  1422  072D  2F2F               	goto	u1380
  1423  072E                     u1381:
  1424  072E  2F40               	goto	l1894
  1425  072F                     u1380:
  1426  072F                     l1892:
  1427  072F  0845               	movf	nec_remote_read@count+3,w
  1428  0730  1D03               	btfss	3,2
  1429  0731  2F40               	goto	u1390
  1430  0732  0844               	movf	nec_remote_read@count+2,w
  1431  0733  1D03               	btfss	3,2
  1432  0734  2F40               	goto	u1390
  1433  0735  0843               	movf	nec_remote_read@count+1,w
  1434  0736  1D03               	btfss	3,2
  1435  0737  2F40               	goto	u1390
  1436  0738  302E               	movlw	46
  1437  0739  0242               	subwf	nec_remote_read@count,w
  1438  073A  1D03               	skipz
  1439  073B  2F3C               	goto	u1393
  1440  073C                     u1393:
  1441  073C  1C03               	btfss	3,0
  1442  073D  2F3F               	goto	u1391
  1443  073E  2F40               	goto	u1390
  1444  073F                     u1391:
  1445  073F  2F10               	goto	l1886
  1446  0740                     u1390:
  1447  0740                     l1894:
  1448                           
  1449                           ;irf.c: 46:     if ( (count > 44) || (count < 8))
  1450  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0742  0845               	movf	nec_remote_read@count+3,w
  1453  0743  1D03               	btfss	3,2
  1454  0744  2F52               	goto	u1401
  1455  0745  0844               	movf	nec_remote_read@count+2,w
  1456  0746  1D03               	btfss	3,2
  1457  0747  2F52               	goto	u1401
  1458  0748  0843               	movf	nec_remote_read@count+1,w
  1459  0749  1D03               	btfss	3,2
  1460  074A  2F52               	goto	u1401
  1461  074B  302D               	movlw	45
  1462  074C  0242               	subwf	nec_remote_read@count,w
  1463  074D  1D03               	skipz
  1464  074E  2F4F               	goto	u1403
  1465  074F                     u1403:
  1466  074F  1803               	btfsc	3,0
  1467  0750  2F52               	goto	u1401
  1468  0751  2F53               	goto	u1400
  1469  0752                     u1401:
  1470  0752  2E34               	goto	l1838
  1471  0753                     u1400:
  1472  0753                     l1896:
  1473  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0755  0845               	movf	nec_remote_read@count+3,w
  1476  0756  1D03               	btfss	3,2
  1477  0757  2F65               	goto	u1411
  1478  0758  0844               	movf	nec_remote_read@count+2,w
  1479  0759  1D03               	btfss	3,2
  1480  075A  2F65               	goto	u1411
  1481  075B  0843               	movf	nec_remote_read@count+1,w
  1482  075C  1D03               	btfss	3,2
  1483  075D  2F65               	goto	u1411
  1484  075E  3008               	movlw	8
  1485  075F  0242               	subwf	nec_remote_read@count,w
  1486  0760  1D03               	skipz
  1487  0761  2F62               	goto	u1413
  1488  0762                     u1413:
  1489  0762  1803               	btfsc	3,0
  1490  0763  2F65               	goto	u1411
  1491  0764  2F66               	goto	u1410
  1492  0765                     u1411:
  1493  0765  2F67               	goto	l1902
  1494  0766                     u1410:
  1495  0766  2E34               	goto	l1838
  1496  0767                     l1902:
  1497                           
  1498                           ;irf.c: 49:     if ( count > 21)
  1499  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0769  0845               	movf	nec_remote_read@count+3,w
  1502  076A  1D03               	btfss	3,2
  1503  076B  2F7A               	goto	u1420
  1504  076C  0844               	movf	nec_remote_read@count+2,w
  1505  076D  1D03               	btfss	3,2
  1506  076E  2F7A               	goto	u1420
  1507  076F  0843               	movf	nec_remote_read@count+1,w
  1508  0770  1D03               	btfss	3,2
  1509  0771  2F7A               	goto	u1420
  1510  0772  3016               	movlw	22
  1511  0773  0242               	subwf	nec_remote_read@count,w
  1512  0774  1D03               	skipz
  1513  0775  2F76               	goto	u1423
  1514  0776                     u1423:
  1515  0776  1C03               	btfss	3,0
  1516  0777  2F79               	goto	u1421
  1517  0778  2F7A               	goto	u1420
  1518  0779                     u1421:
  1519  0779  2F99               	goto	l1906
  1520  077A                     u1420:
  1521  077A                     l1904:
  1522                           
  1523                           ;irf.c: 50:       ir_code |= 1ul << (31 - i);
  1524  077A  3001               	movlw	1
  1525  077B  00F7               	movwf	??_nec_remote_read
  1526  077C  3000               	movlw	0
  1527  077D  00F8               	movwf	??_nec_remote_read+1
  1528  077E  3000               	movlw	0
  1529  077F  00F9               	movwf	??_nec_remote_read+2
  1530  0780  3000               	movlw	0
  1531  0781  00FA               	movwf	??_nec_remote_read+3
  1532  0782  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0783  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0784  083E               	movf	nec_remote_read@i,w
  1535  0785  3C1F               	sublw	31
  1536  0786  3E01               	addlw	1
  1537  0787  2F8D               	goto	u1430
  1538  0788                     u1435:
  1539  0788  1003               	clrc
  1540  0789  0DF7               	rlf	??_nec_remote_read,f
  1541  078A  0DF8               	rlf	??_nec_remote_read+1,f
  1542  078B  0DF9               	rlf	??_nec_remote_read+2,f
  1543  078C  0DFA               	rlf	??_nec_remote_read+3,f
  1544  078D                     u1430:
  1545  078D  3EFF               	addlw	-1
  1546  078E  1D03               	skipz
  1547  078F  2F88               	goto	u1435
  1548  0790  0877               	movf	??_nec_remote_read,w
  1549  0791  04E0               	iorwf	_ir_code,f
  1550  0792  0878               	movf	??_nec_remote_read+1,w
  1551  0793  04E1               	iorwf	_ir_code+1,f
  1552  0794  0879               	movf	??_nec_remote_read+2,w
  1553  0795  04E2               	iorwf	_ir_code+2,f
  1554  0796  087A               	movf	??_nec_remote_read+3,w
  1555  0797  04E3               	iorwf	_ir_code+3,f
  1556  0798  2FBB               	goto	l1908
  1557  0799                     l1906:
  1558                           
  1559                           ;irf.c: 52:       ir_code &= ~(1ul << (31 - i));
  1560  0799  3001               	movlw	1
  1561  079A  00F7               	movwf	??_nec_remote_read
  1562  079B  3000               	movlw	0
  1563  079C  00F8               	movwf	??_nec_remote_read+1
  1564  079D  3000               	movlw	0
  1565  079E  00F9               	movwf	??_nec_remote_read+2
  1566  079F  3000               	movlw	0
  1567  07A0  00FA               	movwf	??_nec_remote_read+3
  1568  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1569  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1570  07A3  083E               	movf	nec_remote_read@i,w
  1571  07A4  3C1F               	sublw	31
  1572  07A5  3E01               	addlw	1
  1573  07A6  2FAC               	goto	u1440
  1574  07A7                     u1445:
  1575  07A7  1003               	clrc
  1576  07A8  0DF7               	rlf	??_nec_remote_read,f
  1577  07A9  0DF8               	rlf	??_nec_remote_read+1,f
  1578  07AA  0DF9               	rlf	??_nec_remote_read+2,f
  1579  07AB  0DFA               	rlf	??_nec_remote_read+3,f
  1580  07AC                     u1440:
  1581  07AC  3EFF               	addlw	-1
  1582  07AD  1D03               	skipz
  1583  07AE  2FA7               	goto	u1445
  1584  07AF  09F7               	comf	??_nec_remote_read,f
  1585  07B0  09F8               	comf	??_nec_remote_read+1,f
  1586  07B1  09F9               	comf	??_nec_remote_read+2,f
  1587  07B2  09FA               	comf	??_nec_remote_read+3,f
  1588  07B3  0877               	movf	??_nec_remote_read,w
  1589  07B4  05E0               	andwf	_ir_code,f
  1590  07B5  0878               	movf	??_nec_remote_read+1,w
  1591  07B6  05E1               	andwf	_ir_code+1,f
  1592  07B7  0879               	movf	??_nec_remote_read+2,w
  1593  07B8  05E2               	andwf	_ir_code+2,f
  1594  07B9  087A               	movf	??_nec_remote_read+3,w
  1595  07BA  05E3               	andwf	_ir_code+3,f
  1596  07BB                     l1908:
  1597                           
  1598                           ;irf.c: 53:   }
  1599  07BB  3001               	movlw	1
  1600  07BC  07BE               	addwf	nec_remote_read@i,f
  1601  07BD  3000               	movlw	0
  1602  07BE  1803               	skipnc
  1603  07BF  3001               	movlw	1
  1604  07C0  07BF               	addwf	nec_remote_read@i+1,f
  1605  07C1  3000               	movlw	0
  1606  07C2  1803               	skipnc
  1607  07C3  3001               	movlw	1
  1608  07C4  07C0               	addwf	nec_remote_read@i+2,f
  1609  07C5  3000               	movlw	0
  1610  07C6  1803               	skipnc
  1611  07C7  3001               	movlw	1
  1612  07C8  07C1               	addwf	nec_remote_read@i+3,f
  1613  07C9                     l1910:
  1614  07C9  0841               	movf	nec_remote_read@i+3,w
  1615  07CA  1D03               	btfss	3,2
  1616  07CB  2FDA               	goto	u1450
  1617  07CC  0840               	movf	nec_remote_read@i+2,w
  1618  07CD  1D03               	btfss	3,2
  1619  07CE  2FDA               	goto	u1450
  1620  07CF  083F               	movf	nec_remote_read@i+1,w
  1621  07D0  1D03               	btfss	3,2
  1622  07D1  2FDA               	goto	u1450
  1623  07D2  3020               	movlw	32
  1624  07D3  023E               	subwf	nec_remote_read@i,w
  1625  07D4  1D03               	skipz
  1626  07D5  2FD6               	goto	u1453
  1627  07D6                     u1453:
  1628  07D6  1C03               	btfss	3,0
  1629  07D7  2FD9               	goto	u1451
  1630  07D8  2FDA               	goto	u1450
  1631  07D9                     u1451:
  1632  07D9  2EA3               	goto	l1866
  1633  07DA                     u1450:
  1634  07DA                     l1912:
  1635                           
  1636                           ;irf.c: 54:   return 1;
  1637  07DA  3001               	movlw	1
  1638  07DB  00F5               	movwf	?_nec_remote_read
  1639  07DC  3000               	movlw	0
  1640  07DD  00F6               	movwf	?_nec_remote_read+1
  1641  07DE                     l292:
  1642  07DE  0008               	return
  1643  07DF                     __end_of_nec_remote_read:
  1644                           
  1645                           	psect	text2
  1646  01D9                     __ptext2:	
  1647 ;; *************** function _delay_us *****************
  1648 ;; Defined at:
  1649 ;;		line 3 in file "irf.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  ucDat           2    0[COMMON] unsigned int 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  d               2    2[COMMON] unsigned int 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         2       0       0       0       0
  1664 ;;      Locals:         2       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         4       0       0       0       0
  1667 ;;Total ram usage:        4 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_nec_remote_read
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _delay_us
  1678  01D9                     _delay_us:
  1679  01D9                     l276:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1682                           ;irf.c: 4:     do{
  1683                           
  1684  01D9                     l1756:
  1685                           
  1686                           ;irf.c: 5:         unsigned int d=200;
  1687  01D9  30C8               	movlw	200
  1688  01DA  00F3               	movwf	delay_us@d
  1689  01DB  3000               	movlw	0
  1690  01DC  00F4               	movwf	delay_us@d+1
  1691  01DD                     l1758:	
  1692                           ;irf.c: 6:         while(--d){;}
  1693                           
  1694  01DD  3001               	movlw	1
  1695  01DE  02F3               	subwf	delay_us@d,f
  1696  01DF  3000               	movlw	0
  1697  01E0  1C03               	skipc
  1698  01E1  03F4               	decf	delay_us@d+1,f
  1699  01E2  02F4               	subwf	delay_us@d+1,f
  1700  01E3  0873               	movf	delay_us@d,w
  1701  01E4  0474               	iorwf	delay_us@d+1,w
  1702  01E5  1D03               	btfss	3,2
  1703  01E6  29E8               	goto	u1111
  1704  01E7  29E9               	goto	u1110
  1705  01E8                     u1111:
  1706  01E8  29DD               	goto	l1758
  1707  01E9                     u1110:
  1708  01E9                     l1760:
  1709                           
  1710                           ;irf.c: 7:     }while(--ucDat);
  1711  01E9  3001               	movlw	1
  1712  01EA  02F1               	subwf	delay_us@ucDat,f
  1713  01EB  3000               	movlw	0
  1714  01EC  1C03               	skipc
  1715  01ED  03F2               	decf	delay_us@ucDat+1,f
  1716  01EE  02F2               	subwf	delay_us@ucDat+1,f
  1717  01EF  0871               	movf	delay_us@ucDat,w
  1718  01F0  0472               	iorwf	delay_us@ucDat+1,w
  1719  01F1  1D03               	btfss	3,2
  1720  01F2  29F4               	goto	u1121
  1721  01F3  29F5               	goto	u1120
  1722  01F4                     u1121:
  1723  01F4  29D9               	goto	l276
  1724  01F5                     u1120:
  1725  01F5                     l281:
  1726  01F5  0008               	return
  1727  01F6                     __end_of_delay_us:
  1728                           
  1729                           	psect	text3
  1730  04CE                     __ptext3:	
  1731 ;; *************** function _IR_test_display *****************
  1732 ;; Defined at:
  1733 ;;		line 491 in file "ht1621.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  add             2    0[BANK0 ] unsigned int 
  1736 ;;  command         2    2[BANK0 ] unsigned int 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  Temp_Data       1    4[BANK0 ] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         0       4       0       0       0
  1749 ;;      Locals:         0       1       0       0       0
  1750 ;;      Temps:          3       0       0       0       0
  1751 ;;      Totals:         3       5       0       0       0
  1752 ;;Total ram usage:        8 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 3
  1755 ;; This function calls:
  1756 ;;		_Write1DataHT1621
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _IR_test_display
  1764  04CE                     _IR_test_display:
  1765  04CE                     l1916:	
  1766                           ;incstack = 0
  1767                           ; Regs used in _IR_test_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1768                           
  1769                           
  1770                           ;ht1621.c: 492:     unsigned char Temp_Data;;ht1621.c: 493:     Temp_Data = add/16;
  1771  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1772  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1773  04D0  083F               	movf	IR_test_display@add+1,w
  1774  04D1  00FC               	movwf	??_IR_test_display+1
  1775  04D2  083E               	movf	IR_test_display@add,w
  1776  04D3  00FB               	movwf	??_IR_test_display
  1777  04D4  3004               	movlw	4
  1778  04D5                     u1465:
  1779  04D5  1003               	clrc
  1780  04D6  0CFC               	rrf	??_IR_test_display+1,f
  1781  04D7  0CFB               	rrf	??_IR_test_display,f
  1782  04D8  3EFF               	addlw	-1
  1783  04D9  1D03               	skipz
  1784  04DA  2CD5               	goto	u1465
  1785  04DB  087B               	movf	??_IR_test_display,w
  1786  04DC  00FD               	movwf	??_IR_test_display+2
  1787  04DD  087D               	movf	??_IR_test_display+2,w
  1788  04DE  00C2               	movwf	IR_test_display@Temp_Data
  1789  04DF                     l1918:
  1790                           
  1791                           ;ht1621.c: 495:     Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4);
  1792  04DF  0842               	movf	IR_test_display@Temp_Data,w
  1793  04E0  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1794  04E1  0084               	movwf	4
  1795  04E2  1383               	bcf	3,7	;select IRP bank0
  1796  04E3  0800               	movf	0,w
  1797  04E4  00FB               	movwf	??_IR_test_display
  1798  04E5  3004               	movlw	4
  1799  04E6                     u1475:
  1800  04E6  1003               	clrc
  1801  04E7  0CFB               	rrf	??_IR_test_display,f
  1802  04E8  3EFF               	addlw	-1
  1803  04E9  1D03               	skipz
  1804  04EA  2CE6               	goto	u1475
  1805  04EB  087B               	movf	??_IR_test_display,w
  1806  04EC  00FC               	movwf	??_IR_test_display+1
  1807  04ED  087C               	movf	??_IR_test_display+1,w
  1808  04EE  00F5               	movwf	Write1DataHT1621@Dat
  1809  04EF  3001               	movlw	low (_HT1621_segtab-__stringbase)
  1810  04F0  0084               	movwf	4
  1811  04F1  120A  118A  2004  120A  118A  	fcall	stringdir
  1812  04F6  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1813  04FB                     l1920:
  1814                           
  1815                           ;ht1621.c: 496:  Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0);
  1816  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1817  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1818  04FD  0842               	movf	IR_test_display@Temp_Data,w
  1819  04FE  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1820  04FF  0084               	movwf	4
  1821  0500  1383               	bcf	3,7	;select IRP bank0
  1822  0501  0800               	movf	0,w
  1823  0502  00FB               	movwf	??_IR_test_display
  1824  0503  087B               	movf	??_IR_test_display,w
  1825  0504  00F5               	movwf	Write1DataHT1621@Dat
  1826  0505  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  1827  0506  0084               	movwf	4
  1828  0507  120A  118A  2004  120A  118A  	fcall	stringdir
  1829  050C  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1830  0511                     l1922:
  1831                           
  1832                           ;ht1621.c: 497:     Temp_Data = add%16;
  1833  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0513  083E               	movf	IR_test_display@add,w
  1836  0514  390F               	andlw	15
  1837  0515  00FB               	movwf	??_IR_test_display
  1838  0516  087B               	movf	??_IR_test_display,w
  1839  0517  00C2               	movwf	IR_test_display@Temp_Data
  1840  0518                     l1924:
  1841                           
  1842                           ;ht1621.c: 499:     Write1DataHT1621(HT1621_segtab[2], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  1843  0518  0842               	movf	IR_test_display@Temp_Data,w
  1844  0519  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1845  051A  0084               	movwf	4
  1846  051B  3080               	movlw	128
  1847  051C  1383               	bcf	3,7	;select IRP bank0
  1848  051D  0400               	iorwf	0,w
  1849  051E  00FB               	movwf	??_IR_test_display
  1850  051F  3000               	movlw	0
  1851  0520  00FC               	movwf	??_IR_test_display+1
  1852  0521  3004               	movlw	4
  1853  0522  00FF               	movwf	btemp+1
  1854  0523                     u1485:
  1855  0523  0D7C               	rlf	??_IR_test_display+1,w
  1856  0524  0CFC               	rrf	??_IR_test_display+1,f
  1857  0525  0CFB               	rrf	??_IR_test_display,f
  1858  0526  0BFF               	decfsz	btemp+1,f
  1859  0527  2D23               	goto	u1485
  1860  0528  087B               	movf	??_IR_test_display,w
  1861  0529  00FD               	movwf	??_IR_test_display+2
  1862  052A  087D               	movf	??_IR_test_display+2,w
  1863  052B  00F5               	movwf	Write1DataHT1621@Dat
  1864  052C  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  1865  052D  0084               	movwf	4
  1866  052E  120A  118A  2004  120A  118A  	fcall	stringdir
  1867  0533  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1868  0538                     l1926:
  1869                           
  1870                           ;ht1621.c: 500:  Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0);
  1871  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1873  053A  0842               	movf	IR_test_display@Temp_Data,w
  1874  053B  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1875  053C  0084               	movwf	4
  1876  053D  1383               	bcf	3,7	;select IRP bank0
  1877  053E  0800               	movf	0,w
  1878  053F  00FB               	movwf	??_IR_test_display
  1879  0540  087B               	movf	??_IR_test_display,w
  1880  0541  00F5               	movwf	Write1DataHT1621@Dat
  1881  0542  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  1882  0543  0084               	movwf	4
  1883  0544  120A  118A  2004  120A  118A  	fcall	stringdir
  1884  0549  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1885  054E                     l1928:
  1886                           
  1887                           ;ht1621.c: 501:     Temp_Data = command/16;
  1888  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1889  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0550  0841               	movf	IR_test_display@command+1,w
  1891  0551  00FC               	movwf	??_IR_test_display+1
  1892  0552  0840               	movf	IR_test_display@command,w
  1893  0553  00FB               	movwf	??_IR_test_display
  1894  0554  3004               	movlw	4
  1895  0555                     u1495:
  1896  0555  1003               	clrc
  1897  0556  0CFC               	rrf	??_IR_test_display+1,f
  1898  0557  0CFB               	rrf	??_IR_test_display,f
  1899  0558  3EFF               	addlw	-1
  1900  0559  1D03               	skipz
  1901  055A  2D55               	goto	u1495
  1902  055B  087B               	movf	??_IR_test_display,w
  1903  055C  00FD               	movwf	??_IR_test_display+2
  1904  055D  087D               	movf	??_IR_test_display+2,w
  1905  055E  00C2               	movwf	IR_test_display@Temp_Data
  1906  055F                     l1930:
  1907                           
  1908                           ;ht1621.c: 503:     Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  1909  055F  0842               	movf	IR_test_display@Temp_Data,w
  1910  0560  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1911  0561  0084               	movwf	4
  1912  0562  3080               	movlw	128
  1913  0563  1383               	bcf	3,7	;select IRP bank0
  1914  0564  0400               	iorwf	0,w
  1915  0565  00FB               	movwf	??_IR_test_display
  1916  0566  3000               	movlw	0
  1917  0567  00FC               	movwf	??_IR_test_display+1
  1918  0568  3004               	movlw	4
  1919  0569  00FF               	movwf	btemp+1
  1920  056A                     u1505:
  1921  056A  0D7C               	rlf	??_IR_test_display+1,w
  1922  056B  0CFC               	rrf	??_IR_test_display+1,f
  1923  056C  0CFB               	rrf	??_IR_test_display,f
  1924  056D  0BFF               	decfsz	btemp+1,f
  1925  056E  2D6A               	goto	u1505
  1926  056F  087B               	movf	??_IR_test_display,w
  1927  0570  00FD               	movwf	??_IR_test_display+2
  1928  0571  087D               	movf	??_IR_test_display+2,w
  1929  0572  00F5               	movwf	Write1DataHT1621@Dat
  1930  0573  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  1931  0574  0084               	movwf	4
  1932  0575  120A  118A  2004  120A  118A  	fcall	stringdir
  1933  057A  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1934  057F                     l1932:
  1935                           
  1936                           ;ht1621.c: 504:  Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0);
  1937  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0581  0842               	movf	IR_test_display@Temp_Data,w
  1940  0582  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1941  0583  0084               	movwf	4
  1942  0584  1383               	bcf	3,7	;select IRP bank0
  1943  0585  0800               	movf	0,w
  1944  0586  00FB               	movwf	??_IR_test_display
  1945  0587  087B               	movf	??_IR_test_display,w
  1946  0588  00F5               	movwf	Write1DataHT1621@Dat
  1947  0589  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  1948  058A  0084               	movwf	4
  1949  058B  120A  118A  2004  120A  118A  	fcall	stringdir
  1950  0590  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1951                           
  1952                           ;ht1621.c: 505:     Temp_Data = command%16;
  1953  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0597  0840               	movf	IR_test_display@command,w
  1956  0598  390F               	andlw	15
  1957  0599  00FB               	movwf	??_IR_test_display
  1958  059A  087B               	movf	??_IR_test_display,w
  1959  059B  00C2               	movwf	IR_test_display@Temp_Data
  1960  059C                     l1934:
  1961                           
  1962                           ;ht1621.c: 507:     Write1DataHT1621(HT1621_segtab[6], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  1963  059C  0842               	movf	IR_test_display@Temp_Data,w
  1964  059D  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1965  059E  0084               	movwf	4
  1966  059F  3080               	movlw	128
  1967  05A0  1383               	bcf	3,7	;select IRP bank0
  1968  05A1  0400               	iorwf	0,w
  1969  05A2  00FB               	movwf	??_IR_test_display
  1970  05A3  3000               	movlw	0
  1971  05A4  00FC               	movwf	??_IR_test_display+1
  1972  05A5  3004               	movlw	4
  1973  05A6  00FF               	movwf	btemp+1
  1974  05A7                     u1515:
  1975  05A7  0D7C               	rlf	??_IR_test_display+1,w
  1976  05A8  0CFC               	rrf	??_IR_test_display+1,f
  1977  05A9  0CFB               	rrf	??_IR_test_display,f
  1978  05AA  0BFF               	decfsz	btemp+1,f
  1979  05AB  2DA7               	goto	u1515
  1980  05AC  087B               	movf	??_IR_test_display,w
  1981  05AD  00FD               	movwf	??_IR_test_display+2
  1982  05AE  087D               	movf	??_IR_test_display+2,w
  1983  05AF  00F5               	movwf	Write1DataHT1621@Dat
  1984  05B0  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  1985  05B1  0084               	movwf	4
  1986  05B2  120A  118A  2004  120A  118A  	fcall	stringdir
  1987  05B7  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  1988  05BC                     l1936:
  1989                           
  1990                           ;ht1621.c: 508:  Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0);
  1991  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1992  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1993  05BE  0842               	movf	IR_test_display@Temp_Data,w
  1994  05BF  3E20               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  1995  05C0  0084               	movwf	4
  1996  05C1  1383               	bcf	3,7	;select IRP bank0
  1997  05C2  0800               	movf	0,w
  1998  05C3  00FB               	movwf	??_IR_test_display
  1999  05C4  087B               	movf	??_IR_test_display,w
  2000  05C5  00F5               	movwf	Write1DataHT1621@Dat
  2001  05C6  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  2002  05C7  0084               	movwf	4
  2003  05C8  120A  118A  2004  120A  118A  	fcall	stringdir
  2004  05CD  120A  118A  244B  120A  118A  	fcall	_Write1DataHT1621
  2005  05D2                     l192:
  2006  05D2  0008               	return
  2007  05D3                     __end_of_IR_test_display:
  2008                           
  2009                           	psect	text4
  2010  044B                     __ptext4:	
  2011 ;; *************** function _Write1DataHT1621 *****************
  2012 ;; Defined at:
  2013 ;;		line 106 in file "ht1621.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  Addr            1    wreg     unsigned char 
  2016 ;;  Dat             1    4[COMMON] unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  Addr            1    7[COMMON] unsigned char 
  2019 ;;  Shift           1    9[COMMON] unsigned char 
  2020 ;;  i               1    8[COMMON] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         1       0       0       0       0
  2031 ;;      Locals:         3       0       0       0       0
  2032 ;;      Temps:          2       0       0       0       0
  2033 ;;      Totals:         6       0       0       0       0
  2034 ;;Total ram usage:        6 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 2
  2037 ;; This function calls:
  2038 ;;		_HT1621_Delay_us
  2039 ;;		_WriteClockHT1621
  2040 ;; This function is called by:
  2041 ;;		_IR_test_display
  2042 ;;		_HT1621_DisSegOn
  2043 ;;		_HT1621_DisSegOff
  2044 ;;		_HT1621_Display
  2045 ;;		_HT1621_Display_Time
  2046 ;;		_HT1621_Display_Date
  2047 ;;		_HT1621_Display_Year
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _Write1DataHT1621
  2053  044B                     _Write1DataHT1621:
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _Write1DataHT1621: [wreg+status,2+status,0+pclath+cstack]
  2057                           ;Write1DataHT1621@Addr stored from wreg
  2058  044B  00F8               	movwf	Write1DataHT1621@Addr
  2059  044C                     l1644:
  2060                           
  2061                           ;ht1621.c: 106: void Write1DataHT1621(unsigned char Addr,unsigned char Dat);ht1621.c: 10
      +                          7: {;ht1621.c: 108:  unsigned char i;;ht1621.c: 109:  unsigned char Shift;;ht1621.c: 111
      +                          :  RD5 = 0;
  2062  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2063  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2064  044E  1288               	bcf	8,5	;volatile
  2065  044F                     l1646:
  2066                           
  2067                           ;ht1621.c: 112:  HT1621_Delay_us(10);
  2068  044F  300A               	movlw	10
  2069  0450  00F1               	movwf	HT1621_Delay_us@ucDat
  2070  0451  3000               	movlw	0
  2071  0452  00F2               	movwf	HT1621_Delay_us@ucDat+1
  2072  0453  120A  118A  2214  120A  118A  	fcall	_HT1621_Delay_us
  2073  0458                     l1648:
  2074                           
  2075                           ;ht1621.c: 114:  RD7 = 1;
  2076  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2078  045A  1788               	bsf	8,7	;volatile
  2079                           
  2080                           ;ht1621.c: 115:  WriteClockHT1621();
  2081  045B  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2082  0460                     l1650:
  2083                           
  2084                           ;ht1621.c: 116:  RD7 = 0;
  2085  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0462  1388               	bcf	8,7	;volatile
  2088                           
  2089                           ;ht1621.c: 117:  WriteClockHT1621();
  2090  0463  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2091  0468                     l1652:
  2092                           
  2093                           ;ht1621.c: 118:  RD7 = 1;
  2094  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2096  046A  1788               	bsf	8,7	;volatile
  2097                           
  2098                           ;ht1621.c: 119:  WriteClockHT1621();
  2099  046B  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2100  0470                     l1654:
  2101                           
  2102                           ;ht1621.c: 121:  Shift = 0x20;
  2103  0470  3020               	movlw	32
  2104  0471  00F6               	movwf	??_Write1DataHT1621
  2105  0472  0876               	movf	??_Write1DataHT1621,w
  2106  0473  00FA               	movwf	Write1DataHT1621@Shift
  2107  0474                     l1656:
  2108                           
  2109                           ;ht1621.c: 122:  for( i = 0; i < HT1621_addrbit; i++)
  2110  0474  01F9               	clrf	Write1DataHT1621@i
  2111  0475  2C93               	goto	l1668
  2112  0476                     l1658:
  2113                           
  2114                           ;ht1621.c: 123:  {;ht1621.c: 124:   if(Addr & Shift)
  2115  0476  0878               	movf	Write1DataHT1621@Addr,w
  2116  0477  057A               	andwf	Write1DataHT1621@Shift,w
  2117  0478  1903               	btfsc	3,2
  2118  0479  2C7B               	goto	u1001
  2119  047A  2C7C               	goto	u1000
  2120  047B                     u1001:
  2121  047B  2C80               	goto	l107
  2122  047C                     u1000:
  2123  047C                     l1660:
  2124                           
  2125                           ;ht1621.c: 125:    RD7 = 1;
  2126  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2127  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2128  047E  1788               	bsf	8,7	;volatile
  2129  047F  2C83               	goto	l1662
  2130  0480                     l107:	
  2131                           ;ht1621.c: 126:   else
  2132                           
  2133                           
  2134                           ;ht1621.c: 127:    RD7 = 0;
  2135  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0482  1388               	bcf	8,7	;volatile
  2138  0483                     l1662:
  2139                           
  2140                           ;ht1621.c: 128:   WriteClockHT1621();
  2141  0483  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2142  0488                     l1664:
  2143                           
  2144                           ;ht1621.c: 129:   Shift = Shift >> 1;
  2145  0488  087A               	movf	Write1DataHT1621@Shift,w
  2146  0489  00F6               	movwf	??_Write1DataHT1621
  2147  048A  1003               	clrc
  2148  048B  0C76               	rrf	??_Write1DataHT1621,w
  2149  048C  00F7               	movwf	??_Write1DataHT1621+1
  2150  048D  0877               	movf	??_Write1DataHT1621+1,w
  2151  048E  00FA               	movwf	Write1DataHT1621@Shift
  2152  048F                     l1666:
  2153                           
  2154                           ;ht1621.c: 130:  }
  2155  048F  3001               	movlw	1
  2156  0490  00F6               	movwf	??_Write1DataHT1621
  2157  0491  0876               	movf	??_Write1DataHT1621,w
  2158  0492  07F9               	addwf	Write1DataHT1621@i,f
  2159  0493                     l1668:
  2160  0493  3006               	movlw	6
  2161  0494  0279               	subwf	Write1DataHT1621@i,w
  2162  0495  1C03               	skipc
  2163  0496  2C98               	goto	u1011
  2164  0497  2C99               	goto	u1010
  2165  0498                     u1011:
  2166  0498  2C76               	goto	l1658
  2167  0499                     u1010:
  2168  0499                     l109:
  2169                           
  2170                           ;ht1621.c: 132:  Shift = 0x01;
  2171  0499  01FA               	clrf	Write1DataHT1621@Shift
  2172  049A  0AFA               	incf	Write1DataHT1621@Shift,f
  2173  049B                     l1670:
  2174                           
  2175                           ;ht1621.c: 133:  for (i = 0; i < 4; i++)
  2176  049B  01F9               	clrf	Write1DataHT1621@i
  2177  049C                     l1676:
  2178                           
  2179                           ;ht1621.c: 134:  {;ht1621.c: 135:   if( Dat & Shift)
  2180  049C  0875               	movf	Write1DataHT1621@Dat,w
  2181  049D  057A               	andwf	Write1DataHT1621@Shift,w
  2182  049E  1903               	btfsc	3,2
  2183  049F  2CA1               	goto	u1021
  2184  04A0  2CA2               	goto	u1020
  2185  04A1                     u1021:
  2186  04A1  2CA6               	goto	l112
  2187  04A2                     u1020:
  2188  04A2                     l1678:
  2189                           
  2190                           ;ht1621.c: 136:    RD7 = 1;
  2191  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2192  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2193  04A4  1788               	bsf	8,7	;volatile
  2194  04A5  2CA9               	goto	l1680
  2195  04A6                     l112:	
  2196                           ;ht1621.c: 137:   else
  2197                           
  2198                           
  2199                           ;ht1621.c: 138:    RD7 = 0;
  2200  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2201  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2202  04A8  1388               	bcf	8,7	;volatile
  2203  04A9                     l1680:
  2204                           
  2205                           ;ht1621.c: 139:   WriteClockHT1621();
  2206  04A9  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2207  04AE                     l1682:
  2208                           
  2209                           ;ht1621.c: 140:   Shift = Shift << 1;
  2210  04AE  087A               	movf	Write1DataHT1621@Shift,w
  2211  04AF  00F6               	movwf	??_Write1DataHT1621
  2212  04B0  0776               	addwf	??_Write1DataHT1621,w
  2213  04B1  00F7               	movwf	??_Write1DataHT1621+1
  2214  04B2  0877               	movf	??_Write1DataHT1621+1,w
  2215  04B3  00FA               	movwf	Write1DataHT1621@Shift
  2216  04B4                     l1684:
  2217                           
  2218                           ;ht1621.c: 141:  }
  2219  04B4  3001               	movlw	1
  2220  04B5  00F6               	movwf	??_Write1DataHT1621
  2221  04B6  0876               	movf	??_Write1DataHT1621,w
  2222  04B7  07F9               	addwf	Write1DataHT1621@i,f
  2223  04B8                     l1686:
  2224  04B8  3004               	movlw	4
  2225  04B9  0279               	subwf	Write1DataHT1621@i,w
  2226  04BA  1C03               	skipc
  2227  04BB  2CBD               	goto	u1031
  2228  04BC  2CBE               	goto	u1030
  2229  04BD                     u1031:
  2230  04BD  2C9C               	goto	l1676
  2231  04BE                     u1030:
  2232  04BE                     l111:
  2233                           
  2234                           ;ht1621.c: 142:  RD5 = 1;
  2235  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2236  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2237  04C0  1688               	bsf	8,5	;volatile
  2238  04C1                     l1688:
  2239                           
  2240                           ;ht1621.c: 143:  HT1621_Delay_us(10);
  2241  04C1  300A               	movlw	10
  2242  04C2  00F1               	movwf	HT1621_Delay_us@ucDat
  2243  04C3  3000               	movlw	0
  2244  04C4  00F2               	movwf	HT1621_Delay_us@ucDat+1
  2245  04C5  120A  118A  2214  120A  118A  	fcall	_HT1621_Delay_us
  2246  04CA                     l1690:
  2247                           
  2248                           ;ht1621.c: 144:  RD7 = 1;
  2249  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2250  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2251  04CC  1788               	bsf	8,7	;volatile
  2252  04CD                     l114:
  2253  04CD  0008               	return
  2254  04CE                     __end_of_Write1DataHT1621:
  2255                           
  2256                           	psect	text5
  2257  02BA                     __ptext5:	
  2258 ;; *************** function _I2C_Init *****************
  2259 ;; Defined at:
  2260 ;;		line 3 in file "clock.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  freq            4   14[BANK0 ] const unsigned long 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       4       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       4       0       0       0
  2277 ;;      Totals:         0       8       0       0       0
  2278 ;;Total ram usage:        8 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 1
  2281 ;; This function calls:
  2282 ;;		___lldiv
  2283 ;;		___lmul
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _I2C_Init
  2291  02BA                     _I2C_Init:
  2292  02BA                     l1814:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  2295                           
  2296                           
  2297                           ;clock.c: 4:   TRISC3 = 1;
  2298  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2299  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2300  02BC  1587               	bsf	7,3	;volatile
  2301                           
  2302                           ;clock.c: 5:   TRISC4 = 1;
  2303  02BD  1607               	bsf	7,4	;volatile
  2304  02BE                     l1816:
  2305                           
  2306                           ;clock.c: 7:   SSPCON = 0b00101000;
  2307  02BE  3028               	movlw	40
  2308  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2309  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2310  02C1  0094               	movwf	20	;volatile
  2311  02C2                     l1818:
  2312                           
  2313                           ;clock.c: 8:   SSPCON2 = 0b00000000;
  2314  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2315  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2316  02C4  0191               	clrf	17	;volatile
  2317  02C5                     l1820:
  2318                           
  2319                           ;clock.c: 10:   SSPADD = (8000000/(4*freq*100))-1;
  2320  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2321  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2322  02C7  084C               	movf	I2C_Init@freq,w
  2323  02C8  00D0               	movwf	??_I2C_Init
  2324  02C9  084D               	movf	I2C_Init@freq+1,w
  2325  02CA  00D1               	movwf	??_I2C_Init+1
  2326  02CB  084E               	movf	I2C_Init@freq+2,w
  2327  02CC  00D2               	movwf	??_I2C_Init+2
  2328  02CD  084F               	movf	I2C_Init@freq+3,w
  2329  02CE  00D3               	movwf	??_I2C_Init+3
  2330  02CF  3002               	movlw	2
  2331  02D0                     u1255:
  2332  02D0  1003               	clrc
  2333  02D1  0DD0               	rlf	??_I2C_Init,f
  2334  02D2  0DD1               	rlf	??_I2C_Init+1,f
  2335  02D3  0DD2               	rlf	??_I2C_Init+2,f
  2336  02D4  0DD3               	rlf	??_I2C_Init+3,f
  2337  02D5                     u1250:
  2338  02D5  3EFF               	addlw	-1
  2339  02D6  1D03               	skipz
  2340  02D7  2AD0               	goto	u1255
  2341  02D8  0853               	movf	??_I2C_Init+3,w
  2342  02D9  00F4               	movwf	___lmul@multiplier+3
  2343  02DA  0852               	movf	??_I2C_Init+2,w
  2344  02DB  00F3               	movwf	___lmul@multiplier+2
  2345  02DC  0851               	movf	??_I2C_Init+1,w
  2346  02DD  00F2               	movwf	___lmul@multiplier+1
  2347  02DE  0850               	movf	??_I2C_Init,w
  2348  02DF  00F1               	movwf	___lmul@multiplier
  2349  02E0  3000               	movlw	0
  2350  02E1  00F8               	movwf	___lmul@multiplicand+3
  2351  02E2  3000               	movlw	0
  2352  02E3  00F7               	movwf	___lmul@multiplicand+2
  2353  02E4  3000               	movlw	0
  2354  02E5  00F6               	movwf	___lmul@multiplicand+1
  2355  02E6  3064               	movlw	100
  2356  02E7  00F5               	movwf	___lmul@multiplicand
  2357  02E8  120A  118A  2274  120A  118A  	fcall	___lmul
  2358  02ED  0874               	movf	?___lmul+3,w
  2359  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2360  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2361  02F0  00C1               	movwf	___lldiv@divisor+3
  2362  02F1  0873               	movf	?___lmul+2,w
  2363  02F2  00C0               	movwf	___lldiv@divisor+2
  2364  02F3  0872               	movf	?___lmul+1,w
  2365  02F4  00BF               	movwf	___lldiv@divisor+1
  2366  02F5  0871               	movf	?___lmul,w
  2367  02F6  00BE               	movwf	___lldiv@divisor
  2368  02F7  3000               	movlw	0
  2369  02F8  00C5               	movwf	___lldiv@dividend+3
  2370  02F9  307A               	movlw	122
  2371  02FA  00C4               	movwf	___lldiv@dividend+2
  2372  02FB  3012               	movlw	18
  2373  02FC  00C3               	movwf	___lldiv@dividend+1
  2374  02FD  3000               	movlw	0
  2375  02FE  00C2               	movwf	___lldiv@dividend
  2376  02FF  120A  118A  2372  120A  118A  	fcall	___lldiv
  2377  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0306  083E               	movf	?___lldiv,w
  2380  0307  3EFF               	addlw	255
  2381  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2382  0309  1303               	bcf	3,6	;RP1=0, select bank1
  2383  030A  0093               	movwf	19	;volatile
  2384  030B                     l1822:
  2385                           
  2386                           ;clock.c: 11:   SSPSTAT = 0b00000000;
  2387  030B  0194               	clrf	20	;volatile
  2388  030C                     l231:
  2389  030C  0008               	return
  2390  030D                     __end_of_I2C_Init:
  2391                           
  2392                           	psect	text6
  2393  0274                     __ptext6:	
  2394 ;; *************** function ___lmul *****************
  2395 ;; Defined at:
  2396 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  multiplier      4    0[COMMON] unsigned long 
  2399 ;;  multiplicand    4    4[COMMON] unsigned long 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  product         4    9[COMMON] unsigned long 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  4    0[COMMON] unsigned long 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         8       0       0       0       0
  2412 ;;      Locals:         4       0       0       0       0
  2413 ;;      Temps:          1       0       0       0       0
  2414 ;;      Totals:        13       0       0       0       0
  2415 ;;Total ram usage:       13 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_I2C_Init
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function ___lmul
  2426  0274                     ___lmul:
  2427  0274                     l1762:	
  2428                           ;incstack = 0
  2429                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2430                           
  2431  0274  3000               	movlw	0
  2432  0275  00FD               	movwf	___lmul@product+3
  2433  0276  3000               	movlw	0
  2434  0277  00FC               	movwf	___lmul@product+2
  2435  0278  3000               	movlw	0
  2436  0279  00FB               	movwf	___lmul@product+1
  2437  027A  3000               	movlw	0
  2438  027B  00FA               	movwf	___lmul@product
  2439  027C                     l1764:
  2440  027C  1C71               	btfss	___lmul@multiplier,0
  2441  027D  2A7F               	goto	u1131
  2442  027E  2A80               	goto	u1130
  2443  027F                     u1131:
  2444  027F  2A97               	goto	l1768
  2445  0280                     u1130:
  2446  0280                     l1766:
  2447  0280  0875               	movf	___lmul@multiplicand,w
  2448  0281  07FA               	addwf	___lmul@product,f
  2449  0282  0876               	movf	___lmul@multiplicand+1,w
  2450  0283  1103               	clrz
  2451  0284  1803               	skipnc
  2452  0285  3E01               	addlw	1
  2453  0286  1903               	skipnz
  2454  0287  2A89               	goto	u1141
  2455  0288  07FB               	addwf	___lmul@product+1,f
  2456  0289                     u1141:
  2457  0289  0877               	movf	___lmul@multiplicand+2,w
  2458  028A  1103               	clrz
  2459  028B  1803               	skipnc
  2460  028C  3E01               	addlw	1
  2461  028D  1903               	skipnz
  2462  028E  2A90               	goto	u1142
  2463  028F  07FC               	addwf	___lmul@product+2,f
  2464  0290                     u1142:
  2465  0290  0878               	movf	___lmul@multiplicand+3,w
  2466  0291  1103               	clrz
  2467  0292  1803               	skipnc
  2468  0293  3E01               	addlw	1
  2469  0294  1903               	skipnz
  2470  0295  2A97               	goto	u1143
  2471  0296  07FD               	addwf	___lmul@product+3,f
  2472  0297                     u1143:
  2473  0297                     l1768:
  2474  0297  3001               	movlw	1
  2475  0298  00F9               	movwf	??___lmul
  2476  0299                     u1155:
  2477  0299  1003               	clrc
  2478  029A  0DF5               	rlf	___lmul@multiplicand,f
  2479  029B  0DF6               	rlf	___lmul@multiplicand+1,f
  2480  029C  0DF7               	rlf	___lmul@multiplicand+2,f
  2481  029D  0DF8               	rlf	___lmul@multiplicand+3,f
  2482  029E  0BF9               	decfsz	??___lmul,f
  2483  029F  2A99               	goto	u1155
  2484  02A0                     l1770:
  2485  02A0  3001               	movlw	1
  2486  02A1                     u1165:
  2487  02A1  1003               	clrc
  2488  02A2  0CF4               	rrf	___lmul@multiplier+3,f
  2489  02A3  0CF3               	rrf	___lmul@multiplier+2,f
  2490  02A4  0CF2               	rrf	___lmul@multiplier+1,f
  2491  02A5  0CF1               	rrf	___lmul@multiplier,f
  2492  02A6  3EFF               	addlw	-1
  2493  02A7  1D03               	skipz
  2494  02A8  2AA1               	goto	u1165
  2495  02A9  0874               	movf	___lmul@multiplier+3,w
  2496  02AA  0473               	iorwf	___lmul@multiplier+2,w
  2497  02AB  0472               	iorwf	___lmul@multiplier+1,w
  2498  02AC  0471               	iorwf	___lmul@multiplier,w
  2499  02AD  1D03               	skipz
  2500  02AE  2AB0               	goto	u1171
  2501  02AF  2AB1               	goto	u1170
  2502  02B0                     u1171:
  2503  02B0  2A7C               	goto	l1764
  2504  02B1                     u1170:
  2505  02B1                     l1772:
  2506  02B1  087D               	movf	___lmul@product+3,w
  2507  02B2  00F4               	movwf	?___lmul+3
  2508  02B3  087C               	movf	___lmul@product+2,w
  2509  02B4  00F3               	movwf	?___lmul+2
  2510  02B5  087B               	movf	___lmul@product+1,w
  2511  02B6  00F2               	movwf	?___lmul+1
  2512  02B7  087A               	movf	___lmul@product,w
  2513  02B8  00F1               	movwf	?___lmul
  2514  02B9                     l420:
  2515  02B9  0008               	return
  2516  02BA                     __end_of___lmul:
  2517                           
  2518                           	psect	text7
  2519  0372                     __ptext7:	
  2520 ;; *************** function ___lldiv *****************
  2521 ;; Defined at:
  2522 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  divisor         4    0[BANK0 ] unsigned long 
  2525 ;;  dividend        4    4[BANK0 ] unsigned long 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  quotient        4    9[BANK0 ] unsigned long 
  2528 ;;  counter         1   13[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  4    0[BANK0 ] unsigned long 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         0       8       0       0       0
  2539 ;;      Locals:         0       5       0       0       0
  2540 ;;      Temps:          0       1       0       0       0
  2541 ;;      Totals:         0      14       0       0       0
  2542 ;;Total ram usage:       14 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_I2C_Init
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function ___lldiv
  2553  0372                     ___lldiv:
  2554  0372                     l1776:	
  2555                           ;incstack = 0
  2556                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2557                           
  2558  0372  3000               	movlw	0
  2559  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0375  00CA               	movwf	___lldiv@quotient+3
  2562  0376  3000               	movlw	0
  2563  0377  00C9               	movwf	___lldiv@quotient+2
  2564  0378  3000               	movlw	0
  2565  0379  00C8               	movwf	___lldiv@quotient+1
  2566  037A  3000               	movlw	0
  2567  037B  00C7               	movwf	___lldiv@quotient
  2568  037C  0841               	movf	___lldiv@divisor+3,w
  2569  037D  0440               	iorwf	___lldiv@divisor+2,w
  2570  037E  043F               	iorwf	___lldiv@divisor+1,w
  2571  037F  043E               	iorwf	___lldiv@divisor,w
  2572  0380  1903               	skipnz
  2573  0381  2B83               	goto	u1181
  2574  0382  2B84               	goto	u1180
  2575  0383                     u1181:
  2576  0383  2BD1               	goto	l1796
  2577  0384                     u1180:
  2578  0384                     l1778:
  2579  0384  01CB               	clrf	___lldiv@counter
  2580  0385  0ACB               	incf	___lldiv@counter,f
  2581  0386  2B94               	goto	l1782
  2582  0387                     l1780:
  2583  0387  3001               	movlw	1
  2584  0388  00C6               	movwf	??___lldiv
  2585  0389                     u1195:
  2586  0389  1003               	clrc
  2587  038A  0DBE               	rlf	___lldiv@divisor,f
  2588  038B  0DBF               	rlf	___lldiv@divisor+1,f
  2589  038C  0DC0               	rlf	___lldiv@divisor+2,f
  2590  038D  0DC1               	rlf	___lldiv@divisor+3,f
  2591  038E  0BC6               	decfsz	??___lldiv,f
  2592  038F  2B89               	goto	u1195
  2593  0390  3001               	movlw	1
  2594  0391  00C6               	movwf	??___lldiv
  2595  0392  0846               	movf	??___lldiv,w
  2596  0393  07CB               	addwf	___lldiv@counter,f
  2597  0394                     l1782:
  2598  0394  1FC1               	btfss	___lldiv@divisor+3,7
  2599  0395  2B97               	goto	u1201
  2600  0396  2B98               	goto	u1200
  2601  0397                     u1201:
  2602  0397  2B87               	goto	l1780
  2603  0398                     u1200:
  2604  0398                     l1784:
  2605  0398  3001               	movlw	1
  2606  0399  00C6               	movwf	??___lldiv
  2607  039A                     u1215:
  2608  039A  1003               	clrc
  2609  039B  0DC7               	rlf	___lldiv@quotient,f
  2610  039C  0DC8               	rlf	___lldiv@quotient+1,f
  2611  039D  0DC9               	rlf	___lldiv@quotient+2,f
  2612  039E  0DCA               	rlf	___lldiv@quotient+3,f
  2613  039F  0BC6               	decfsz	??___lldiv,f
  2614  03A0  2B9A               	goto	u1215
  2615  03A1                     l1786:
  2616  03A1  0841               	movf	___lldiv@divisor+3,w
  2617  03A2  0245               	subwf	___lldiv@dividend+3,w
  2618  03A3  1D03               	skipz
  2619  03A4  2BAF               	goto	u1225
  2620  03A5  0840               	movf	___lldiv@divisor+2,w
  2621  03A6  0244               	subwf	___lldiv@dividend+2,w
  2622  03A7  1D03               	skipz
  2623  03A8  2BAF               	goto	u1225
  2624  03A9  083F               	movf	___lldiv@divisor+1,w
  2625  03AA  0243               	subwf	___lldiv@dividend+1,w
  2626  03AB  1D03               	skipz
  2627  03AC  2BAF               	goto	u1225
  2628  03AD  083E               	movf	___lldiv@divisor,w
  2629  03AE  0242               	subwf	___lldiv@dividend,w
  2630  03AF                     u1225:
  2631  03AF  1C03               	skipc
  2632  03B0  2BB2               	goto	u1221
  2633  03B1  2BB3               	goto	u1220
  2634  03B2                     u1221:
  2635  03B2  2BC2               	goto	l1792
  2636  03B3                     u1220:
  2637  03B3                     l1788:
  2638  03B3  083E               	movf	___lldiv@divisor,w
  2639  03B4  02C2               	subwf	___lldiv@dividend,f
  2640  03B5  083F               	movf	___lldiv@divisor+1,w
  2641  03B6  1C03               	skipc
  2642  03B7  0F3F               	incfsz	___lldiv@divisor+1,w
  2643  03B8  02C3               	subwf	___lldiv@dividend+1,f
  2644  03B9  0840               	movf	___lldiv@divisor+2,w
  2645  03BA  1C03               	skipc
  2646  03BB  0F40               	incfsz	___lldiv@divisor+2,w
  2647  03BC  02C4               	subwf	___lldiv@dividend+2,f
  2648  03BD  0841               	movf	___lldiv@divisor+3,w
  2649  03BE  1C03               	skipc
  2650  03BF  0F41               	incfsz	___lldiv@divisor+3,w
  2651  03C0  02C5               	subwf	___lldiv@dividend+3,f
  2652  03C1                     l1790:
  2653  03C1  1447               	bsf	___lldiv@quotient,0
  2654  03C2                     l1792:
  2655  03C2  3001               	movlw	1
  2656  03C3                     u1235:
  2657  03C3  1003               	clrc
  2658  03C4  0CC1               	rrf	___lldiv@divisor+3,f
  2659  03C5  0CC0               	rrf	___lldiv@divisor+2,f
  2660  03C6  0CBF               	rrf	___lldiv@divisor+1,f
  2661  03C7  0CBE               	rrf	___lldiv@divisor,f
  2662  03C8  3EFF               	addlw	-1
  2663  03C9  1D03               	skipz
  2664  03CA  2BC3               	goto	u1235
  2665  03CB                     l1794:
  2666  03CB  3001               	movlw	1
  2667  03CC  02CB               	subwf	___lldiv@counter,f
  2668  03CD  1D03               	btfss	3,2
  2669  03CE  2BD0               	goto	u1241
  2670  03CF  2BD1               	goto	u1240
  2671  03D0                     u1241:
  2672  03D0  2B98               	goto	l1784
  2673  03D1                     u1240:
  2674  03D1                     l1796:
  2675  03D1  084A               	movf	___lldiv@quotient+3,w
  2676  03D2  00C1               	movwf	?___lldiv+3
  2677  03D3  0849               	movf	___lldiv@quotient+2,w
  2678  03D4  00C0               	movwf	?___lldiv+2
  2679  03D5  0848               	movf	___lldiv@quotient+1,w
  2680  03D6  00BF               	movwf	?___lldiv+1
  2681  03D7  0847               	movf	___lldiv@quotient,w
  2682  03D8  00BE               	movwf	?___lldiv
  2683  03D9                     l442:
  2684  03D9  0008               	return
  2685  03DA                     __end_of___lldiv:
  2686                           
  2687                           	psect	text8
  2688  0234                     __ptext8:	
  2689 ;; *************** function _HT1621_Init *****************
  2690 ;; Defined at:
  2691 ;;		line 270 in file "ht1621.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, pclath, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          1       0       0       0       0
  2708 ;;      Totals:         1       0       0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 3
  2712 ;; This function calls:
  2713 ;;		_HT1621_num_init
  2714 ;;		_WriteCommandHT1621
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _HT1621_Init
  2722  0234                     _HT1621_Init:
  2723  0234                     l1800:	
  2724                           ;incstack = 0
  2725                           ; Regs used in _HT1621_Init: [wreg+status,2+status,0+pclath+cstack]
  2726                           
  2727                           
  2728                           ;ht1621.c: 272:     TRISD5=0;
  2729  0234  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0235  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0236  1288               	bcf	8,5	;volatile
  2732                           
  2733                           ;ht1621.c: 273:     TRISD6=0;
  2734  0237  1308               	bcf	8,6	;volatile
  2735                           
  2736                           ;ht1621.c: 274:     TRISD7=0;
  2737  0238  1388               	bcf	8,7	;volatile
  2738                           
  2739                           ;ht1621.c: 276:  RD5 = 1;
  2740  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2741  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2742  023B  1688               	bsf	8,5	;volatile
  2743                           
  2744                           ;ht1621.c: 277:  RD6 = 1;
  2745  023C  1708               	bsf	8,6	;volatile
  2746                           
  2747                           ;ht1621.c: 278:  RD7 = 1;
  2748  023D  1788               	bsf	8,7	;volatile
  2749  023E                     l1802:
  2750                           
  2751                           ;ht1621.c: 280:  WriteCommandHT1621(0x01);
  2752  023E  3001               	movlw	1
  2753  023F  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2754                           
  2755                           ;ht1621.c: 281:  WriteCommandHT1621(0x03);
  2756  0244  3003               	movlw	3
  2757  0245  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2758                           
  2759                           ;ht1621.c: 284:  WriteCommandHT1621(0x29);HT1621_maxcom=4;
  2760  024A  3029               	movlw	41
  2761  024B  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2762  0250                     l1804:
  2763  0250  3004               	movlw	4
  2764  0251  00FA               	movwf	??_HT1621_Init
  2765  0252  087A               	movf	??_HT1621_Init,w
  2766  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0255  00BD               	movwf	_HT1621_maxcom
  2769  0256                     l1806:
  2770                           
  2771                           ;ht1621.c: 309:  WriteCommandHT1621(0x04);
  2772  0256  3004               	movlw	4
  2773  0257  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2774  025C                     l1808:
  2775                           
  2776                           ;ht1621.c: 310:  WriteCommandHT1621(0x05);
  2777  025C  3005               	movlw	5
  2778  025D  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2779  0262                     l1810:
  2780                           
  2781                           ;ht1621.c: 311:  WriteCommandHT1621(0x08);
  2782  0262  3008               	movlw	8
  2783  0263  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2784  0268                     l1812:
  2785                           
  2786                           ;ht1621.c: 312:  WriteCommandHT1621(0X80);
  2787  0268  3080               	movlw	128
  2788  0269  120A  118A  230D  120A  118A  	fcall	_WriteCommandHT1621
  2789                           
  2790                           ;ht1621.c: 314:  HT1621_num_init();
  2791  026E  120A  118A  21A4  120A  118A  	fcall	_HT1621_num_init
  2792  0273                     l155:
  2793  0273  0008               	return
  2794  0274                     __end_of_HT1621_Init:
  2795                           
  2796                           	psect	text9
  2797  030D                     __ptext9:	
  2798 ;; *************** function _WriteCommandHT1621 *****************
  2799 ;; Defined at:
  2800 ;;		line 68 in file "ht1621.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  FunctonCode     1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  FunctonCode     1    6[COMMON] unsigned char 
  2805 ;;  i               1    8[COMMON] unsigned char 
  2806 ;;  Shift           1    7[COMMON] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       0       0       0       0
  2817 ;;      Locals:         3       0       0       0       0
  2818 ;;      Temps:          2       0       0       0       0
  2819 ;;      Totals:         5       0       0       0       0
  2820 ;;Total ram usage:        5 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		_HT1621_Delay_us
  2825 ;;		_WriteClockHT1621
  2826 ;; This function is called by:
  2827 ;;		_HT1621_Init
  2828 ;;		_HT1621_Halt
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _WriteCommandHT1621
  2834  030D                     _WriteCommandHT1621:
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in _WriteCommandHT1621: [wreg+status,2+status,0+pclath+cstack]
  2838                           ;WriteCommandHT1621@FunctonCode stored from wreg
  2839  030D  00F7               	movwf	WriteCommandHT1621@FunctonCode
  2840  030E                     l1602:
  2841                           
  2842                           ;ht1621.c: 68: void WriteCommandHT1621(unsigned char FunctonCode);ht1621.c: 69: {;ht1621
      +                          .c: 70:  unsigned char Shift = 0x80;
  2843  030E  3080               	movlw	128
  2844  030F  00F5               	movwf	??_WriteCommandHT1621
  2845  0310  0875               	movf	??_WriteCommandHT1621,w
  2846  0311  00F8               	movwf	WriteCommandHT1621@Shift
  2847  0312                     l1604:
  2848                           
  2849                           ;ht1621.c: 71:  unsigned char i;;ht1621.c: 73:  RD5 = 0;
  2850  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0314  1288               	bcf	8,5	;volatile
  2853  0315                     l1606:
  2854                           
  2855                           ;ht1621.c: 74:  HT1621_Delay_us(10);
  2856  0315  300A               	movlw	10
  2857  0316  00F1               	movwf	HT1621_Delay_us@ucDat
  2858  0317  3000               	movlw	0
  2859  0318  00F2               	movwf	HT1621_Delay_us@ucDat+1
  2860  0319  120A  118A  2214  120A  118A  	fcall	_HT1621_Delay_us
  2861  031E                     l1608:
  2862                           
  2863                           ;ht1621.c: 76:  RD7 = 1;
  2864  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2865  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2866  0320  1788               	bsf	8,7	;volatile
  2867  0321                     l1610:
  2868                           
  2869                           ;ht1621.c: 77:  WriteClockHT1621();
  2870  0321  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2871  0326                     l1612:
  2872                           
  2873                           ;ht1621.c: 78:  RD7 = 0;
  2874  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0328  1388               	bcf	8,7	;volatile
  2877  0329                     l1614:
  2878                           
  2879                           ;ht1621.c: 79:  WriteClockHT1621();
  2880  0329  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2881  032E                     l1616:
  2882                           
  2883                           ;ht1621.c: 80:  RD7 = 0;
  2884  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2885  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0330  1388               	bcf	8,7	;volatile
  2887  0331                     l1618:
  2888                           
  2889                           ;ht1621.c: 81:  WriteClockHT1621();
  2890  0331  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2891  0336                     l1620:
  2892                           
  2893                           ;ht1621.c: 83:  for(i = 0; i < 8; i++)
  2894  0336  01F9               	clrf	WriteCommandHT1621@i
  2895  0337                     l1626:
  2896                           
  2897                           ;ht1621.c: 84:  {;ht1621.c: 85:   if(Shift & FunctonCode)
  2898  0337  0878               	movf	WriteCommandHT1621@Shift,w
  2899  0338  0577               	andwf	WriteCommandHT1621@FunctonCode,w
  2900  0339  1903               	btfsc	3,2
  2901  033A  2B3C               	goto	u981
  2902  033B  2B3D               	goto	u980
  2903  033C                     u981:
  2904  033C  2B41               	goto	l100
  2905  033D                     u980:
  2906  033D                     l1628:
  2907                           
  2908                           ;ht1621.c: 86:    RD7 = 1;
  2909  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2910  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2911  033F  1788               	bsf	8,7	;volatile
  2912  0340  2B44               	goto	l1630
  2913  0341                     l100:	
  2914                           ;ht1621.c: 87:   else
  2915                           
  2916                           
  2917                           ;ht1621.c: 88:    RD7 = 0;
  2918  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0343  1388               	bcf	8,7	;volatile
  2921  0344                     l1630:
  2922                           
  2923                           ;ht1621.c: 90:    WriteClockHT1621();
  2924  0344  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2925  0349                     l1632:
  2926                           
  2927                           ;ht1621.c: 91:    Shift = Shift >> 1;
  2928  0349  0878               	movf	WriteCommandHT1621@Shift,w
  2929  034A  00F5               	movwf	??_WriteCommandHT1621
  2930  034B  1003               	clrc
  2931  034C  0C75               	rrf	??_WriteCommandHT1621,w
  2932  034D  00F6               	movwf	??_WriteCommandHT1621+1
  2933  034E  0876               	movf	??_WriteCommandHT1621+1,w
  2934  034F  00F8               	movwf	WriteCommandHT1621@Shift
  2935  0350                     l1634:
  2936                           
  2937                           ;ht1621.c: 92:  }
  2938  0350  3001               	movlw	1
  2939  0351  00F5               	movwf	??_WriteCommandHT1621
  2940  0352  0875               	movf	??_WriteCommandHT1621,w
  2941  0353  07F9               	addwf	WriteCommandHT1621@i,f
  2942  0354                     l1636:
  2943  0354  3008               	movlw	8
  2944  0355  0279               	subwf	WriteCommandHT1621@i,w
  2945  0356  1C03               	skipc
  2946  0357  2B59               	goto	u991
  2947  0358  2B5A               	goto	u990
  2948  0359                     u991:
  2949  0359  2B37               	goto	l1626
  2950  035A                     u990:
  2951  035A                     l99:
  2952                           
  2953                           ;ht1621.c: 93:  RD7 = 0;
  2954  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2955  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2956  035C  1388               	bcf	8,7	;volatile
  2957  035D                     l1638:
  2958                           
  2959                           ;ht1621.c: 94:  WriteClockHT1621();
  2960  035D  120A  118A  21C0  120A  118A  	fcall	_WriteClockHT1621
  2961  0362                     l1640:
  2962                           
  2963                           ;ht1621.c: 96:  RD5 = 1;
  2964  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0364  1688               	bsf	8,5	;volatile
  2967                           
  2968                           ;ht1621.c: 97:  HT1621_Delay_us(10);
  2969  0365  300A               	movlw	10
  2970  0366  00F1               	movwf	HT1621_Delay_us@ucDat
  2971  0367  3000               	movlw	0
  2972  0368  00F2               	movwf	HT1621_Delay_us@ucDat+1
  2973  0369  120A  118A  2214  120A  118A  	fcall	_HT1621_Delay_us
  2974  036E                     l1642:
  2975                           
  2976                           ;ht1621.c: 98:  RD7 = 1;
  2977  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2978  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0370  1788               	bsf	8,7	;volatile
  2980  0371                     l102:
  2981  0371  0008               	return
  2982  0372                     __end_of_WriteCommandHT1621:
  2983                           
  2984                           	psect	text10
  2985  01C0                     __ptext10:	
  2986 ;; *************** function _WriteClockHT1621 *****************
  2987 ;; Defined at:
  2988 ;;		line 56 in file "ht1621.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, pclath, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 1
  3009 ;; This function calls:
  3010 ;;		_HT1621_Delay_us
  3011 ;; This function is called by:
  3012 ;;		_WriteCommandHT1621
  3013 ;;		_Write1DataHT1621
  3014 ;;		_WritenDataHT1621
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _WriteClockHT1621
  3020  01C0                     _WriteClockHT1621:
  3021  01C0                     l1596:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _WriteClockHT1621: [wreg+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;ht1621.c: 58:  RD6 = 0;
  3027  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  3028  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  3029  01C2  1308               	bcf	8,6	;volatile
  3030  01C3                     l1598:
  3031                           
  3032                           ;ht1621.c: 59:  HT1621_Delay_us(10);
  3033  01C3  300A               	movlw	10
  3034  01C4  00F1               	movwf	HT1621_Delay_us@ucDat
  3035  01C5  3000               	movlw	0
  3036  01C6  00F2               	movwf	HT1621_Delay_us@ucDat+1
  3037  01C7  120A  118A  2214  120A  118A  	fcall	_HT1621_Delay_us
  3038  01CC                     l1600:
  3039                           
  3040                           ;ht1621.c: 60:  RD6 = 1;
  3041  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3042  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3043  01CE  1708               	bsf	8,6	;volatile
  3044                           
  3045                           ;ht1621.c: 61:  HT1621_Delay_us(10);
  3046  01CF  300A               	movlw	10
  3047  01D0  00F1               	movwf	HT1621_Delay_us@ucDat
  3048  01D1  3000               	movlw	0
  3049  01D2  00F2               	movwf	HT1621_Delay_us@ucDat+1
  3050  01D3  120A  118A  2214  120A  118A  	fcall	_HT1621_Delay_us
  3051  01D8                     l95:
  3052  01D8  0008               	return
  3053  01D9                     __end_of_WriteClockHT1621:
  3054                           
  3055                           	psect	text11
  3056  0214                     __ptext11:	
  3057 ;; *************** function _HT1621_Delay_us *****************
  3058 ;; Defined at:
  3059 ;;		line 23 in file "ht1621.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  ucDat           2    0[COMMON] unsigned int 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  d               2    2[COMMON] unsigned int 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         2       0       0       0       0
  3074 ;;      Locals:         2       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0
  3076 ;;      Totals:         4       0       0       0       0
  3077 ;;Total ram usage:        4 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_WriteClockHT1621
  3083 ;;		_WriteCommandHT1621
  3084 ;;		_Write1DataHT1621
  3085 ;;		_WritenDataHT1621
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _HT1621_Delay_us
  3091  0214                     _HT1621_Delay_us:
  3092  0214                     l1588:	
  3093                           ;incstack = 0
  3094                           ; Regs used in _HT1621_Delay_us: [wreg+status,2+status,0]
  3095                           
  3096                           
  3097                           ;ht1621.c: 23: void HT1621_Delay_us(unsigned int ucDat);ht1621.c: 24: {;ht1621.c: 25:  w
      +                          hile(ucDat--)
  3098  0214  2A25               	goto	l1594
  3099  0215                     l1590:
  3100                           
  3101                           ;ht1621.c: 26:  {;ht1621.c: 27:   unsigned int d=6;
  3102  0215  3006               	movlw	6
  3103  0216  00F3               	movwf	HT1621_Delay_us@d
  3104  0217  3000               	movlw	0
  3105  0218  00F4               	movwf	HT1621_Delay_us@d+1
  3106  0219                     l1592:	
  3107                           ;ht1621.c: 28:         while(--d){
  3108                           
  3109                           
  3110                           ;ht1621.c: 28:         while(--d){
  3111  0219  3001               	movlw	1
  3112  021A  02F3               	subwf	HT1621_Delay_us@d,f
  3113  021B  3000               	movlw	0
  3114  021C  1C03               	skipc
  3115  021D  03F4               	decf	HT1621_Delay_us@d+1,f
  3116  021E  02F4               	subwf	HT1621_Delay_us@d+1,f
  3117  021F  0873               	movf	HT1621_Delay_us@d,w
  3118  0220  0474               	iorwf	HT1621_Delay_us@d+1,w
  3119  0221  1D03               	btfss	3,2
  3120  0222  2A24               	goto	u961
  3121  0223  2A25               	goto	u960
  3122  0224                     u961:
  3123  0224  2A19               	goto	l1592
  3124  0225                     u960:
  3125  0225                     l1594:
  3126                           
  3127                           ;ht1621.c: 25:  while(ucDat--)
  3128  0225  3001               	movlw	1
  3129  0226  02F1               	subwf	HT1621_Delay_us@ucDat,f
  3130  0227  3000               	movlw	0
  3131  0228  1C03               	skipc
  3132  0229  03F2               	decf	HT1621_Delay_us@ucDat+1,f
  3133  022A  02F2               	subwf	HT1621_Delay_us@ucDat+1,f
  3134  022B  0A71               	incf	HT1621_Delay_us@ucDat,w
  3135  022C  1D03               	skipz
  3136  022D  2A32               	goto	u971
  3137  022E  0A72               	incf	HT1621_Delay_us@ucDat+1,w
  3138  022F  1D03               	btfss	3,2
  3139  0230  2A32               	goto	u971
  3140  0231  2A33               	goto	u970
  3141  0232                     u971:
  3142  0232  2A15               	goto	l1590
  3143  0233                     u970:
  3144  0233                     l85:
  3145  0233  0008               	return
  3146  0234                     __end_of_HT1621_Delay_us:
  3147                           
  3148                           	psect	text12
  3149  01A4                     __ptext12:	
  3150 ;; *************** function _HT1621_num_init *****************
  3151 ;; Defined at:
  3152 ;;		line 347 in file "ht1621.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  LCD_data        1    0        unsigned char 
  3157 ;;  num             1    0        unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		None
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_HT1621_Init
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _HT1621_num_init
  3182  01A4                     _HT1621_num_init:
  3183  01A4                     l160:	
  3184                           ;incstack = 0
  3185                           ; Regs used in _HT1621_num_init: []
  3186                           
  3187  01A4  0008               	return
  3188  01A5                     __end_of_HT1621_num_init:
  3189  007E                     btemp	set	126	;btemp
  3190  007E                     wtemp0	set	126
  3191                           
  3192                           	psect	config
  3193                           
  3194                           ;Config register CONFIG @ 0x2007
  3195                           ;	Oscillator Selection bits
  3196                           ;	FOSC = HS, HS oscillator
  3197                           ;	Watchdog Timer Enable bit
  3198                           ;	WDTE = OFF, WDT disabled
  3199                           ;	Power-up Timer Enable bit
  3200                           ;	PWRTE = OFF, PWRT disabled
  3201                           ;	Brown-out Reset Enable bit
  3202                           ;	BOREN = OFF, BOR disabled
  3203                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3204                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3205                           ;	Data EEPROM Memory Code Protection bit
  3206                           ;	CPD = OFF, Data EEPROM code protection off
  3207                           ;	Flash Program Memory Write Enable bits
  3208                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3209                           ;	In-Circuit Debugger Mode bit
  3210                           ;	DEBUG = 0x1, unprogrammed default
  3211                           ;	Flash Program Memory Code Protection bit
  3212                           ;	CP = OFF, Code protection off
  3213  2007                     	org	8199
  3214  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     26      76
    BANK1            80      0       5
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_IR_test_display
    _nec_remote_read->_delay_us
    _IR_test_display->_Write1DataHT1621
    _Write1DataHT1621->_HT1621_Delay_us
    _I2C_Init->___lmul
    ___lldiv->___lmul
    _HT1621_Init->_WriteCommandHT1621
    _WriteCommandHT1621->_HT1621_Delay_us
    _WriteClockHT1621->_HT1621_Delay_us

Critical Paths under _main in BANK0

    _main->_I2C_Init
    _I2C_Init->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8237
                                             22 BANK0      4     4      0
                        _HT1621_Init
                           _I2C_Init
                    _IR_test_display
                    _nec_remote_read
 ---------------------------------------------------------------------------------
 (1) _nec_remote_read                                     14    12      2     733
                                              4 COMMON     6     4      2
                                              0 BANK0      8     8      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             4     2      2     349
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _IR_test_display                                      8     4      4    5428
                                             10 COMMON     3     3      0
                                              0 BANK0      5     1      4
                   _Write1DataHT1621
 ---------------------------------------------------------------------------------
 (2) _Write1DataHT1621                                     6     5      1    5008
                                              4 COMMON     6     5      1
                    _HT1621_Delay_us
                   _WriteClockHT1621
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     656
                                             14 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _HT1621_Init                                          1     1      0    1420
                                              9 COMMON     1     1      0
                    _HT1621_num_init
                 _WriteCommandHT1621
 ---------------------------------------------------------------------------------
 (2) _WriteCommandHT1621                                   5     5      0    1420
                                              4 COMMON     5     5      0
                    _HT1621_Delay_us
                   _WriteClockHT1621
 ---------------------------------------------------------------------------------
 (3) _WriteClockHT1621                                     0     0      0     653
                    _HT1621_Delay_us
 ---------------------------------------------------------------------------------
 (4) _HT1621_Delay_us                                      4     2      2     653
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _HT1621_num_init                                      2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HT1621_Init
     _HT1621_num_init
     _WriteCommandHT1621
       _HT1621_Delay_us
       _WriteClockHT1621
         _HT1621_Delay_us
   _I2C_Init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _IR_test_display
     _Write1DataHT1621
       _HT1621_Delay_us
       _WriteClockHT1621
   _nec_remote_read
     _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       5       7        6.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5E      12        0.0%
ABS                  0      0      5E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan 30 15:01:18 2022

                            pc 0002                             l85 0233                             l95 01D8  
                           l99 035A                             fsr 0004  WriteCommandHT1621@FunctonCode 0077  
                          l100 0341                            l102 0371                            l111 04BE  
                          l112 04A6                            l114 04CD                            l107 0480  
                          l109 0499                            l231 030C                            l160 01A4  
                          l155 0273                            l420 02B9                            l192 05D2  
                          l281 01F5                            l442 03D9                            l276 01D9  
                          l292 07DE                            _RC1 0039                            _RB5 0035  
                          _RD5 0045                            _RD6 0046                            _RD7 0047  
                          _PEN 048A                            _SEN 0488                            u960 0225  
                          u961 0224                            u970 0233                            u971 0232  
                          u980 033D                            u981 033C                            u990 035A  
                          u991 0359                            _min 0032                            _sec 0030  
                          fsr0 0004                            indf 0000                           l2050 03F9  
                         l2052 0404                           l2044 03DA                           l2054 0430  
                         l2046 03E1                           l1600 01CC                           l2056 0434  
                         l2048 03E6                           l1610 0321                           l1602 030E  
                         l2058 0441                           l1620 0336                           l1612 0326  
                         l1604 0312                           l1630 0344                           l1614 0329  
                         l1606 0315                           l1640 0362                           l1632 0349  
                         l1616 032E                           l1608 031E                           l1800 0234  
                         l1642 036E                           l1634 0350                           l1626 0337  
                         l1618 0331                           l1810 0262                           l1802 023E  
                         l1650 0460                           l1636 0354                           l1628 033D  
                         l1812 0268                           l1804 0250                           l1820 02C5  
                         l1660 047C                           l1652 0468                           l1644 044C  
                         l1590 0215                           l1638 035D                           l1806 0256  
                         l1822 030B                           l1814 02BA                           l1670 049B  
                         l1662 0483                           l1654 0470                           l1646 044F  
                         l1910 07C9                           l1902 0767                           l1830 05F7  
                         l1592 0219                           l1808 025C                           l1816 02BE  
                         l1680 04A9                           l1664 0488                           l1656 0474  
                         l1648 0458                           l1920 04FB                           l1760 01E9  
                         l1912 07DA                           l1904 077A                           l1832 05FD  
                         l1824 05D3                           l1594 0225                           l1770 02A0  
                         l1762 0274                           l1818 02C2                           l1690 04CA  
                         l1682 04AE                           l1666 048F                           l1658 0476  
                         l1930 055F                           l1922 0511                           l1906 0799  
                         l1850 0661                           l1842 0637                           l1834 060E  
                         l1826 05DE                           l1588 0214                           l1596 01C0  
                         l1780 0387                           l1772 02B1                           l1764 027C  
                         l1684 04B4                           l1676 049C                           l1668 0493  
                         l1932 057F                           l1924 0518                           l1916 04CE  
                         l1756 01D9                           l1908 07BB                           l1860 0699  
                         l1852 0672                           l1844 0642                           l1836 0621  
                         l1828 05EE                           l1598 01C3                           l1790 03C1  
                         l1782 0394                           l1766 0280                           l1686 04B8  
                         l1678 04A2                           l1934 059C                           l1926 0538  
                         l1918 04DF                           l1758 01DD                           l1870 06BE  
                         l1854 0685                           l1846 0652                           l1838 0634  
                         l1792 03C2                           l1784 0398                           l1776 0372  
                         l1768 0297                           l1688 04C1                           l1936 05BC  
                         l1928 054E                           l1872 06C7                           l1848 065B  
                         l1794 03CB                           l1786 03A1                           l1778 0384  
                         l1890 0729                           l1874 06CD                           l1866 06A3  
                         l1788 03B3                           l1796 03D1                           l1892 072F  
                         l1884 0705                           l1876 06DE                           l1868 06AE  
                         l1894 0740                           l1886 0710                           l1878 06F1  
                         l1896 0753                           l1888 0720                           u1000 047C  
                         u1001 047B                           u1010 0499                           u1011 0498  
                         u1020 04A2                           u1021 04A1                           u1030 04BE  
                         u1110 01E9                           u1031 04BD                           u1111 01E8  
                         u1200 0398                           u1120 01F5                           u1201 0397  
                         u1121 01F4                           u1130 0280                           u1131 027F  
                         u1220 03B3                           u1300 0661                           u1221 03B2  
                         u1141 0289                           u1301 0660                           u1142 0290  
                         u1310 0672                           u1215 039A                           u1143 0297  
                         u1311 0671                           u1240 03D1                           u1400 0753  
                         u1320 0685                           u1241 03D0                           u1225 03AF  
                         u1401 0752                           u1321 0684                           u1313 066E  
                         u1170 02B1                           u1250 02D5                           u1410 0766  
                         u1330 0698                           u1235 03C3                           u1171 02B0  
                         u1155 0299                           u1411 0765                           u1403 074F  
                         u1331 0697                           u1323 0681                           u1180 0384  
                         u1420 077A                           u1340 06CD                           u1260 05FD  
                         u1181 0383                           u1165 02A1                           u1421 0779  
                         u1413 0762                           u1341 06CC                           u1333 0694  
                         u1261 05FC                           u1430 078D                           u1350 06DE  
                         u1270 060E                           u1255 02D0                           u1423 0776  
                         u1351 06DD                           u1271 060D                           u1440 07AC  
                         u1360 06F1                           u1280 0621                           u1505 056A  
                         u1361 06F0                           u1353 06DA                           u1281 0620  
                         u1273 060A                           u1450 07DA                           u1370 0704  
                         u1290 0634                           u1195 0389                           u1515 05A7  
                         u1451 07D9                           u1435 0788                           u1371 0703  
                         u1363 06ED                           u1291 0633                           u1283 061D  
                         u1380 072F                           u1453 07D6                           u1445 07A7  
                         u1381 072E                           u1373 0700                           u1293 0630  
                         u1390 0740                           u1391 073F                           u1640 0404  
                         u1465 04D5                           u1393 073C                           u1641 0403  
                         u1650 0414                           u1475 04E6                           u1660 0429  
                         u1485 0523                           u1670 0447                           u1495 0555  
                         u1671 0446                           u1655 040F                           u1665 0424  
                         _RCEN 048B              ??_IR_test_display 007B                           _date 0036  
                         _main 03DA                           _hour 0034               __end_of_I2C_Init 030D  
                         _year 003A                           _text 00A0                           btemp 007E  
                         start 0001           __size_of_HT1621_Init 0040           HT1621_Delay_us@ucDat 0071  
                        ?_main 0071                          _ACKEN 048C                          _ACKDT 048D  
              __end_of___lldiv 03DA            ___lmul@multiplicand 0075                          _month 0038  
     __size_of_HT1621_Delay_us 0020                          pclath 000A                          status 0003  
                        wtemp0 007E      __size_of_WriteClockHT1621 0019                __initialization 07DF  
                 __end_of_main 044B                         ??_main 0054              ?_Write1DataHT1621 0075  
           ??_Write1DataHT1621 0076       __size_of_nec_remote_read 020C                         _SSPADD 0093  
                       _TRISC1 0439                         _TRISB5 0435                         _TRISC3 043B  
                       _TRISC4 043C                         _TRISD5 0445                         _TRISD6 0446  
                       _TRISD7 0447                         _SSPCON 0014                         _SSPBUF 0013  
             HT1621_Delay_us@d 0073               __end_of_delay_us 01F6                         ___lmul 0274  
                    ??___lldiv 0046       __size_of_HT1621_num_init 0001                      ?_I2C_Init 004C  
      __end_of__initialization 07FC     __end_of_WriteCommandHT1621 0372              ??_HT1621_Delay_us 0073  
               __pcstackCOMMON 0071                   __pidataBANK0 01F6                _IR_test_display 04CE  
           IR_test_display@add 003E                     ??_I2C_Init 0050                     __pbssBANK0 0058  
                   __pbssBANK1 00A0              ??_nec_remote_read 0077               _WriteClockHT1621 01C0  
                 I2C_Init@freq 004C                     __pmaintext 03DA                        ?___lmul 0071  
               ___lmul@product 007A                      ?_delay_us 0071              ??_HT1621_num_init 0071  
                      _SSPCON2 0091           nec_remote_read@count 0042                        _SSPSTAT 0094  
                   __stringtab 0004                  ??_HT1621_Init 007A               nec_remote_read@i 003E  
                _HT1621_maxcom 003D                  _HT1621_segtab 000A                __size_of___lmul 0046  
      __end_of_IR_test_display 05D3                        ___lldiv 0372                        _address 0068  
                      __ptext1 05D3                        __ptext2 01D9                        __ptext3 04CE  
                      __ptext4 044B                        __ptext5 02BA                        __ptext6 0274  
                      __ptext7 0372                        __ptext8 0234                        __ptext9 030D  
                      _command 0066                        _ir_code 0060                     ??_delay_us 0073  
      WriteCommandHT1621@Shift 0078                        clrloop0 01A6           end_of_initialization 07FC  
         Write1DataHT1621@Addr 0078      __size_of_Write1DataHT1621 0083                ___lldiv@divisor 003E  
              ___lldiv@counter 004B            WriteCommandHT1621@i 0079            __end_of_HT1621_Init 0274  
            __size_of_I2C_Init 0053                _HT1621_Delay_us 0214               ?_IR_test_display 003E  
               __end_of___lmul 02BA             _WriteCommandHT1621 030D                _nec_remote_read 05D3  
          ?_WriteCommandHT1621 0071            start_initialization 07DF                  delay_us@ucDat 0071  
     __end_of_WriteClockHT1621 01D9           ??_WriteCommandHT1621 0075                    _HT1621_Init 0234  
                  _HT1621_comi 006A                    _HT1621_segi 006B                       ??___lmul 0079  
                   init_fetch0 01AD                    __pdataBANK0 0020                _HT1621_num_init 01A4  
      __end_of_HT1621_Delay_us 0234                      ___latbits 0002                  __pcstackBANK0 003E  
            __size_of_delay_us 001D               _Write1DataHT1621 044B       IR_test_display@Temp_Data 0042  
                     ?___lldiv 003E        __end_of_nec_remote_read 07DF                      __pstrings 0004  
       IR_test_display@command 0040                       _I2C_Init 02BA                      delay_us@d 0073  
                    clear_ram0 01A5                    _LCD_RAM_Tab 0020            Write1DataHT1621@Dat 0075  
      __end_of_HT1621_num_init 01A5                    __stringbase 0009               ?_HT1621_Delay_us 0071  
            ___lmul@multiplier 0071                 _HT1621_addrbit 003C                 _HT1621_dispram 0058  
             ?_nec_remote_read 0075               __size_of___lldiv 0068             __end_of__stringtab 000A  
                     _delay_us 01D9              ?_WriteClockHT1621 0071                       __ptext10 01C0  
                     __ptext11 0214                       __ptext12 01A4             ??_WriteClockHT1621 0075  
                  _inv_command 0064                  __size_of_main 0071                   ?_HT1621_Init 0071  
             ?_HT1621_num_init 0071       __end_of_Write1DataHT1621 04CE       __size_of_IR_test_display 0105  
                     init_ram0 01B1          Write1DataHT1621@Shift 007A               ___lldiv@dividend 0042  
  __size_of_WriteCommandHT1621 0065                      stringcode 0004          __end_of_HT1621_segtab 0012  
            Write1DataHT1621@i 0079               ___lldiv@quotient 0047                       stringdir 0004  
                     stringtab 0004  
