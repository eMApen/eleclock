

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 11 11:10:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F877A Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010E                     	;# 
   267  010F                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0088                     	;# 
   310  0089                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0094                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  010C                     	;# 
   325  010D                     	;# 
   326  010E                     	;# 
   327  010F                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0000                     	;# 
   331  0001                     	;# 
   332  0002                     	;# 
   333  0003                     	;# 
   334  0004                     	;# 
   335  0005                     	;# 
   336  0006                     	;# 
   337  0007                     	;# 
   338  0008                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0088                     	;# 
   370  0089                     	;# 
   371  008C                     	;# 
   372  008D                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390                           
   391                           	psect	idataCOMMON
   392  07FE                     __pidataCOMMON:
   393                           
   394                           ;initializer for _HT1621_maxcom
   395  07FE  3404               	retlw	4
   396                           
   397                           	psect	idataBANK0
   398  11F3                     __pidataBANK0:
   399                           
   400                           ;initializer for _sec
   401  11F3  3401               	retlw	1
   402  11F4  3400               	retlw	0
   403                           
   404                           ;initializer for _min
   405  11F5  3415               	retlw	21
   406  11F6  3400               	retlw	0
   407                           
   408                           ;initializer for _hour
   409  11F7  3416               	retlw	22
   410  11F8  3400               	retlw	0
   411                           
   412                           ;initializer for _date
   413  11F9  3401               	retlw	1
   414  11FA  3400               	retlw	0
   415                           
   416                           ;initializer for _month
   417  11FB  3402               	retlw	2
   418  11FC  3400               	retlw	0
   419                           
   420                           ;initializer for _year
   421  11FD  3416               	retlw	22
   422  11FE  3400               	retlw	0
   423                           
   424                           ;initializer for _HT1621_addrbit
   425  11FF  3406               	retlw	6
   426                           
   427                           	psect	idataBANK1
   428  1200                     __pidataBANK1:
   429                           
   430                           ;initializer for _LCD_RAM_Tab
   431  1200  347D               	retlw	125
   432  1201  3405               	retlw	5
   433  1202  345B               	retlw	91
   434  1203  341F               	retlw	31
   435  1204  3427               	retlw	39
   436  1205  343E               	retlw	62
   437  1206  347E               	retlw	126
   438  1207  3415               	retlw	21
   439  1208  347F               	retlw	127
   440  1209  343F               	retlw	63
   441  120A  3477               	retlw	119
   442  120B  346E               	retlw	110
   443  120C  3478               	retlw	120
   444  120D  344F               	retlw	79
   445  120E  347A               	retlw	122
   446  120F  3472               	retlw	114
   447                           
   448                           	psect	strings
   449  1000                     __pstrings:
   450  1000                     stringtab:
   451  1000                     __stringtab:
   452  1000                     stringcode:	
   453                           ;	String table - string pointers are 1 byte each
   454                           
   455  1000                     stringdir:
   456  1000  3010               	movlw	high stringdir
   457  1001  008A               	movwf	10
   458  1002  0804               	movf	4,w
   459  1003  0A84               	incf	4,f
   460  1004  0782               	addwf	2,f
   461  1005                     __stringbase:
   462  1005  3400               	retlw	0
   463  1006                     __end_of__stringtab:
   464  1006                     _HT1621_segtab:
   465  1006  3400               	retlw	0
   466  1007  3401               	retlw	1
   467  1008  3402               	retlw	2
   468  1009  3403               	retlw	3
   469  100A  3404               	retlw	4
   470  100B  3405               	retlw	5
   471  100C  3406               	retlw	6
   472  100D  3407               	retlw	7
   473  100E                     __end_of_HT1621_segtab:
   474  0010                     _T1CON	set	16
   475  001D                     _CCP2CON	set	29
   476  0013                     _SSPBUF	set	19
   477  0014                     _SSPCON	set	20
   478  0001                     _TMR0	set	1
   479  0080                     _TMR1ON	set	128
   480  005D                     _T0IE	set	93
   481  0047                     _RD7	set	71
   482  0045                     _RD5	set	69
   483  0046                     _RD6	set	70
   484  005F                     _GIE	set	95
   485  0068                     _CCP2IF	set	104
   486  005A                     _T0IF	set	90
   487  0035                     _RB5	set	53
   488  0087                     _TRISC	set	135
   489  0094                     _SSPSTAT	set	148
   490  0093                     _SSPADD	set	147
   491  0091                     _SSPCON2	set	145
   492  0468                     _CCP2IE	set	1128
   493  0439                     _TRISC1	set	1081
   494  040B                     _PSA	set	1035
   495  040D                     _T0CS	set	1037
   496  048C                     _ACKEN	set	1164
   497  048D                     _ACKDT	set	1165
   498  048B                     _RCEN	set	1163
   499  048A                     _PEN	set	1162
   500  0488                     _SEN	set	1160
   501  043C                     _TRISC4	set	1084
   502  043B                     _TRISC3	set	1083
   503  0447                     _TRISD7	set	1095
   504  0446                     _TRISD6	set	1094
   505  0445                     _TRISD5	set	1093
   506  0435                     _TRISB5	set	1077
   507                           
   508                           	psect	cinit
   509  000F                     start_initialization:	
   510                           ; #config settings
   511                           
   512  000F                     __initialization:
   513                           
   514                           ; Initialize objects allocated to BANK1
   515  000F  1383               	bcf	3,7	;select IRP bank0
   516  0010  30B0               	movlw	low (__pdataBANK1+16)
   517  0011  00FD               	movwf	btemp+-1
   518  0012  3012               	movlw	high __pidataBANK1
   519  0013  00FE               	movwf	btemp
   520  0014  3000               	movlw	low __pidataBANK1
   521  0015  00FF               	movwf	btemp+1
   522  0016  30A0               	movlw	low __pdataBANK1
   523  0017  0084               	movwf	4
   524  0018  160A  118A  2214  120A  118A  	fcall	init_ram0
   525                           
   526                           ; Initialize objects allocated to BANK0
   527  001D  306F               	movlw	low (__pdataBANK0+13)
   528  001E  00FD               	movwf	btemp+-1
   529  001F  3011               	movlw	high __pidataBANK0
   530  0020  00FE               	movwf	btemp
   531  0021  30F3               	movlw	low __pidataBANK0
   532  0022  00FF               	movwf	btemp+1
   533  0023  3062               	movlw	low __pdataBANK0
   534  0024  0084               	movwf	4
   535  0025  160A  118A  2214  120A  118A  	fcall	init_ram0
   536                           
   537                           ; Initialize objects allocated to COMMON
   538  002A  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   539  002F  00FB               	movwf	__pdataCOMMON& (0+127)
   540                           
   541                           ; Clear objects allocated to BANK1
   542  0030  30B0               	movlw	low __pbssBANK1
   543  0031  0084               	movwf	4
   544  0032  30B8               	movlw	low (__pbssBANK1+8)
   545  0033  160A  118A  21C2  120A  118A  	fcall	clear_ram0
   546                           
   547                           ; Clear objects allocated to BANK0
   548  0038  3053               	movlw	low __pbssBANK0
   549  0039  0084               	movwf	4
   550  003A  3062               	movlw	low (__pbssBANK0+15)
   551  003B  160A  118A  21C2  120A  118A  	fcall	clear_ram0
   552                           
   553                           ; Clear objects allocated to COMMON
   554  0040  01F6               	clrf	__pbssCOMMON& (0+127)
   555  0041  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   556  0042  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   557  0043  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   558  0044  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   559  0045                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0045                     __end_of__initialization:
   563  0045  0183               	clrf	3
   564  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssCOMMON
   567  0076                     __pbssCOMMON:
   568  0076                     _head_ok:
   569  0076                     	ds	1
   570  0077                     _buf1:
   571  0077                     	ds	1
   572  0078                     _int_times:
   573  0078                     	ds	1
   574  0079                     _code_data:
   575  0079                     	ds	1
   576  007A                     _tmr_times:
   577  007A                     	ds	1
   578                           
   579                           	psect	dataCOMMON
   580  007B                     __pdataCOMMON:
   581  007B                     _HT1621_maxcom:
   582  007B                     	ds	1
   583                           
   584                           	psect	bssBANK0
   585  0053                     __pbssBANK0:
   586  0053                     _IRKey:
   587  0053                     	ds	2
   588  0055                     _fengcon:
   589  0055                     	ds	2
   590  0057                     _code:
   591  0057                     	ds	2
   592  0059                     _HT1621_comi:
   593  0059                     	ds	1
   594  005A                     _HT1621_segi:
   595  005A                     	ds	1
   596  005B                     _cursor:
   597  005B                     	ds	1
   598  005C                     _Setting:
   599  005C                     	ds	1
   600  005D                     _Mode:
   601  005D                     	ds	1
   602  005E                     _display:
   603  005E                     	ds	4
   604                           
   605                           	psect	dataBANK0
   606  0062                     __pdataBANK0:
   607  0062                     _sec:
   608  0062                     	ds	2
   609  0064                     _min:
   610  0064                     	ds	2
   611  0066                     _hour:
   612  0066                     	ds	2
   613  0068                     _date:
   614  0068                     	ds	2
   615  006A                     _month:
   616  006A                     	ds	2
   617  006C                     _year:
   618  006C                     	ds	2
   619  006E                     _HT1621_addrbit:
   620  006E                     	ds	1
   621                           
   622                           	psect	bssBANK1
   623  00B0                     __pbssBANK1:
   624  00B0                     _HT1621_dispram:
   625  00B0                     	ds	8
   626                           
   627                           	psect	dataBANK1
   628  00A0                     __pdataBANK1:
   629  00A0                     _LCD_RAM_Tab:
   630  00A0                     	ds	16
   631                           
   632                           	psect	inittext
   633  1210                     init_fetch0:	
   634                           ;	Called with low address in FSR and high address in W
   635                           
   636  1210  087E               	movf	btemp,w
   637  1211  008A               	movwf	10
   638  1212  087F               	movf	btemp+1,w
   639  1213  0082               	movwf	2
   640  1214                     init_ram0:	
   641                           ;Called with:
   642                           ;	high address of idata address in btemp 
   643                           ;	low address of idata address in btemp+1 
   644                           ;	low address of data in FSR
   645                           ;	high address + 1 of data in btemp-1
   646                           
   647  1214  160A  118A  2210  160A  118A  	fcall	init_fetch0
   648  1219  0080               	movwf	0
   649  121A  0A84               	incf	4,f
   650  121B  0804               	movf	4,w
   651  121C  067D               	xorwf	btemp+-1,w
   652  121D  1903               	btfsc	3,2
   653  121E  3400               	retlw	0
   654  121F  0AFF               	incf	btemp+1,f
   655  1220  1903               	btfsc	3,2
   656  1221  0AFE               	incf	btemp,f
   657  1222  2A14               	goto	init_ram0
   658                           
   659                           	psect	clrtext
   660  11C2                     clear_ram0:	
   661                           ;	Called with FSR containing the base address, and
   662                           ;	W with the last address+1
   663                           
   664  11C2  0064               	clrwdt	;clear the watchdog before getting into this loop
   665  11C3                     clrloop0:
   666  11C3  0180               	clrf	0	;clear RAM location pointed to by FSR
   667  11C4  0A84               	incf	4,f	;increment pointer
   668  11C5  0604               	xorwf	4,w	;XOR with final address
   669  11C6  1903               	btfsc	3,2	;have we reached the end yet?
   670  11C7  3400               	retlw	0	;all done for this memory range, return
   671  11C8  0604               	xorwf	4,w	;XOR again to restore value
   672  11C9  29C3               	goto	clrloop0	;do the next byte
   673                           
   674                           	psect	cstackCOMMON
   675  0070                     __pcstackCOMMON:
   676  0070                     ?_HT1621_Init:
   677  0070                     ?_init_io:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_updateTime:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_setTime:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_wrong:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_one_zero:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_one_zero:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_HT1621_num_init:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_main:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_interrupt_service:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_WriteClockHT1621:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_WriteCommandHT1621:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_I2C_Hold:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_I2C_Begin:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_I2C_End:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     wrong@errorid:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 2 bytes @ 0x0
   724  0070                     	ds	2
   725  0072                     ??_wrong:
   726  0072                     ??_interrupt_service:	
   727                           ; 1 bytes @ 0x2
   728                           
   729                           
   730                           ; 1 bytes @ 0x2
   731  0072                     	ds	4
   732                           
   733                           	psect	cstackBANK0
   734  0020                     __pcstackBANK0:
   735  0020                     ??_init_io:
   736  0020                     ??_HT1621_num_init:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     ?_HT1621_Delay_us:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ??_I2C_Hold:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0020                     ??_I2C_Begin:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ??_I2C_End:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ?_I2C_Read:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ?___wmul:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0020                     ?___awdiv:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0020                     ?___awmod:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0020                     ?___lwmod:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0020                     ?___lmul:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0020                     HT1621_Delay_us@ucDat:	
   770                           ; 4 bytes @ 0x0
   771                           
   772  0020                     I2C_Read@ack:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0020                     ___wmul@multiplier:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0020                     ___awdiv@divisor:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0020                     ___awmod@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0020                     ___lwmod@divisor:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0020                     ___lmul@multiplier:	
   788                           ; 2 bytes @ 0x0
   789                           
   790                           
   791                           ; 4 bytes @ 0x0
   792  0020                     	ds	2
   793  0022                     ??_HT1621_Delay_us:
   794  0022                     ??_I2C_Read:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0022                     HT1621_Delay_us@d:	
   798                           ; 1 bytes @ 0x2
   799                           
   800  0022                     ___wmul@multiplicand:	
   801                           ; 2 bytes @ 0x2
   802                           
   803  0022                     ___awdiv@dividend:	
   804                           ; 2 bytes @ 0x2
   805                           
   806  0022                     ___awmod@dividend:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0022                     ___lwmod@dividend:	
   810                           ; 2 bytes @ 0x2
   811                           
   812                           
   813                           ; 2 bytes @ 0x2
   814  0022                     	ds	2
   815  0024                     ??_WriteClockHT1621:
   816  0024                     ??_WriteCommandHT1621:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0024                     ?_Write1DataHT1621:	
   820                           ; 1 bytes @ 0x4
   821                           
   822  0024                     ??___wmul:	
   823                           ; 1 bytes @ 0x4
   824                           
   825  0024                     ??___awdiv:	
   826                           ; 1 bytes @ 0x4
   827                           
   828  0024                     ??___awmod:	
   829                           ; 1 bytes @ 0x4
   830                           
   831  0024                     ??___lwmod:	
   832                           ; 1 bytes @ 0x4
   833                           
   834  0024                     Write1DataHT1621@Dat:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  0024                     I2C_Read@incoming:	
   838                           ; 1 bytes @ 0x4
   839                           
   840  0024                     ___wmul@product:	
   841                           ; 2 bytes @ 0x4
   842                           
   843  0024                     ___lmul@multiplicand:	
   844                           ; 2 bytes @ 0x4
   845                           
   846                           
   847                           ; 4 bytes @ 0x4
   848  0024                     	ds	1
   849  0025                     ??_Write1DataHT1621:
   850  0025                     ___awdiv@counter:	
   851                           ; 1 bytes @ 0x5
   852                           
   853  0025                     ___awmod@counter:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0025                     ___lwmod@counter:	
   857                           ; 1 bytes @ 0x5
   858                           
   859                           
   860                           ; 1 bytes @ 0x5
   861  0025                     	ds	1
   862  0026                     ?_b2d:
   863  0026                     ?___lwdiv:	
   864                           ; 2 bytes @ 0x6
   865                           
   866  0026                     WriteCommandHT1621@FunctonCode:	
   867                           ; 2 bytes @ 0x6
   868                           
   869  0026                     ___awdiv@sign:	
   870                           ; 1 bytes @ 0x6
   871                           
   872  0026                     ___awmod@sign:	
   873                           ; 1 bytes @ 0x6
   874                           
   875  0026                     b2d@to_convert:	
   876                           ; 1 bytes @ 0x6
   877                           
   878  0026                     ___lwdiv@divisor:	
   879                           ; 2 bytes @ 0x6
   880                           
   881                           
   882                           ; 2 bytes @ 0x6
   883  0026                     	ds	1
   884  0027                     WriteCommandHT1621@Shift:
   885  0027                     Write1DataHT1621@Addr:	
   886                           ; 1 bytes @ 0x7
   887                           
   888  0027                     ___awdiv@quotient:	
   889                           ; 1 bytes @ 0x7
   890                           
   891                           
   892                           ; 2 bytes @ 0x7
   893  0027                     	ds	1
   894  0028                     ??_b2d:
   895  0028                     ??___lmul:	
   896                           ; 1 bytes @ 0x8
   897                           
   898  0028                     WriteCommandHT1621@i:	
   899                           ; 1 bytes @ 0x8
   900                           
   901  0028                     Write1DataHT1621@i:	
   902                           ; 1 bytes @ 0x8
   903                           
   904  0028                     ___lwdiv@dividend:	
   905                           ; 1 bytes @ 0x8
   906                           
   907                           
   908                           ; 2 bytes @ 0x8
   909  0028                     	ds	1
   910  0029                     ??_HT1621_Init:
   911  0029                     ?_d2b:	
   912                           ; 1 bytes @ 0x9
   913                           
   914  0029                     Write1DataHT1621@Shift:	
   915                           ; 2 bytes @ 0x9
   916                           
   917  0029                     d2b@to_convert:	
   918                           ; 1 bytes @ 0x9
   919                           
   920  0029                     ___lmul@product:	
   921                           ; 2 bytes @ 0x9
   922                           
   923                           
   924                           ; 4 bytes @ 0x9
   925  0029                     	ds	1
   926  002A                     ?_IR_data_display:
   927  002A                     ?_Setting_display:	
   928                           ; 1 bytes @ 0xA
   929                           
   930  002A                     ??___lwdiv:	
   931                           ; 1 bytes @ 0xA
   932                           
   933  002A                     Setting_display@dp:	
   934                           ; 1 bytes @ 0xA
   935                           
   936  002A                     IR_data_display@data:	
   937                           ; 1 bytes @ 0xA
   938                           
   939                           
   940                           ; 2 bytes @ 0xA
   941  002A                     	ds	1
   942  002B                     ??_Setting_display:
   943  002B                     ??_d2b:	
   944                           ; 1 bytes @ 0xB
   945                           
   946  002B                     ___lwdiv@quotient:	
   947                           ; 1 bytes @ 0xB
   948                           
   949                           
   950                           ; 2 bytes @ 0xB
   951  002B                     	ds	1
   952  002C                     ??_IR_data_display:
   953                           
   954                           ; 1 bytes @ 0xC
   955  002C                     	ds	1
   956  002D                     ?_I2C_Write:
   957  002D                     ?___lldiv:	
   958                           ; 1 bytes @ 0xD
   959                           
   960  002D                     ___lwdiv@counter:	
   961                           ; 4 bytes @ 0xD
   962                           
   963  002D                     I2C_Write@data:	
   964                           ; 1 bytes @ 0xD
   965                           
   966  002D                     ___lldiv@divisor:	
   967                           ; 2 bytes @ 0xD
   968                           
   969                           
   970                           ; 4 bytes @ 0xD
   971  002D                     	ds	1
   972  002E                     ?_HT1621_Display_Year:
   973  002E                     ?_HT1621_Display_Date:	
   974                           ; 1 bytes @ 0xE
   975                           
   976  002E                     ?_HT1621_Display_Time:	
   977                           ; 1 bytes @ 0xE
   978                           
   979  002E                     Setting_display@cursor:	
   980                           ; 1 bytes @ 0xE
   981                           
   982  002E                     HT1621_Display_Time@hour:	
   983                           ; 1 bytes @ 0xE
   984                           
   985  002E                     HT1621_Display_Date@mon:	
   986                           ; 2 bytes @ 0xE
   987                           
   988  002E                     HT1621_Display_Year@year:	
   989                           ; 2 bytes @ 0xE
   990                           
   991                           
   992                           ; 2 bytes @ 0xE
   993  002E                     	ds	1
   994  002F                     ??_updateTime:
   995  002F                     ??_setTime:	
   996                           ; 1 bytes @ 0xF
   997                           
   998  002F                     ??_I2C_Write:	
   999                           ; 1 bytes @ 0xF
  1000                           
  1001  002F                     IR_data_display@Temp_Data:	
  1002                           ; 1 bytes @ 0xF
  1003                           
  1004  002F                     Setting_display@Temp_Data:	
  1005                           ; 1 bytes @ 0xF
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0xF
  1009  002F                     	ds	1
  1010  0030                     ??_HT1621_Display_Year:
  1011  0030                     HT1621_Display_Time@min:	
  1012                           ; 1 bytes @ 0x10
  1013                           
  1014  0030                     HT1621_Display_Date@date:	
  1015                           ; 2 bytes @ 0x10
  1016                           
  1017                           
  1018                           ; 2 bytes @ 0x10
  1019  0030                     	ds	1
  1020  0031                     ___lldiv@dividend:
  1021                           
  1022                           ; 4 bytes @ 0x11
  1023  0031                     	ds	1
  1024  0032                     ??_HT1621_Display_Date:
  1025  0032                     ??_HT1621_Display_Time:	
  1026                           ; 1 bytes @ 0x12
  1027                           
  1028  0032                     HT1621_Display_Year@Temp_Data:	
  1029                           ; 1 bytes @ 0x12
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x12
  1033  0032                     	ds	3
  1034  0035                     ??___lldiv:
  1035  0035                     HT1621_Display_Time@sec:	
  1036                           ; 1 bytes @ 0x15
  1037                           
  1038  0035                     HT1621_Display_Date@Temp_Data:	
  1039                           ; 1 bytes @ 0x15
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x15
  1043  0035                     	ds	1
  1044  0036                     HT1621_Display_Time@Temp_Data:
  1045  0036                     ___lldiv@quotient:	
  1046                           ; 1 bytes @ 0x16
  1047                           
  1048                           
  1049                           ; 4 bytes @ 0x16
  1050  0036                     	ds	4
  1051  003A                     ___lldiv@counter:
  1052                           
  1053                           ; 1 bytes @ 0x1A
  1054  003A                     	ds	1
  1055  003B                     ?_I2C_Init:
  1056  003B                     I2C_Init@freq:	
  1057                           ; 1 bytes @ 0x1B
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x1B
  1061  003B                     	ds	4
  1062  003F                     ??_I2C_Init:
  1063                           
  1064                           ; 1 bytes @ 0x1F
  1065  003F                     	ds	4
  1066  0043                     ??_main:
  1067                           
  1068                           ; 1 bytes @ 0x23
  1069  0043                     	ds	12
  1070  004F                     _main$928:
  1071                           
  1072                           ; 2 bytes @ 0x2F
  1073  004F                     	ds	2
  1074  0051                     _main$927:
  1075                           
  1076                           ; 2 bytes @ 0x31
  1077  0051                     	ds	2
  1078                           
  1079                           	psect	maintext
  1080  0049                     __pmaintext:	
  1081 ;;
  1082 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1083 ;;
  1084 ;; *************** function _main *****************
  1085 ;; Defined at:
  1086 ;;		line 54 in file "eleclockmain.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : B00/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0       4       0       0       0
  1102 ;;      Temps:          0      12       0       0       0
  1103 ;;      Totals:         0      16       0       0       0
  1104 ;;Total ram usage:       16 bytes
  1105 ;; Hardware stack levels required when called: 6
  1106 ;; This function calls:
  1107 ;;		_HT1621_Display_Date
  1108 ;;		_HT1621_Display_Time
  1109 ;;		_HT1621_Display_Year
  1110 ;;		_HT1621_Init
  1111 ;;		_I2C_Init
  1112 ;;		_IR_data_display
  1113 ;;		_Setting_display
  1114 ;;		___lwdiv
  1115 ;;		___lwmod
  1116 ;;		___wmul
  1117 ;;		_init_io
  1118 ;;		_setTime
  1119 ;;		_updateTime
  1120 ;; This function is called by:
  1121 ;;		Startup code after reset
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _main
  1127  0049                     _main:
  1128  0049                     l5296:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1131                           
  1132                           
  1133                           ;eleclockmain.c: 55:     TRISB5=0;
  1134  0049  1683               	bsf	3,5	;RP0=1, select bank1
  1135  004A  1303               	bcf	3,6	;RP1=0, select bank1
  1136  004B  1286               	bcf	6,5	;volatile
  1137                           
  1138                           ;eleclockmain.c: 56:     RB5=0;
  1139  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1140  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1141  004E  1286               	bcf	6,5	;volatile
  1142  004F                     l5298:
  1143                           
  1144                           ;eleclockmain.c: 57:     HT1621_Init();
  1145  004F  120A  118A  27BE  120A  118A  	fcall	_HT1621_Init
  1146                           
  1147                           ;eleclockmain.c: 58:     I2C_Init(100);
  1148  0054  3000               	movlw	0
  1149  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0057  00BE               	movwf	I2C_Init@freq+3
  1152  0058  3000               	movlw	0
  1153  0059  00BD               	movwf	I2C_Init@freq+2
  1154  005A  3000               	movlw	0
  1155  005B  00BC               	movwf	I2C_Init@freq+1
  1156  005C  3064               	movlw	100
  1157  005D  00BB               	movwf	I2C_Init@freq
  1158  005E  160A  118A  2401  120A  118A  	fcall	_I2C_Init
  1159                           
  1160                           ;eleclockmain.c: 59:     init_io();
  1161  0063  160A  118A  2223  120A  118A  	fcall	_init_io
  1162  0068                     l5300:
  1163                           
  1164                           ;eleclockmain.c: 60:     Mode = 0x3;
  1165  0068  3003               	movlw	3
  1166  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1167  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1168  006B  00C3               	movwf	??_main
  1169  006C  0843               	movf	??_main,w
  1170  006D  00DD               	movwf	_Mode
  1171  006E                     l5302:
  1172                           
  1173                           ;eleclockmain.c: 62:     updateTime();
  1174  006E  120A  158A  20E5  120A  118A  	fcall	_updateTime
  1175  0073                     l5304:
  1176                           
  1177                           ;eleclockmain.c: 69:         if(!Setting){
  1178  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0075  085C               	movf	_Setting,w
  1181  0076  1D03               	btfss	3,2
  1182  0077  2879               	goto	u4321
  1183  0078  287A               	goto	u4320
  1184  0079                     u4321:
  1185  0079  2E39               	goto	l5596
  1186  007A                     u4320:
  1187  007A                     l5306:
  1188                           
  1189                           ;eleclockmain.c: 70:             updateTime();
  1190  007A  120A  158A  20E5  120A  118A  	fcall	_updateTime
  1191                           
  1192                           ;eleclockmain.c: 71:             switch(Mode){
  1193  007F  28C0               	goto	l5320
  1194  0080                     l5308:
  1195                           
  1196                           ;eleclockmain.c: 74:                     HT1621_Display_Year(year);
  1197  0080  086D               	movf	_year+1,w
  1198  0081  00AF               	movwf	HT1621_Display_Year@year+1
  1199  0082  086C               	movf	_year,w
  1200  0083  00AE               	movwf	HT1621_Display_Year@year
  1201  0084  160A  118A  2711  120A  118A  	fcall	_HT1621_Display_Year
  1202                           
  1203                           ;eleclockmain.c: 75:                     break;
  1204  0089  2E39               	goto	l5596
  1205  008A                     l5310:
  1206                           
  1207                           ;eleclockmain.c: 77:                     HT1621_Display_Date(month,date);
  1208  008A  086B               	movf	_month+1,w
  1209  008B  00AF               	movwf	HT1621_Display_Date@mon+1
  1210  008C  086A               	movf	_month,w
  1211  008D  00AE               	movwf	HT1621_Display_Date@mon
  1212  008E  0869               	movf	_date+1,w
  1213  008F  00B1               	movwf	HT1621_Display_Date@date+1
  1214  0090  0868               	movf	_date,w
  1215  0091  00B0               	movwf	HT1621_Display_Date@date
  1216  0092  120A  158A  22E6  120A  118A  	fcall	_HT1621_Display_Date
  1217                           
  1218                           ;eleclockmain.c: 78:                     break;
  1219  0097  2E39               	goto	l5596
  1220  0098                     l5312:
  1221                           
  1222                           ;eleclockmain.c: 80:                     HT1621_Display_Time(0,hour,min);
  1223  0098  0867               	movf	_hour+1,w
  1224  0099  00AF               	movwf	HT1621_Display_Time@hour+1
  1225  009A  0866               	movf	_hour,w
  1226  009B  00AE               	movwf	HT1621_Display_Time@hour
  1227  009C  0865               	movf	_min+1,w
  1228  009D  00B1               	movwf	HT1621_Display_Time@min+1
  1229  009E  0864               	movf	_min,w
  1230  009F  00B0               	movwf	HT1621_Display_Time@min
  1231  00A0  3000               	movlw	0
  1232  00A1  120A  118A  2672  120A  118A  	fcall	_HT1621_Display_Time
  1233                           
  1234                           ;eleclockmain.c: 81:                     break;
  1235  00A6  2E39               	goto	l5596
  1236  00A7                     l5314:
  1237                           
  1238                           ;eleclockmain.c: 83:                     HT1621_Display_Time(1,min,sec);
  1239  00A7  0865               	movf	_min+1,w
  1240  00A8  00AF               	movwf	HT1621_Display_Time@hour+1
  1241  00A9  0864               	movf	_min,w
  1242  00AA  00AE               	movwf	HT1621_Display_Time@hour
  1243  00AB  0863               	movf	_sec+1,w
  1244  00AC  00B1               	movwf	HT1621_Display_Time@min+1
  1245  00AD  0862               	movf	_sec,w
  1246  00AE  00B0               	movwf	HT1621_Display_Time@min
  1247  00AF  3001               	movlw	1
  1248  00B0  120A  118A  2672  120A  118A  	fcall	_HT1621_Display_Time
  1249                           
  1250                           ;eleclockmain.c: 84:                     break;
  1251  00B5  2E39               	goto	l5596
  1252  00B6                     l5316:
  1253                           
  1254                           ;eleclockmain.c: 86:                     IR_data_display(IRKey);
  1255  00B6  0854               	movf	_IRKey+1,w
  1256  00B7  00AB               	movwf	IR_data_display@data+1
  1257  00B8  0853               	movf	_IRKey,w
  1258  00B9  00AA               	movwf	IR_data_display@data
  1259  00BA  120A  158A  21E3  120A  118A  	fcall	_IR_data_display
  1260                           
  1261                           ;eleclockmain.c: 87:                     break;
  1262  00BF  2E39               	goto	l5596
  1263  00C0                     l5320:
  1264  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1265  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1266  00C2  085D               	movf	_Mode,w
  1267  00C3  00C3               	movwf	??_main
  1268  00C4  01C4               	clrf	??_main+1
  1269                           
  1270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1271                           ; Switch size 1, requested type "simple"
  1272                           ; Number of cases is 1, Range of values is 0 to 0
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte            4     3 (average)
  1276                           ; direct_byte           11     8 (fixed)
  1277                           ; jumptable            260     6 (fixed)
  1278                           ;	Chosen strategy is simple_byte
  1279  00C5  0844               	movf	??_main+1,w
  1280  00C6  3A00               	xorlw	0	; case 0
  1281  00C7  1903               	skipnz
  1282  00C8  28CA               	goto	l6246
  1283  00C9  28B6               	goto	l5316
  1284  00CA                     l6246:
  1285                           
  1286                           ; Switch size 1, requested type "simple"
  1287                           ; Number of cases is 4, Range of values is 1 to 4
  1288                           ; switch strategies available:
  1289                           ; Name         Instructions Cycles
  1290                           ; simple_byte           13     7 (average)
  1291                           ; direct_byte           23    11 (fixed)
  1292                           ; jumptable            263     9 (fixed)
  1293                           ;	Chosen strategy is simple_byte
  1294  00CA  0843               	movf	??_main,w
  1295  00CB  3A01               	xorlw	1	; case 1
  1296  00CC  1903               	skipnz
  1297  00CD  2880               	goto	l5308
  1298  00CE  3A03               	xorlw	3	; case 2
  1299  00CF  1903               	skipnz
  1300  00D0  288A               	goto	l5310
  1301  00D1  3A01               	xorlw	1	; case 3
  1302  00D2  1903               	skipnz
  1303  00D3  2898               	goto	l5312
  1304  00D4  3A07               	xorlw	7	; case 4
  1305  00D5  1903               	skipnz
  1306  00D6  28A7               	goto	l5314
  1307  00D7  28B6               	goto	l5316
  1308  00D8                     l5322:
  1309                           
  1310                           ;eleclockmain.c: 96:                 if(Setting){
  1311  00D8  085C               	movf	_Setting,w
  1312  00D9  1903               	btfsc	3,2
  1313  00DA  28DC               	goto	u4331
  1314  00DB  28DD               	goto	u4330
  1315  00DC                     u4331:
  1316  00DC  29EE               	goto	l5342
  1317  00DD                     u4330:
  1318  00DD  29D0               	goto	l5336
  1319  00DE                     l5326:
  1320                           
  1321                           ;eleclockmain.c: 100:                             year=display[0]*1000+display[1]*100+di
      +                          splay[2]*10+display[3];
  1322  00DE  085E               	movf	_display,w
  1323  00DF  00C3               	movwf	??_main
  1324  00E0  01C4               	clrf	??_main+1
  1325  00E1  0843               	movf	??_main,w
  1326  00E2  00A0               	movwf	___wmul@multiplier
  1327  00E3  0844               	movf	??_main+1,w
  1328  00E4  00A1               	movwf	___wmul@multiplier+1
  1329  00E5  30E8               	movlw	232
  1330  00E6  00A2               	movwf	___wmul@multiplicand
  1331  00E7  3003               	movlw	3
  1332  00E8  00A3               	movwf	___wmul@multiplicand+1
  1333  00E9  160A  118A  2280  120A  118A  	fcall	___wmul
  1334  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1335  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1336  00F0  0820               	movf	?___wmul,w
  1337  00F1  00C5               	movwf	??_main+2
  1338  00F2  0821               	movf	?___wmul+1,w
  1339  00F3  00C6               	movwf	??_main+3
  1340  00F4  085F               	movf	_display+1,w
  1341  00F5  00C7               	movwf	??_main+4
  1342  00F6  01C8               	clrf	??_main+5
  1343  00F7  0847               	movf	??_main+4,w
  1344  00F8  00A0               	movwf	___wmul@multiplier
  1345  00F9  0848               	movf	??_main+5,w
  1346  00FA  00A1               	movwf	___wmul@multiplier+1
  1347  00FB  3064               	movlw	100
  1348  00FC  00A2               	movwf	___wmul@multiplicand
  1349  00FD  3000               	movlw	0
  1350  00FE  00A3               	movwf	___wmul@multiplicand+1
  1351  00FF  160A  118A  2280  120A  118A  	fcall	___wmul
  1352  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0106  0820               	movf	?___wmul,w
  1355  0107  0745               	addwf	??_main+2,w
  1356  0108  00C9               	movwf	??_main+6
  1357  0109  0821               	movf	?___wmul+1,w
  1358  010A  1803               	skipnc
  1359  010B  0A21               	incf	?___wmul+1,w
  1360  010C  0746               	addwf	??_main+3,w
  1361  010D  00CA               	movwf	??_main+7
  1362  010E  0860               	movf	_display+2,w
  1363  010F  00CB               	movwf	??_main+8
  1364  0110  01CC               	clrf	??_main+9
  1365  0111  084B               	movf	??_main+8,w
  1366  0112  00A0               	movwf	___wmul@multiplier
  1367  0113  084C               	movf	??_main+9,w
  1368  0114  00A1               	movwf	___wmul@multiplier+1
  1369  0115  300A               	movlw	10
  1370  0116  00A2               	movwf	___wmul@multiplicand
  1371  0117  3000               	movlw	0
  1372  0118  00A3               	movwf	___wmul@multiplicand+1
  1373  0119  160A  118A  2280  120A  118A  	fcall	___wmul
  1374  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1375  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0120  0820               	movf	?___wmul,w
  1377  0121  0749               	addwf	??_main+6,w
  1378  0122  00CD               	movwf	??_main+10
  1379  0123  0821               	movf	?___wmul+1,w
  1380  0124  1803               	skipnc
  1381  0125  0A21               	incf	?___wmul+1,w
  1382  0126  074A               	addwf	??_main+7,w
  1383  0127  00CE               	movwf	??_main+11
  1384  0128  0861               	movf	_display+3,w
  1385  0129  074D               	addwf	??_main+10,w
  1386  012A  00EC               	movwf	_year
  1387  012B  3000               	movlw	0
  1388  012C  1803               	skipnc
  1389  012D  3001               	movlw	1
  1390  012E  074E               	addwf	??_main+11,w
  1391  012F  00ED               	movwf	_year+1
  1392                           
  1393                           ;eleclockmain.c: 101:                             break;
  1394  0130  29E6               	goto	l5338
  1395  0131                     l5328:
  1396                           
  1397                           ;eleclockmain.c: 103:                             month=display[0]*10+display[1];
  1398  0131  085E               	movf	_display,w
  1399  0132  00C3               	movwf	??_main
  1400  0133  01C4               	clrf	??_main+1
  1401  0134  0843               	movf	??_main,w
  1402  0135  00A0               	movwf	___wmul@multiplier
  1403  0136  0844               	movf	??_main+1,w
  1404  0137  00A1               	movwf	___wmul@multiplier+1
  1405  0138  300A               	movlw	10
  1406  0139  00A2               	movwf	___wmul@multiplicand
  1407  013A  3000               	movlw	0
  1408  013B  00A3               	movwf	___wmul@multiplicand+1
  1409  013C  160A  118A  2280  120A  118A  	fcall	___wmul
  1410  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0143  085F               	movf	_display+1,w
  1413  0144  0720               	addwf	?___wmul,w
  1414  0145  00EA               	movwf	_month
  1415  0146  3000               	movlw	0
  1416  0147  1803               	skipnc
  1417  0148  3001               	movlw	1
  1418  0149  0721               	addwf	?___wmul+1,w
  1419  014A  00EB               	movwf	_month+1
  1420                           
  1421                           ;eleclockmain.c: 104:                             date=display[2]*10+display[3];
  1422  014B  0860               	movf	_display+2,w
  1423  014C  00C3               	movwf	??_main
  1424  014D  01C4               	clrf	??_main+1
  1425  014E  0843               	movf	??_main,w
  1426  014F  00A0               	movwf	___wmul@multiplier
  1427  0150  0844               	movf	??_main+1,w
  1428  0151  00A1               	movwf	___wmul@multiplier+1
  1429  0152  300A               	movlw	10
  1430  0153  00A2               	movwf	___wmul@multiplicand
  1431  0154  3000               	movlw	0
  1432  0155  00A3               	movwf	___wmul@multiplicand+1
  1433  0156  160A  118A  2280  120A  118A  	fcall	___wmul
  1434  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1435  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1436  015D  0861               	movf	_display+3,w
  1437  015E  0720               	addwf	?___wmul,w
  1438  015F  00E8               	movwf	_date
  1439  0160  3000               	movlw	0
  1440  0161  1803               	skipnc
  1441  0162  3001               	movlw	1
  1442  0163  0721               	addwf	?___wmul+1,w
  1443  0164  00E9               	movwf	_date+1
  1444                           
  1445                           ;eleclockmain.c: 105:                             break;
  1446  0165  29E6               	goto	l5338
  1447  0166                     l5330:
  1448                           
  1449                           ;eleclockmain.c: 107:                             hour=display[0]*10+display[1];
  1450  0166  085E               	movf	_display,w
  1451  0167  00C3               	movwf	??_main
  1452  0168  01C4               	clrf	??_main+1
  1453  0169  0843               	movf	??_main,w
  1454  016A  00A0               	movwf	___wmul@multiplier
  1455  016B  0844               	movf	??_main+1,w
  1456  016C  00A1               	movwf	___wmul@multiplier+1
  1457  016D  300A               	movlw	10
  1458  016E  00A2               	movwf	___wmul@multiplicand
  1459  016F  3000               	movlw	0
  1460  0170  00A3               	movwf	___wmul@multiplicand+1
  1461  0171  160A  118A  2280  120A  118A  	fcall	___wmul
  1462  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0178  085F               	movf	_display+1,w
  1465  0179  0720               	addwf	?___wmul,w
  1466  017A  00E6               	movwf	_hour
  1467  017B  3000               	movlw	0
  1468  017C  1803               	skipnc
  1469  017D  3001               	movlw	1
  1470  017E  0721               	addwf	?___wmul+1,w
  1471  017F  00E7               	movwf	_hour+1
  1472                           
  1473                           ;eleclockmain.c: 108:                             min=display[2]*10+display[3];
  1474  0180  0860               	movf	_display+2,w
  1475  0181  00C3               	movwf	??_main
  1476  0182  01C4               	clrf	??_main+1
  1477  0183  0843               	movf	??_main,w
  1478  0184  00A0               	movwf	___wmul@multiplier
  1479  0185  0844               	movf	??_main+1,w
  1480  0186  00A1               	movwf	___wmul@multiplier+1
  1481  0187  300A               	movlw	10
  1482  0188  00A2               	movwf	___wmul@multiplicand
  1483  0189  3000               	movlw	0
  1484  018A  00A3               	movwf	___wmul@multiplicand+1
  1485  018B  160A  118A  2280  120A  118A  	fcall	___wmul
  1486  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0192  0861               	movf	_display+3,w
  1489  0193  0720               	addwf	?___wmul,w
  1490  0194  00E4               	movwf	_min
  1491  0195  3000               	movlw	0
  1492  0196  1803               	skipnc
  1493  0197  3001               	movlw	1
  1494  0198  0721               	addwf	?___wmul+1,w
  1495  0199  00E5               	movwf	_min+1
  1496                           
  1497                           ;eleclockmain.c: 109:                             break;
  1498  019A  29E6               	goto	l5338
  1499  019B                     l5332:
  1500                           
  1501                           ;eleclockmain.c: 111:                             min=display[0]*10+display[1];
  1502  019B  085E               	movf	_display,w
  1503  019C  00C3               	movwf	??_main
  1504  019D  01C4               	clrf	??_main+1
  1505  019E  0843               	movf	??_main,w
  1506  019F  00A0               	movwf	___wmul@multiplier
  1507  01A0  0844               	movf	??_main+1,w
  1508  01A1  00A1               	movwf	___wmul@multiplier+1
  1509  01A2  300A               	movlw	10
  1510  01A3  00A2               	movwf	___wmul@multiplicand
  1511  01A4  3000               	movlw	0
  1512  01A5  00A3               	movwf	___wmul@multiplicand+1
  1513  01A6  160A  118A  2280  120A  118A  	fcall	___wmul
  1514  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1515  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1516  01AD  085F               	movf	_display+1,w
  1517  01AE  0720               	addwf	?___wmul,w
  1518  01AF  00E4               	movwf	_min
  1519  01B0  3000               	movlw	0
  1520  01B1  1803               	skipnc
  1521  01B2  3001               	movlw	1
  1522  01B3  0721               	addwf	?___wmul+1,w
  1523  01B4  00E5               	movwf	_min+1
  1524                           
  1525                           ;eleclockmain.c: 112:                             sec=display[2]*10+display[3];
  1526  01B5  0860               	movf	_display+2,w
  1527  01B6  00C3               	movwf	??_main
  1528  01B7  01C4               	clrf	??_main+1
  1529  01B8  0843               	movf	??_main,w
  1530  01B9  00A0               	movwf	___wmul@multiplier
  1531  01BA  0844               	movf	??_main+1,w
  1532  01BB  00A1               	movwf	___wmul@multiplier+1
  1533  01BC  300A               	movlw	10
  1534  01BD  00A2               	movwf	___wmul@multiplicand
  1535  01BE  3000               	movlw	0
  1536  01BF  00A3               	movwf	___wmul@multiplicand+1
  1537  01C0  160A  118A  2280  120A  118A  	fcall	___wmul
  1538  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1539  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1540  01C7  0861               	movf	_display+3,w
  1541  01C8  0720               	addwf	?___wmul,w
  1542  01C9  00E2               	movwf	_sec
  1543  01CA  3000               	movlw	0
  1544  01CB  1803               	skipnc
  1545  01CC  3001               	movlw	1
  1546  01CD  0721               	addwf	?___wmul+1,w
  1547  01CE  00E3               	movwf	_sec+1
  1548                           
  1549                           ;eleclockmain.c: 113:                             break;
  1550  01CF  29E6               	goto	l5338
  1551  01D0                     l5336:
  1552  01D0  085D               	movf	_Mode,w
  1553  01D1  00C3               	movwf	??_main
  1554  01D2  01C4               	clrf	??_main+1
  1555                           
  1556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 1, Range of values is 0 to 0
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            4     3 (average)
  1562                           ; direct_byte           11     8 (fixed)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ;	Chosen strategy is simple_byte
  1565  01D3  0844               	movf	??_main+1,w
  1566  01D4  3A00               	xorlw	0	; case 0
  1567  01D5  1903               	skipnz
  1568  01D6  29D8               	goto	l6248
  1569  01D7  29E6               	goto	l5338
  1570  01D8                     l6248:
  1571                           
  1572                           ; Switch size 1, requested type "simple"
  1573                           ; Number of cases is 4, Range of values is 1 to 4
  1574                           ; switch strategies available:
  1575                           ; Name         Instructions Cycles
  1576                           ; simple_byte           13     7 (average)
  1577                           ; direct_byte           23    11 (fixed)
  1578                           ; jumptable            263     9 (fixed)
  1579                           ;	Chosen strategy is simple_byte
  1580  01D8  0843               	movf	??_main,w
  1581  01D9  3A01               	xorlw	1	; case 1
  1582  01DA  1903               	skipnz
  1583  01DB  28DE               	goto	l5326
  1584  01DC  3A03               	xorlw	3	; case 2
  1585  01DD  1903               	skipnz
  1586  01DE  2931               	goto	l5328
  1587  01DF  3A01               	xorlw	1	; case 3
  1588  01E0  1903               	skipnz
  1589  01E1  2966               	goto	l5330
  1590  01E2  3A07               	xorlw	7	; case 4
  1591  01E3  1903               	skipnz
  1592  01E4  299B               	goto	l5332
  1593  01E5  29E6               	goto	l5338
  1594  01E6                     l5338:
  1595                           
  1596                           ;eleclockmain.c: 117:                     setTime();
  1597  01E6  160A  118A  2662  120A  118A  	fcall	_setTime
  1598  01EB                     l5340:
  1599                           
  1600                           ;eleclockmain.c: 118:                     Setting=0;
  1601  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1602  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1603  01ED  01DC               	clrf	_Setting
  1604  01EE                     l5342:
  1605                           
  1606                           ;eleclockmain.c: 121:                 IRKey=0;
  1607  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1608  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1609  01F0  01D3               	clrf	_IRKey
  1610  01F1  01D4               	clrf	_IRKey+1
  1611                           
  1612                           ;eleclockmain.c: 122:                 break;
  1613  01F2  2873               	goto	l5304
  1614  01F3                     l5344:
  1615                           
  1616                           ;eleclockmain.c: 126:                 if(Setting==0){
  1617  01F3  085C               	movf	_Setting,w
  1618  01F4  1D03               	btfss	3,2
  1619  01F5  29F7               	goto	u4341
  1620  01F6  29F8               	goto	u4340
  1621  01F7                     u4341:
  1622  01F7  29EE               	goto	l5342
  1623  01F8                     u4340:
  1624  01F8  2B84               	goto	l5358
  1625  01F9                     l5348:
  1626                           
  1627                           ;eleclockmain.c: 130:                             display[0]=year/1000;
  1628  01F9  30E8               	movlw	232
  1629  01FA  00A6               	movwf	___lwdiv@divisor
  1630  01FB  3003               	movlw	3
  1631  01FC  00A7               	movwf	___lwdiv@divisor+1
  1632  01FD  086D               	movf	_year+1,w
  1633  01FE  00A9               	movwf	___lwdiv@dividend+1
  1634  01FF  086C               	movf	_year,w
  1635  0200  00A8               	movwf	___lwdiv@dividend
  1636  0201  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1637  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0208  0826               	movf	?___lwdiv,w
  1640  0209  00C3               	movwf	??_main
  1641  020A  0843               	movf	??_main,w
  1642  020B  00DE               	movwf	_display
  1643                           
  1644                           ;eleclockmain.c: 131:                             display[1]=year % 1000 / 100;
  1645  020C  3064               	movlw	100
  1646  020D  00A6               	movwf	___lwdiv@divisor
  1647  020E  3000               	movlw	0
  1648  020F  00A7               	movwf	___lwdiv@divisor+1
  1649  0210  086D               	movf	_year+1,w
  1650  0211  00A3               	movwf	___lwmod@dividend+1
  1651  0212  086C               	movf	_year,w
  1652  0213  00A2               	movwf	___lwmod@dividend
  1653  0214  30E8               	movlw	232
  1654  0215  00A0               	movwf	___lwmod@divisor
  1655  0216  3003               	movlw	3
  1656  0217  00A1               	movwf	___lwmod@divisor+1
  1657  0218  160A  118A  2337  120A  118A  	fcall	___lwmod
  1658  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1659  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1660  021F  0821               	movf	?___lwmod+1,w
  1661  0220  00A9               	movwf	___lwdiv@dividend+1
  1662  0221  0820               	movf	?___lwmod,w
  1663  0222  00A8               	movwf	___lwdiv@dividend
  1664  0223  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1665  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1667  022A  0826               	movf	?___lwdiv,w
  1668  022B  00C3               	movwf	??_main
  1669  022C  0843               	movf	??_main,w
  1670  022D  00DF               	movwf	_display+1
  1671                           
  1672                           ;eleclockmain.c: 132:                             display[2]=year % 1000 % 100 / 10;
  1673  022E  086D               	movf	_year+1,w
  1674  022F  00A3               	movwf	___lwmod@dividend+1
  1675  0230  086C               	movf	_year,w
  1676  0231  00A2               	movwf	___lwmod@dividend
  1677  0232  30E8               	movlw	232
  1678  0233  00A0               	movwf	___lwmod@divisor
  1679  0234  3003               	movlw	3
  1680  0235  00A1               	movwf	___lwmod@divisor+1
  1681  0236  160A  118A  2337  120A  118A  	fcall	___lwmod
  1682  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1683  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1684  023D  0821               	movf	?___lwmod+1,w
  1685  023E  00D2               	movwf	_main$927+1
  1686  023F  0820               	movf	?___lwmod,w
  1687  0240  00D1               	movwf	_main$927
  1688                           
  1689                           ;eleclockmain.c: 132:                             display[2]=year % 1000 % 100 / 10;
  1690  0241  300A               	movlw	10
  1691  0242  00A6               	movwf	___lwdiv@divisor
  1692  0243  3000               	movlw	0
  1693  0244  00A7               	movwf	___lwdiv@divisor+1
  1694  0245  0852               	movf	_main$927+1,w
  1695  0246  00A3               	movwf	___lwmod@dividend+1
  1696  0247  0851               	movf	_main$927,w
  1697  0248  00A2               	movwf	___lwmod@dividend
  1698  0249  3064               	movlw	100
  1699  024A  00A0               	movwf	___lwmod@divisor
  1700  024B  3000               	movlw	0
  1701  024C  00A1               	movwf	___lwmod@divisor+1
  1702  024D  160A  118A  2337  120A  118A  	fcall	___lwmod
  1703  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0254  0821               	movf	?___lwmod+1,w
  1706  0255  00A9               	movwf	___lwdiv@dividend+1
  1707  0256  0820               	movf	?___lwmod,w
  1708  0257  00A8               	movwf	___lwdiv@dividend
  1709  0258  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1710  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1711  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1712  025F  0826               	movf	?___lwdiv,w
  1713  0260  00C3               	movwf	??_main
  1714  0261  0843               	movf	??_main,w
  1715  0262  00E0               	movwf	_display+2
  1716                           
  1717                           ;eleclockmain.c: 133:                             display[3]=year % 1000 % 100 % 10;
  1718  0263  086D               	movf	_year+1,w
  1719  0264  00A3               	movwf	___lwmod@dividend+1
  1720  0265  086C               	movf	_year,w
  1721  0266  00A2               	movwf	___lwmod@dividend
  1722  0267  30E8               	movlw	232
  1723  0268  00A0               	movwf	___lwmod@divisor
  1724  0269  3003               	movlw	3
  1725  026A  00A1               	movwf	___lwmod@divisor+1
  1726  026B  160A  118A  2337  120A  118A  	fcall	___lwmod
  1727  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0272  0821               	movf	?___lwmod+1,w
  1730  0273  00D2               	movwf	_main$927+1
  1731  0274  0820               	movf	?___lwmod,w
  1732  0275  00D1               	movwf	_main$927
  1733                           
  1734                           ;eleclockmain.c: 133:                             display[3]=year % 1000 % 100 % 10;
  1735  0276  0852               	movf	_main$927+1,w
  1736  0277  00A3               	movwf	___lwmod@dividend+1
  1737  0278  0851               	movf	_main$927,w
  1738  0279  00A2               	movwf	___lwmod@dividend
  1739  027A  3064               	movlw	100
  1740  027B  00A0               	movwf	___lwmod@divisor
  1741  027C  3000               	movlw	0
  1742  027D  00A1               	movwf	___lwmod@divisor+1
  1743  027E  160A  118A  2337  120A  118A  	fcall	___lwmod
  1744  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0285  0821               	movf	?___lwmod+1,w
  1747  0286  00D0               	movwf	_main$928+1
  1748  0287  0820               	movf	?___lwmod,w
  1749  0288  00CF               	movwf	_main$928
  1750                           
  1751                           ;eleclockmain.c: 133:                             display[3]=year % 1000 % 100 % 10;
  1752  0289  300A               	movlw	10
  1753  028A  00A0               	movwf	___lwmod@divisor
  1754  028B  3000               	movlw	0
  1755  028C  00A1               	movwf	___lwmod@divisor+1
  1756  028D  0850               	movf	_main$928+1,w
  1757  028E  00A3               	movwf	___lwmod@dividend+1
  1758  028F  084F               	movf	_main$928,w
  1759  0290  00A2               	movwf	___lwmod@dividend
  1760  0291  160A  118A  2337  120A  118A  	fcall	___lwmod
  1761  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0298  0820               	movf	?___lwmod,w
  1764  0299  00C3               	movwf	??_main
  1765  029A  0843               	movf	??_main,w
  1766  029B  00E1               	movwf	_display+3
  1767                           
  1768                           ;eleclockmain.c: 134:                             break;
  1769  029C  2B9A               	goto	l101
  1770  029D                     l5350:
  1771                           
  1772                           ;eleclockmain.c: 136:                             display[0]=month / 10;
  1773  029D  300A               	movlw	10
  1774  029E  00A6               	movwf	___lwdiv@divisor
  1775  029F  3000               	movlw	0
  1776  02A0  00A7               	movwf	___lwdiv@divisor+1
  1777  02A1  086B               	movf	_month+1,w
  1778  02A2  00A9               	movwf	___lwdiv@dividend+1
  1779  02A3  086A               	movf	_month,w
  1780  02A4  00A8               	movwf	___lwdiv@dividend
  1781  02A5  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1782  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1783  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1784  02AC  0826               	movf	?___lwdiv,w
  1785  02AD  00C3               	movwf	??_main
  1786  02AE  0843               	movf	??_main,w
  1787  02AF  00DE               	movwf	_display
  1788                           
  1789                           ;eleclockmain.c: 137:                             display[1]=month % 10;
  1790  02B0  300A               	movlw	10
  1791  02B1  00A0               	movwf	___lwmod@divisor
  1792  02B2  3000               	movlw	0
  1793  02B3  00A1               	movwf	___lwmod@divisor+1
  1794  02B4  086B               	movf	_month+1,w
  1795  02B5  00A3               	movwf	___lwmod@dividend+1
  1796  02B6  086A               	movf	_month,w
  1797  02B7  00A2               	movwf	___lwmod@dividend
  1798  02B8  160A  118A  2337  120A  118A  	fcall	___lwmod
  1799  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1800  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1801  02BF  0820               	movf	?___lwmod,w
  1802  02C0  00C3               	movwf	??_main
  1803  02C1  0843               	movf	??_main,w
  1804  02C2  00DF               	movwf	_display+1
  1805                           
  1806                           ;eleclockmain.c: 138:                             display[2]=date / 10;
  1807  02C3  300A               	movlw	10
  1808  02C4  00A6               	movwf	___lwdiv@divisor
  1809  02C5  3000               	movlw	0
  1810  02C6  00A7               	movwf	___lwdiv@divisor+1
  1811  02C7  0869               	movf	_date+1,w
  1812  02C8  00A9               	movwf	___lwdiv@dividend+1
  1813  02C9  0868               	movf	_date,w
  1814  02CA  00A8               	movwf	___lwdiv@dividend
  1815  02CB  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1816  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1817  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1818  02D2  0826               	movf	?___lwdiv,w
  1819  02D3  00C3               	movwf	??_main
  1820  02D4  0843               	movf	??_main,w
  1821  02D5  00E0               	movwf	_display+2
  1822                           
  1823                           ;eleclockmain.c: 139:                             display[3]=date % 10;
  1824  02D6  300A               	movlw	10
  1825  02D7  00A0               	movwf	___lwmod@divisor
  1826  02D8  3000               	movlw	0
  1827  02D9  00A1               	movwf	___lwmod@divisor+1
  1828  02DA  0869               	movf	_date+1,w
  1829  02DB  00A3               	movwf	___lwmod@dividend+1
  1830  02DC  0868               	movf	_date,w
  1831  02DD  00A2               	movwf	___lwmod@dividend
  1832  02DE  160A  118A  2337  120A  118A  	fcall	___lwmod
  1833  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1834  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1835  02E5  0820               	movf	?___lwmod,w
  1836  02E6  00C3               	movwf	??_main
  1837  02E7  0843               	movf	??_main,w
  1838  02E8  00E1               	movwf	_display+3
  1839                           
  1840                           ;eleclockmain.c: 140:                             break;
  1841  02E9  2B9A               	goto	l101
  1842  02EA                     l5352:
  1843                           
  1844                           ;eleclockmain.c: 142:                             display[0]=hour / 10;
  1845  02EA  300A               	movlw	10
  1846  02EB  00A6               	movwf	___lwdiv@divisor
  1847  02EC  3000               	movlw	0
  1848  02ED  00A7               	movwf	___lwdiv@divisor+1
  1849  02EE  0867               	movf	_hour+1,w
  1850  02EF  00A9               	movwf	___lwdiv@dividend+1
  1851  02F0  0866               	movf	_hour,w
  1852  02F1  00A8               	movwf	___lwdiv@dividend
  1853  02F2  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1854  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1855  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1856  02F9  0826               	movf	?___lwdiv,w
  1857  02FA  00C3               	movwf	??_main
  1858  02FB  0843               	movf	??_main,w
  1859  02FC  00DE               	movwf	_display
  1860                           
  1861                           ;eleclockmain.c: 143:                             display[1]=hour % 10;
  1862  02FD  300A               	movlw	10
  1863  02FE  00A0               	movwf	___lwmod@divisor
  1864  02FF  3000               	movlw	0
  1865  0300  00A1               	movwf	___lwmod@divisor+1
  1866  0301  0867               	movf	_hour+1,w
  1867  0302  00A3               	movwf	___lwmod@dividend+1
  1868  0303  0866               	movf	_hour,w
  1869  0304  00A2               	movwf	___lwmod@dividend
  1870  0305  160A  118A  2337  120A  118A  	fcall	___lwmod
  1871  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1872  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1873  030C  0820               	movf	?___lwmod,w
  1874  030D  00C3               	movwf	??_main
  1875  030E  0843               	movf	??_main,w
  1876  030F  00DF               	movwf	_display+1
  1877                           
  1878                           ;eleclockmain.c: 144:                             display[2]=min / 10;
  1879  0310  300A               	movlw	10
  1880  0311  00A6               	movwf	___lwdiv@divisor
  1881  0312  3000               	movlw	0
  1882  0313  00A7               	movwf	___lwdiv@divisor+1
  1883  0314  0865               	movf	_min+1,w
  1884  0315  00A9               	movwf	___lwdiv@dividend+1
  1885  0316  0864               	movf	_min,w
  1886  0317  00A8               	movwf	___lwdiv@dividend
  1887  0318  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1888  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1889  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1890  031F  0826               	movf	?___lwdiv,w
  1891  0320  00C3               	movwf	??_main
  1892  0321  0843               	movf	??_main,w
  1893  0322  00E0               	movwf	_display+2
  1894                           
  1895                           ;eleclockmain.c: 145:                             display[3]=min % 10;
  1896  0323  300A               	movlw	10
  1897  0324  00A0               	movwf	___lwmod@divisor
  1898  0325  3000               	movlw	0
  1899  0326  00A1               	movwf	___lwmod@divisor+1
  1900  0327  0865               	movf	_min+1,w
  1901  0328  00A3               	movwf	___lwmod@dividend+1
  1902  0329  0864               	movf	_min,w
  1903  032A  00A2               	movwf	___lwmod@dividend
  1904  032B  160A  118A  2337  120A  118A  	fcall	___lwmod
  1905  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0332  0820               	movf	?___lwmod,w
  1908  0333  00C3               	movwf	??_main
  1909  0334  0843               	movf	??_main,w
  1910  0335  00E1               	movwf	_display+3
  1911                           
  1912                           ;eleclockmain.c: 146:                             break;
  1913  0336  2B9A               	goto	l101
  1914  0337                     l5354:
  1915                           
  1916                           ;eleclockmain.c: 149:                             display[0]=min / 10;
  1917  0337  300A               	movlw	10
  1918  0338  00A6               	movwf	___lwdiv@divisor
  1919  0339  3000               	movlw	0
  1920  033A  00A7               	movwf	___lwdiv@divisor+1
  1921  033B  0865               	movf	_min+1,w
  1922  033C  00A9               	movwf	___lwdiv@dividend+1
  1923  033D  0864               	movf	_min,w
  1924  033E  00A8               	movwf	___lwdiv@dividend
  1925  033F  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1926  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0346  0826               	movf	?___lwdiv,w
  1929  0347  00C3               	movwf	??_main
  1930  0348  0843               	movf	??_main,w
  1931  0349  00DE               	movwf	_display
  1932                           
  1933                           ;eleclockmain.c: 150:                             display[1]=min % 10;
  1934  034A  300A               	movlw	10
  1935  034B  00A0               	movwf	___lwmod@divisor
  1936  034C  3000               	movlw	0
  1937  034D  00A1               	movwf	___lwmod@divisor+1
  1938  034E  0865               	movf	_min+1,w
  1939  034F  00A3               	movwf	___lwmod@dividend+1
  1940  0350  0864               	movf	_min,w
  1941  0351  00A2               	movwf	___lwmod@dividend
  1942  0352  160A  118A  2337  120A  118A  	fcall	___lwmod
  1943  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0359  0820               	movf	?___lwmod,w
  1946  035A  00C3               	movwf	??_main
  1947  035B  0843               	movf	??_main,w
  1948  035C  00DF               	movwf	_display+1
  1949                           
  1950                           ;eleclockmain.c: 151:                             display[2]=sec / 10;
  1951  035D  300A               	movlw	10
  1952  035E  00A6               	movwf	___lwdiv@divisor
  1953  035F  3000               	movlw	0
  1954  0360  00A7               	movwf	___lwdiv@divisor+1
  1955  0361  0863               	movf	_sec+1,w
  1956  0362  00A9               	movwf	___lwdiv@dividend+1
  1957  0363  0862               	movf	_sec,w
  1958  0364  00A8               	movwf	___lwdiv@dividend
  1959  0365  160A  118A  2373  120A  118A  	fcall	___lwdiv
  1960  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1961  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1962  036C  0826               	movf	?___lwdiv,w
  1963  036D  00C3               	movwf	??_main
  1964  036E  0843               	movf	??_main,w
  1965  036F  00E0               	movwf	_display+2
  1966                           
  1967                           ;eleclockmain.c: 152:                             display[3]=sec % 10;
  1968  0370  300A               	movlw	10
  1969  0371  00A0               	movwf	___lwmod@divisor
  1970  0372  3000               	movlw	0
  1971  0373  00A1               	movwf	___lwmod@divisor+1
  1972  0374  0863               	movf	_sec+1,w
  1973  0375  00A3               	movwf	___lwmod@dividend+1
  1974  0376  0862               	movf	_sec,w
  1975  0377  00A2               	movwf	___lwmod@dividend
  1976  0378  160A  118A  2337  120A  118A  	fcall	___lwmod
  1977  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1978  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1979  037F  0820               	movf	?___lwmod,w
  1980  0380  00C3               	movwf	??_main
  1981  0381  0843               	movf	??_main,w
  1982  0382  00E1               	movwf	_display+3
  1983                           
  1984                           ;eleclockmain.c: 153:                             break;
  1985  0383  2B9A               	goto	l101
  1986  0384                     l5358:
  1987  0384  085D               	movf	_Mode,w
  1988  0385  00C3               	movwf	??_main
  1989  0386  01C4               	clrf	??_main+1
  1990                           
  1991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1992                           ; Switch size 1, requested type "simple"
  1993                           ; Number of cases is 1, Range of values is 0 to 0
  1994                           ; switch strategies available:
  1995                           ; Name         Instructions Cycles
  1996                           ; simple_byte            4     3 (average)
  1997                           ; direct_byte           11     8 (fixed)
  1998                           ; jumptable            260     6 (fixed)
  1999                           ;	Chosen strategy is simple_byte
  2000  0387  0844               	movf	??_main+1,w
  2001  0388  3A00               	xorlw	0	; case 0
  2002  0389  1903               	skipnz
  2003  038A  2B8C               	goto	l6250
  2004  038B  2B9A               	goto	l101
  2005  038C                     l6250:
  2006                           
  2007                           ; Switch size 1, requested type "simple"
  2008                           ; Number of cases is 4, Range of values is 1 to 4
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; simple_byte           13     7 (average)
  2012                           ; direct_byte           23    11 (fixed)
  2013                           ; jumptable            263     9 (fixed)
  2014                           ;	Chosen strategy is simple_byte
  2015  038C  0843               	movf	??_main,w
  2016  038D  3A01               	xorlw	1	; case 1
  2017  038E  1903               	skipnz
  2018  038F  29F9               	goto	l5348
  2019  0390  3A03               	xorlw	3	; case 2
  2020  0391  1903               	skipnz
  2021  0392  2A9D               	goto	l5350
  2022  0393  3A01               	xorlw	1	; case 3
  2023  0394  1903               	skipnz
  2024  0395  2AEA               	goto	l5352
  2025  0396  3A07               	xorlw	7	; case 4
  2026  0397  1903               	skipnz
  2027  0398  2B37               	goto	l5354
  2028  0399  2B9A               	goto	l101
  2029  039A                     l101:
  2030                           
  2031                           ;eleclockmain.c: 157:                     Setting=1;
  2032  039A  01DC               	clrf	_Setting
  2033  039B  0ADC               	incf	_Setting,f
  2034  039C                     l5360:
  2035                           
  2036                           ;eleclockmain.c: 158:                     cursor=0;
  2037  039C  01DB               	clrf	_cursor
  2038  039D                     l5362:
  2039                           
  2040                           ;eleclockmain.c: 159:                     Setting_display(cursor,display);
  2041  039D  305E               	movlw	(low (_display| 0))& (0+255)
  2042  039E  00C3               	movwf	??_main
  2043  039F  0843               	movf	??_main,w
  2044  03A0  00AA               	movwf	Setting_display@dp
  2045  03A1  085B               	movf	_cursor,w
  2046  03A2  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2047  03A7  29EE               	goto	l5342
  2048  03A8                     l5366:
  2049                           
  2050                           ;eleclockmain.c: 164:                 if(Setting){
  2051  03A8  085C               	movf	_Setting,w
  2052  03A9  1903               	btfsc	3,2
  2053  03AA  2BAC               	goto	u4351
  2054  03AB  2BAD               	goto	u4350
  2055  03AC                     u4351:
  2056  03AC  29EE               	goto	l5342
  2057  03AD                     u4350:
  2058  03AD  2BB6               	goto	l5380
  2059  03AE                     l5370:
  2060  03AE  01DE               	clrf	_display
  2061  03AF  2BCC               	goto	l5382
  2062  03B0                     l5372:
  2063  03B0  01DF               	clrf	_display+1
  2064  03B1  2BCC               	goto	l5382
  2065  03B2                     l5374:
  2066  03B2  01E0               	clrf	_display+2
  2067  03B3  2BCC               	goto	l5382
  2068  03B4                     l5376:
  2069  03B4  01E1               	clrf	_display+3
  2070  03B5  2BCC               	goto	l5382
  2071  03B6                     l5380:
  2072  03B6  085B               	movf	_cursor,w
  2073  03B7  00C3               	movwf	??_main
  2074  03B8  01C4               	clrf	??_main+1
  2075                           
  2076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2077                           ; Switch size 1, requested type "simple"
  2078                           ; Number of cases is 1, Range of values is 0 to 0
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte            4     3 (average)
  2082                           ; direct_byte           11     8 (fixed)
  2083                           ; jumptable            260     6 (fixed)
  2084                           ;	Chosen strategy is simple_byte
  2085  03B9  0844               	movf	??_main+1,w
  2086  03BA  3A00               	xorlw	0	; case 0
  2087  03BB  1903               	skipnz
  2088  03BC  2BBE               	goto	l6252
  2089  03BD  2BCC               	goto	l5382
  2090  03BE                     l6252:
  2091                           
  2092                           ; Switch size 1, requested type "simple"
  2093                           ; Number of cases is 4, Range of values is 0 to 3
  2094                           ; switch strategies available:
  2095                           ; Name         Instructions Cycles
  2096                           ; simple_byte           13     7 (average)
  2097                           ; direct_byte           20     8 (fixed)
  2098                           ; jumptable            260     6 (fixed)
  2099                           ;	Chosen strategy is simple_byte
  2100  03BE  0843               	movf	??_main,w
  2101  03BF  3A00               	xorlw	0	; case 0
  2102  03C0  1903               	skipnz
  2103  03C1  2BAE               	goto	l5370
  2104  03C2  3A01               	xorlw	1	; case 1
  2105  03C3  1903               	skipnz
  2106  03C4  2BB0               	goto	l5372
  2107  03C5  3A03               	xorlw	3	; case 2
  2108  03C6  1903               	skipnz
  2109  03C7  2BB2               	goto	l5374
  2110  03C8  3A01               	xorlw	1	; case 3
  2111  03C9  1903               	skipnz
  2112  03CA  2BB4               	goto	l5376
  2113  03CB  2BCC               	goto	l5382
  2114  03CC                     l5382:
  2115                           
  2116                           ;eleclockmain.c: 172:                     Setting_display(cursor,display);
  2117  03CC  305E               	movlw	(low (_display| 0))& (0+255)
  2118  03CD  00C3               	movwf	??_main
  2119  03CE  0843               	movf	??_main,w
  2120  03CF  00AA               	movwf	Setting_display@dp
  2121  03D0  085B               	movf	_cursor,w
  2122  03D1  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2123  03D6  29EE               	goto	l5342
  2124  03D7                     l5386:
  2125                           
  2126                           ;eleclockmain.c: 177:                 if(Setting){
  2127  03D7  085C               	movf	_Setting,w
  2128  03D8  1903               	btfsc	3,2
  2129  03D9  2BDB               	goto	u4361
  2130  03DA  2BDC               	goto	u4360
  2131  03DB                     u4361:
  2132  03DB  29EE               	goto	l5342
  2133  03DC                     u4360:
  2134  03DC  2BE9               	goto	l5392
  2135  03DD                     l118:	
  2136                           ;eleclockmain.c: 179:                         case 0: display[0]=1;break;
  2137                           
  2138  03DD  01DE               	clrf	_display
  2139  03DE  0ADE               	incf	_display,f
  2140  03DF  2BFF               	goto	l5394
  2141  03E0                     l120:	
  2142                           ;eleclockmain.c: 180:                         case 1: display[1]=1;break;
  2143                           
  2144  03E0  01DF               	clrf	_display+1
  2145  03E1  0ADF               	incf	_display+1,f
  2146  03E2  2BFF               	goto	l5394
  2147  03E3                     l121:	
  2148                           ;eleclockmain.c: 181:                         case 2: display[2]=1;break;
  2149                           
  2150  03E3  01E0               	clrf	_display+2
  2151  03E4  0AE0               	incf	_display+2,f
  2152  03E5  2BFF               	goto	l5394
  2153  03E6                     l122:	
  2154                           ;eleclockmain.c: 182:                         case 3: display[3]=1;break;
  2155                           
  2156  03E6  01E1               	clrf	_display+3
  2157  03E7  0AE1               	incf	_display+3,f
  2158  03E8  2BFF               	goto	l5394
  2159  03E9                     l5392:
  2160  03E9  085B               	movf	_cursor,w
  2161  03EA  00C3               	movwf	??_main
  2162  03EB  01C4               	clrf	??_main+1
  2163                           
  2164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2165                           ; Switch size 1, requested type "simple"
  2166                           ; Number of cases is 1, Range of values is 0 to 0
  2167                           ; switch strategies available:
  2168                           ; Name         Instructions Cycles
  2169                           ; simple_byte            4     3 (average)
  2170                           ; direct_byte           11     8 (fixed)
  2171                           ; jumptable            260     6 (fixed)
  2172                           ;	Chosen strategy is simple_byte
  2173  03EC  0844               	movf	??_main+1,w
  2174  03ED  3A00               	xorlw	0	; case 0
  2175  03EE  1903               	skipnz
  2176  03EF  2BF1               	goto	l6254
  2177  03F0  2BFF               	goto	l5394
  2178  03F1                     l6254:
  2179                           
  2180                           ; Switch size 1, requested type "simple"
  2181                           ; Number of cases is 4, Range of values is 0 to 3
  2182                           ; switch strategies available:
  2183                           ; Name         Instructions Cycles
  2184                           ; simple_byte           13     7 (average)
  2185                           ; direct_byte           20     8 (fixed)
  2186                           ; jumptable            260     6 (fixed)
  2187                           ;	Chosen strategy is simple_byte
  2188  03F1  0843               	movf	??_main,w
  2189  03F2  3A00               	xorlw	0	; case 0
  2190  03F3  1903               	skipnz
  2191  03F4  2BDD               	goto	l118
  2192  03F5  3A01               	xorlw	1	; case 1
  2193  03F6  1903               	skipnz
  2194  03F7  2BE0               	goto	l120
  2195  03F8  3A03               	xorlw	3	; case 2
  2196  03F9  1903               	skipnz
  2197  03FA  2BE3               	goto	l121
  2198  03FB  3A01               	xorlw	1	; case 3
  2199  03FC  1903               	skipnz
  2200  03FD  2BE6               	goto	l122
  2201  03FE  2BFF               	goto	l5394
  2202  03FF                     l5394:
  2203                           
  2204                           ;eleclockmain.c: 185:                     Setting_display(cursor,display);
  2205  03FF  305E               	movlw	(low (_display| 0))& (0+255)
  2206  0400  00C3               	movwf	??_main
  2207  0401  0843               	movf	??_main,w
  2208  0402  00AA               	movwf	Setting_display@dp
  2209  0403  085B               	movf	_cursor,w
  2210  0404  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2211  0409  29EE               	goto	l5342
  2212  040A                     l5398:
  2213                           
  2214                           ;eleclockmain.c: 191:                 if(Setting){
  2215  040A  085C               	movf	_Setting,w
  2216  040B  1903               	btfsc	3,2
  2217  040C  2C0E               	goto	u4371
  2218  040D  2C0F               	goto	u4370
  2219  040E                     u4371:
  2220  040E  29EE               	goto	l5342
  2221  040F                     u4370:
  2222  040F  2C24               	goto	l5412
  2223  0410                     l5402:
  2224  0410  3002               	movlw	2
  2225  0411  00C3               	movwf	??_main
  2226  0412  0843               	movf	??_main,w
  2227  0413  00DE               	movwf	_display
  2228  0414  2C3A               	goto	l5414
  2229  0415                     l5404:
  2230  0415  3002               	movlw	2
  2231  0416  00C3               	movwf	??_main
  2232  0417  0843               	movf	??_main,w
  2233  0418  00DF               	movwf	_display+1
  2234  0419  2C3A               	goto	l5414
  2235  041A                     l5406:
  2236  041A  3002               	movlw	2
  2237  041B  00C3               	movwf	??_main
  2238  041C  0843               	movf	??_main,w
  2239  041D  00E0               	movwf	_display+2
  2240  041E  2C3A               	goto	l5414
  2241  041F                     l5408:
  2242  041F  3002               	movlw	2
  2243  0420  00C3               	movwf	??_main
  2244  0421  0843               	movf	??_main,w
  2245  0422  00E1               	movwf	_display+3
  2246  0423  2C3A               	goto	l5414
  2247  0424                     l5412:
  2248  0424  085B               	movf	_cursor,w
  2249  0425  00C3               	movwf	??_main
  2250  0426  01C4               	clrf	??_main+1
  2251                           
  2252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2253                           ; Switch size 1, requested type "simple"
  2254                           ; Number of cases is 1, Range of values is 0 to 0
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte            4     3 (average)
  2258                           ; direct_byte           11     8 (fixed)
  2259                           ; jumptable            260     6 (fixed)
  2260                           ;	Chosen strategy is simple_byte
  2261  0427  0844               	movf	??_main+1,w
  2262  0428  3A00               	xorlw	0	; case 0
  2263  0429  1903               	skipnz
  2264  042A  2C2C               	goto	l6256
  2265  042B  2C3A               	goto	l5414
  2266  042C                     l6256:
  2267                           
  2268                           ; Switch size 1, requested type "simple"
  2269                           ; Number of cases is 4, Range of values is 0 to 3
  2270                           ; switch strategies available:
  2271                           ; Name         Instructions Cycles
  2272                           ; simple_byte           13     7 (average)
  2273                           ; direct_byte           20     8 (fixed)
  2274                           ; jumptable            260     6 (fixed)
  2275                           ;	Chosen strategy is simple_byte
  2276  042C  0843               	movf	??_main,w
  2277  042D  3A00               	xorlw	0	; case 0
  2278  042E  1903               	skipnz
  2279  042F  2C10               	goto	l5402
  2280  0430  3A01               	xorlw	1	; case 1
  2281  0431  1903               	skipnz
  2282  0432  2C15               	goto	l5404
  2283  0433  3A03               	xorlw	3	; case 2
  2284  0434  1903               	skipnz
  2285  0435  2C1A               	goto	l5406
  2286  0436  3A01               	xorlw	1	; case 3
  2287  0437  1903               	skipnz
  2288  0438  2C1F               	goto	l5408
  2289  0439  2C3A               	goto	l5414
  2290  043A                     l5414:
  2291                           
  2292                           ;eleclockmain.c: 199:                     Setting_display(cursor,display);
  2293  043A  305E               	movlw	(low (_display| 0))& (0+255)
  2294  043B  00C3               	movwf	??_main
  2295  043C  0843               	movf	??_main,w
  2296  043D  00AA               	movwf	Setting_display@dp
  2297  043E  085B               	movf	_cursor,w
  2298  043F  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2299  0444  29EE               	goto	l5342
  2300  0445                     l5418:
  2301                           
  2302                           ;eleclockmain.c: 205:                 if(Setting){
  2303  0445  085C               	movf	_Setting,w
  2304  0446  1903               	btfsc	3,2
  2305  0447  2C49               	goto	u4381
  2306  0448  2C4A               	goto	u4380
  2307  0449                     u4381:
  2308  0449  29EE               	goto	l5342
  2309  044A                     u4380:
  2310  044A  2C5F               	goto	l5432
  2311  044B                     l5422:
  2312  044B  3003               	movlw	3
  2313  044C  00C3               	movwf	??_main
  2314  044D  0843               	movf	??_main,w
  2315  044E  00DE               	movwf	_display
  2316  044F  2C75               	goto	l5434
  2317  0450                     l5424:
  2318  0450  3003               	movlw	3
  2319  0451  00C3               	movwf	??_main
  2320  0452  0843               	movf	??_main,w
  2321  0453  00DF               	movwf	_display+1
  2322  0454  2C75               	goto	l5434
  2323  0455                     l5426:
  2324  0455  3003               	movlw	3
  2325  0456  00C3               	movwf	??_main
  2326  0457  0843               	movf	??_main,w
  2327  0458  00E0               	movwf	_display+2
  2328  0459  2C75               	goto	l5434
  2329  045A                     l5428:
  2330  045A  3003               	movlw	3
  2331  045B  00C3               	movwf	??_main
  2332  045C  0843               	movf	??_main,w
  2333  045D  00E1               	movwf	_display+3
  2334  045E  2C75               	goto	l5434
  2335  045F                     l5432:
  2336  045F  085B               	movf	_cursor,w
  2337  0460  00C3               	movwf	??_main
  2338  0461  01C4               	clrf	??_main+1
  2339                           
  2340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2341                           ; Switch size 1, requested type "simple"
  2342                           ; Number of cases is 1, Range of values is 0 to 0
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte            4     3 (average)
  2346                           ; direct_byte           11     8 (fixed)
  2347                           ; jumptable            260     6 (fixed)
  2348                           ;	Chosen strategy is simple_byte
  2349  0462  0844               	movf	??_main+1,w
  2350  0463  3A00               	xorlw	0	; case 0
  2351  0464  1903               	skipnz
  2352  0465  2C67               	goto	l6258
  2353  0466  2C75               	goto	l5434
  2354  0467                     l6258:
  2355                           
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 4, Range of values is 0 to 3
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte           13     7 (average)
  2361                           ; direct_byte           20     8 (fixed)
  2362                           ; jumptable            260     6 (fixed)
  2363                           ;	Chosen strategy is simple_byte
  2364  0467  0843               	movf	??_main,w
  2365  0468  3A00               	xorlw	0	; case 0
  2366  0469  1903               	skipnz
  2367  046A  2C4B               	goto	l5422
  2368  046B  3A01               	xorlw	1	; case 1
  2369  046C  1903               	skipnz
  2370  046D  2C50               	goto	l5424
  2371  046E  3A03               	xorlw	3	; case 2
  2372  046F  1903               	skipnz
  2373  0470  2C55               	goto	l5426
  2374  0471  3A01               	xorlw	1	; case 3
  2375  0472  1903               	skipnz
  2376  0473  2C5A               	goto	l5428
  2377  0474  2C75               	goto	l5434
  2378  0475                     l5434:
  2379                           
  2380                           ;eleclockmain.c: 213:                     Setting_display(cursor,display);
  2381  0475  305E               	movlw	(low (_display| 0))& (0+255)
  2382  0476  00C3               	movwf	??_main
  2383  0477  0843               	movf	??_main,w
  2384  0478  00AA               	movwf	Setting_display@dp
  2385  0479  085B               	movf	_cursor,w
  2386  047A  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2387  047F  29EE               	goto	l5342
  2388  0480                     l5438:
  2389                           
  2390                           ;eleclockmain.c: 219:                 if(Setting){
  2391  0480  085C               	movf	_Setting,w
  2392  0481  1903               	btfsc	3,2
  2393  0482  2C84               	goto	u4391
  2394  0483  2C85               	goto	u4390
  2395  0484                     u4391:
  2396  0484  29EE               	goto	l5342
  2397  0485                     u4390:
  2398  0485  2C9A               	goto	l5452
  2399  0486                     l5442:
  2400  0486  3004               	movlw	4
  2401  0487  00C3               	movwf	??_main
  2402  0488  0843               	movf	??_main,w
  2403  0489  00DE               	movwf	_display
  2404  048A  2CB0               	goto	l5454
  2405  048B                     l5444:
  2406  048B  3004               	movlw	4
  2407  048C  00C3               	movwf	??_main
  2408  048D  0843               	movf	??_main,w
  2409  048E  00DF               	movwf	_display+1
  2410  048F  2CB0               	goto	l5454
  2411  0490                     l5446:
  2412  0490  3004               	movlw	4
  2413  0491  00C3               	movwf	??_main
  2414  0492  0843               	movf	??_main,w
  2415  0493  00E0               	movwf	_display+2
  2416  0494  2CB0               	goto	l5454
  2417  0495                     l5448:
  2418  0495  3004               	movlw	4
  2419  0496  00C3               	movwf	??_main
  2420  0497  0843               	movf	??_main,w
  2421  0498  00E1               	movwf	_display+3
  2422  0499  2CB0               	goto	l5454
  2423  049A                     l5452:
  2424  049A  085B               	movf	_cursor,w
  2425  049B  00C3               	movwf	??_main
  2426  049C  01C4               	clrf	??_main+1
  2427                           
  2428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2429                           ; Switch size 1, requested type "simple"
  2430                           ; Number of cases is 1, Range of values is 0 to 0
  2431                           ; switch strategies available:
  2432                           ; Name         Instructions Cycles
  2433                           ; simple_byte            4     3 (average)
  2434                           ; direct_byte           11     8 (fixed)
  2435                           ; jumptable            260     6 (fixed)
  2436                           ;	Chosen strategy is simple_byte
  2437  049D  0844               	movf	??_main+1,w
  2438  049E  3A00               	xorlw	0	; case 0
  2439  049F  1903               	skipnz
  2440  04A0  2CA2               	goto	l6260
  2441  04A1  2CB0               	goto	l5454
  2442  04A2                     l6260:
  2443                           
  2444                           ; Switch size 1, requested type "simple"
  2445                           ; Number of cases is 4, Range of values is 0 to 3
  2446                           ; switch strategies available:
  2447                           ; Name         Instructions Cycles
  2448                           ; simple_byte           13     7 (average)
  2449                           ; direct_byte           20     8 (fixed)
  2450                           ; jumptable            260     6 (fixed)
  2451                           ;	Chosen strategy is simple_byte
  2452  04A2  0843               	movf	??_main,w
  2453  04A3  3A00               	xorlw	0	; case 0
  2454  04A4  1903               	skipnz
  2455  04A5  2C86               	goto	l5442
  2456  04A6  3A01               	xorlw	1	; case 1
  2457  04A7  1903               	skipnz
  2458  04A8  2C8B               	goto	l5444
  2459  04A9  3A03               	xorlw	3	; case 2
  2460  04AA  1903               	skipnz
  2461  04AB  2C90               	goto	l5446
  2462  04AC  3A01               	xorlw	1	; case 3
  2463  04AD  1903               	skipnz
  2464  04AE  2C95               	goto	l5448
  2465  04AF  2CB0               	goto	l5454
  2466  04B0                     l5454:
  2467                           
  2468                           ;eleclockmain.c: 227:                     Setting_display(cursor,display);
  2469  04B0  305E               	movlw	(low (_display| 0))& (0+255)
  2470  04B1  00C3               	movwf	??_main
  2471  04B2  0843               	movf	??_main,w
  2472  04B3  00AA               	movwf	Setting_display@dp
  2473  04B4  085B               	movf	_cursor,w
  2474  04B5  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2475  04BA  29EE               	goto	l5342
  2476  04BB                     l5458:
  2477                           
  2478                           ;eleclockmain.c: 232:                 if(Setting){
  2479  04BB  085C               	movf	_Setting,w
  2480  04BC  1903               	btfsc	3,2
  2481  04BD  2CBF               	goto	u4401
  2482  04BE  2CC0               	goto	u4400
  2483  04BF                     u4401:
  2484  04BF  29EE               	goto	l5342
  2485  04C0                     u4400:
  2486  04C0  2CD5               	goto	l5472
  2487  04C1                     l5462:
  2488  04C1  3005               	movlw	5
  2489  04C2  00C3               	movwf	??_main
  2490  04C3  0843               	movf	??_main,w
  2491  04C4  00DE               	movwf	_display
  2492  04C5  2CEB               	goto	l5474
  2493  04C6                     l5464:
  2494  04C6  3005               	movlw	5
  2495  04C7  00C3               	movwf	??_main
  2496  04C8  0843               	movf	??_main,w
  2497  04C9  00DF               	movwf	_display+1
  2498  04CA  2CEB               	goto	l5474
  2499  04CB                     l5466:
  2500  04CB  3005               	movlw	5
  2501  04CC  00C3               	movwf	??_main
  2502  04CD  0843               	movf	??_main,w
  2503  04CE  00E0               	movwf	_display+2
  2504  04CF  2CEB               	goto	l5474
  2505  04D0                     l5468:
  2506  04D0  3005               	movlw	5
  2507  04D1  00C3               	movwf	??_main
  2508  04D2  0843               	movf	??_main,w
  2509  04D3  00E1               	movwf	_display+3
  2510  04D4  2CEB               	goto	l5474
  2511  04D5                     l5472:
  2512  04D5  085B               	movf	_cursor,w
  2513  04D6  00C3               	movwf	??_main
  2514  04D7  01C4               	clrf	??_main+1
  2515                           
  2516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2517                           ; Switch size 1, requested type "simple"
  2518                           ; Number of cases is 1, Range of values is 0 to 0
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte            4     3 (average)
  2522                           ; direct_byte           11     8 (fixed)
  2523                           ; jumptable            260     6 (fixed)
  2524                           ;	Chosen strategy is simple_byte
  2525  04D8  0844               	movf	??_main+1,w
  2526  04D9  3A00               	xorlw	0	; case 0
  2527  04DA  1903               	skipnz
  2528  04DB  2CDD               	goto	l6262
  2529  04DC  2CEB               	goto	l5474
  2530  04DD                     l6262:
  2531                           
  2532                           ; Switch size 1, requested type "simple"
  2533                           ; Number of cases is 4, Range of values is 0 to 3
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte           13     7 (average)
  2537                           ; direct_byte           20     8 (fixed)
  2538                           ; jumptable            260     6 (fixed)
  2539                           ;	Chosen strategy is simple_byte
  2540  04DD  0843               	movf	??_main,w
  2541  04DE  3A00               	xorlw	0	; case 0
  2542  04DF  1903               	skipnz
  2543  04E0  2CC1               	goto	l5462
  2544  04E1  3A01               	xorlw	1	; case 1
  2545  04E2  1903               	skipnz
  2546  04E3  2CC6               	goto	l5464
  2547  04E4  3A03               	xorlw	3	; case 2
  2548  04E5  1903               	skipnz
  2549  04E6  2CCB               	goto	l5466
  2550  04E7  3A01               	xorlw	1	; case 3
  2551  04E8  1903               	skipnz
  2552  04E9  2CD0               	goto	l5468
  2553  04EA  2CEB               	goto	l5474
  2554  04EB                     l5474:
  2555                           
  2556                           ;eleclockmain.c: 240:                     Setting_display(cursor,display);
  2557  04EB  305E               	movlw	(low (_display| 0))& (0+255)
  2558  04EC  00C3               	movwf	??_main
  2559  04ED  0843               	movf	??_main,w
  2560  04EE  00AA               	movwf	Setting_display@dp
  2561  04EF  085B               	movf	_cursor,w
  2562  04F0  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2563  04F5  29EE               	goto	l5342
  2564  04F6                     l5478:
  2565                           
  2566                           ;eleclockmain.c: 245:                 if(Setting){
  2567  04F6  085C               	movf	_Setting,w
  2568  04F7  1903               	btfsc	3,2
  2569  04F8  2CFA               	goto	u4411
  2570  04F9  2CFB               	goto	u4410
  2571  04FA                     u4411:
  2572  04FA  29EE               	goto	l5342
  2573  04FB                     u4410:
  2574  04FB  2D10               	goto	l5492
  2575  04FC                     l5482:
  2576  04FC  3006               	movlw	6
  2577  04FD  00C3               	movwf	??_main
  2578  04FE  0843               	movf	??_main,w
  2579  04FF  00DE               	movwf	_display
  2580  0500  2D26               	goto	l5494
  2581  0501                     l5484:
  2582  0501  3006               	movlw	6
  2583  0502  00C3               	movwf	??_main
  2584  0503  0843               	movf	??_main,w
  2585  0504  00DF               	movwf	_display+1
  2586  0505  2D26               	goto	l5494
  2587  0506                     l5486:
  2588  0506  3006               	movlw	6
  2589  0507  00C3               	movwf	??_main
  2590  0508  0843               	movf	??_main,w
  2591  0509  00E0               	movwf	_display+2
  2592  050A  2D26               	goto	l5494
  2593  050B                     l5488:
  2594  050B  3006               	movlw	6
  2595  050C  00C3               	movwf	??_main
  2596  050D  0843               	movf	??_main,w
  2597  050E  00E1               	movwf	_display+3
  2598  050F  2D26               	goto	l5494
  2599  0510                     l5492:
  2600  0510  085B               	movf	_cursor,w
  2601  0511  00C3               	movwf	??_main
  2602  0512  01C4               	clrf	??_main+1
  2603                           
  2604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2605                           ; Switch size 1, requested type "simple"
  2606                           ; Number of cases is 1, Range of values is 0 to 0
  2607                           ; switch strategies available:
  2608                           ; Name         Instructions Cycles
  2609                           ; simple_byte            4     3 (average)
  2610                           ; direct_byte           11     8 (fixed)
  2611                           ; jumptable            260     6 (fixed)
  2612                           ;	Chosen strategy is simple_byte
  2613  0513  0844               	movf	??_main+1,w
  2614  0514  3A00               	xorlw	0	; case 0
  2615  0515  1903               	skipnz
  2616  0516  2D18               	goto	l6264
  2617  0517  2D26               	goto	l5494
  2618  0518                     l6264:
  2619                           
  2620                           ; Switch size 1, requested type "simple"
  2621                           ; Number of cases is 4, Range of values is 0 to 3
  2622                           ; switch strategies available:
  2623                           ; Name         Instructions Cycles
  2624                           ; simple_byte           13     7 (average)
  2625                           ; direct_byte           20     8 (fixed)
  2626                           ; jumptable            260     6 (fixed)
  2627                           ;	Chosen strategy is simple_byte
  2628  0518  0843               	movf	??_main,w
  2629  0519  3A00               	xorlw	0	; case 0
  2630  051A  1903               	skipnz
  2631  051B  2CFC               	goto	l5482
  2632  051C  3A01               	xorlw	1	; case 1
  2633  051D  1903               	skipnz
  2634  051E  2D01               	goto	l5484
  2635  051F  3A03               	xorlw	3	; case 2
  2636  0520  1903               	skipnz
  2637  0521  2D06               	goto	l5486
  2638  0522  3A01               	xorlw	1	; case 3
  2639  0523  1903               	skipnz
  2640  0524  2D0B               	goto	l5488
  2641  0525  2D26               	goto	l5494
  2642  0526                     l5494:
  2643                           
  2644                           ;eleclockmain.c: 253:                     Setting_display(cursor,display);
  2645  0526  305E               	movlw	(low (_display| 0))& (0+255)
  2646  0527  00C3               	movwf	??_main
  2647  0528  0843               	movf	??_main,w
  2648  0529  00AA               	movwf	Setting_display@dp
  2649  052A  085B               	movf	_cursor,w
  2650  052B  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2651  0530  29EE               	goto	l5342
  2652  0531                     l5498:
  2653                           
  2654                           ;eleclockmain.c: 259:                 if(Setting){
  2655  0531  085C               	movf	_Setting,w
  2656  0532  1903               	btfsc	3,2
  2657  0533  2D35               	goto	u4421
  2658  0534  2D36               	goto	u4420
  2659  0535                     u4421:
  2660  0535  29EE               	goto	l5342
  2661  0536                     u4420:
  2662  0536  2D4B               	goto	l5512
  2663  0537                     l5502:
  2664  0537  3007               	movlw	7
  2665  0538  00C3               	movwf	??_main
  2666  0539  0843               	movf	??_main,w
  2667  053A  00DE               	movwf	_display
  2668  053B  2D61               	goto	l5514
  2669  053C                     l5504:
  2670  053C  3007               	movlw	7
  2671  053D  00C3               	movwf	??_main
  2672  053E  0843               	movf	??_main,w
  2673  053F  00DF               	movwf	_display+1
  2674  0540  2D61               	goto	l5514
  2675  0541                     l5506:
  2676  0541  3007               	movlw	7
  2677  0542  00C3               	movwf	??_main
  2678  0543  0843               	movf	??_main,w
  2679  0544  00E0               	movwf	_display+2
  2680  0545  2D61               	goto	l5514
  2681  0546                     l5508:
  2682  0546  3007               	movlw	7
  2683  0547  00C3               	movwf	??_main
  2684  0548  0843               	movf	??_main,w
  2685  0549  00E1               	movwf	_display+3
  2686  054A  2D61               	goto	l5514
  2687  054B                     l5512:
  2688  054B  085B               	movf	_cursor,w
  2689  054C  00C3               	movwf	??_main
  2690  054D  01C4               	clrf	??_main+1
  2691                           
  2692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2693                           ; Switch size 1, requested type "simple"
  2694                           ; Number of cases is 1, Range of values is 0 to 0
  2695                           ; switch strategies available:
  2696                           ; Name         Instructions Cycles
  2697                           ; simple_byte            4     3 (average)
  2698                           ; direct_byte           11     8 (fixed)
  2699                           ; jumptable            260     6 (fixed)
  2700                           ;	Chosen strategy is simple_byte
  2701  054E  0844               	movf	??_main+1,w
  2702  054F  3A00               	xorlw	0	; case 0
  2703  0550  1903               	skipnz
  2704  0551  2D53               	goto	l6266
  2705  0552  2D61               	goto	l5514
  2706  0553                     l6266:
  2707                           
  2708                           ; Switch size 1, requested type "simple"
  2709                           ; Number of cases is 4, Range of values is 0 to 3
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte           13     7 (average)
  2713                           ; direct_byte           20     8 (fixed)
  2714                           ; jumptable            260     6 (fixed)
  2715                           ;	Chosen strategy is simple_byte
  2716  0553  0843               	movf	??_main,w
  2717  0554  3A00               	xorlw	0	; case 0
  2718  0555  1903               	skipnz
  2719  0556  2D37               	goto	l5502
  2720  0557  3A01               	xorlw	1	; case 1
  2721  0558  1903               	skipnz
  2722  0559  2D3C               	goto	l5504
  2723  055A  3A03               	xorlw	3	; case 2
  2724  055B  1903               	skipnz
  2725  055C  2D41               	goto	l5506
  2726  055D  3A01               	xorlw	1	; case 3
  2727  055E  1903               	skipnz
  2728  055F  2D46               	goto	l5508
  2729  0560  2D61               	goto	l5514
  2730  0561                     l5514:
  2731                           
  2732                           ;eleclockmain.c: 267:                     Setting_display(cursor,display);
  2733  0561  305E               	movlw	(low (_display| 0))& (0+255)
  2734  0562  00C3               	movwf	??_main
  2735  0563  0843               	movf	??_main,w
  2736  0564  00AA               	movwf	Setting_display@dp
  2737  0565  085B               	movf	_cursor,w
  2738  0566  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2739  056B  29EE               	goto	l5342
  2740  056C                     l5518:
  2741                           
  2742                           ;eleclockmain.c: 273:                 if(Setting){
  2743  056C  085C               	movf	_Setting,w
  2744  056D  1903               	btfsc	3,2
  2745  056E  2D70               	goto	u4431
  2746  056F  2D71               	goto	u4430
  2747  0570                     u4431:
  2748  0570  29EE               	goto	l5342
  2749  0571                     u4430:
  2750  0571  2D86               	goto	l5532
  2751  0572                     l5522:
  2752  0572  3008               	movlw	8
  2753  0573  00C3               	movwf	??_main
  2754  0574  0843               	movf	??_main,w
  2755  0575  00DE               	movwf	_display
  2756  0576  2D9C               	goto	l5534
  2757  0577                     l5524:
  2758  0577  3008               	movlw	8
  2759  0578  00C3               	movwf	??_main
  2760  0579  0843               	movf	??_main,w
  2761  057A  00DF               	movwf	_display+1
  2762  057B  2D9C               	goto	l5534
  2763  057C                     l5526:
  2764  057C  3008               	movlw	8
  2765  057D  00C3               	movwf	??_main
  2766  057E  0843               	movf	??_main,w
  2767  057F  00E0               	movwf	_display+2
  2768  0580  2D9C               	goto	l5534
  2769  0581                     l5528:
  2770  0581  3008               	movlw	8
  2771  0582  00C3               	movwf	??_main
  2772  0583  0843               	movf	??_main,w
  2773  0584  00E1               	movwf	_display+3
  2774  0585  2D9C               	goto	l5534
  2775  0586                     l5532:
  2776  0586  085B               	movf	_cursor,w
  2777  0587  00C3               	movwf	??_main
  2778  0588  01C4               	clrf	??_main+1
  2779                           
  2780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2781                           ; Switch size 1, requested type "simple"
  2782                           ; Number of cases is 1, Range of values is 0 to 0
  2783                           ; switch strategies available:
  2784                           ; Name         Instructions Cycles
  2785                           ; simple_byte            4     3 (average)
  2786                           ; direct_byte           11     8 (fixed)
  2787                           ; jumptable            260     6 (fixed)
  2788                           ;	Chosen strategy is simple_byte
  2789  0589  0844               	movf	??_main+1,w
  2790  058A  3A00               	xorlw	0	; case 0
  2791  058B  1903               	skipnz
  2792  058C  2D8E               	goto	l6268
  2793  058D  2D9C               	goto	l5534
  2794  058E                     l6268:
  2795                           
  2796                           ; Switch size 1, requested type "simple"
  2797                           ; Number of cases is 4, Range of values is 0 to 3
  2798                           ; switch strategies available:
  2799                           ; Name         Instructions Cycles
  2800                           ; simple_byte           13     7 (average)
  2801                           ; direct_byte           20     8 (fixed)
  2802                           ; jumptable            260     6 (fixed)
  2803                           ;	Chosen strategy is simple_byte
  2804  058E  0843               	movf	??_main,w
  2805  058F  3A00               	xorlw	0	; case 0
  2806  0590  1903               	skipnz
  2807  0591  2D72               	goto	l5522
  2808  0592  3A01               	xorlw	1	; case 1
  2809  0593  1903               	skipnz
  2810  0594  2D77               	goto	l5524
  2811  0595  3A03               	xorlw	3	; case 2
  2812  0596  1903               	skipnz
  2813  0597  2D7C               	goto	l5526
  2814  0598  3A01               	xorlw	1	; case 3
  2815  0599  1903               	skipnz
  2816  059A  2D81               	goto	l5528
  2817  059B  2D9C               	goto	l5534
  2818  059C                     l5534:
  2819                           
  2820                           ;eleclockmain.c: 281:                     Setting_display(cursor,display);
  2821  059C  305E               	movlw	(low (_display| 0))& (0+255)
  2822  059D  00C3               	movwf	??_main
  2823  059E  0843               	movf	??_main,w
  2824  059F  00AA               	movwf	Setting_display@dp
  2825  05A0  085B               	movf	_cursor,w
  2826  05A1  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2827  05A6  29EE               	goto	l5342
  2828  05A7                     l5538:
  2829                           
  2830                           ;eleclockmain.c: 287:                 if(Setting){
  2831  05A7  085C               	movf	_Setting,w
  2832  05A8  1903               	btfsc	3,2
  2833  05A9  2DAB               	goto	u4441
  2834  05AA  2DAC               	goto	u4440
  2835  05AB                     u4441:
  2836  05AB  29EE               	goto	l5342
  2837  05AC                     u4440:
  2838  05AC  2DC1               	goto	l5552
  2839  05AD                     l5542:
  2840  05AD  3009               	movlw	9
  2841  05AE  00C3               	movwf	??_main
  2842  05AF  0843               	movf	??_main,w
  2843  05B0  00DE               	movwf	_display
  2844  05B1  2DD7               	goto	l5554
  2845  05B2                     l5544:
  2846  05B2  3009               	movlw	9
  2847  05B3  00C3               	movwf	??_main
  2848  05B4  0843               	movf	??_main,w
  2849  05B5  00DF               	movwf	_display+1
  2850  05B6  2DD7               	goto	l5554
  2851  05B7                     l5546:
  2852  05B7  3009               	movlw	9
  2853  05B8  00C3               	movwf	??_main
  2854  05B9  0843               	movf	??_main,w
  2855  05BA  00E0               	movwf	_display+2
  2856  05BB  2DD7               	goto	l5554
  2857  05BC                     l5548:
  2858  05BC  3009               	movlw	9
  2859  05BD  00C3               	movwf	??_main
  2860  05BE  0843               	movf	??_main,w
  2861  05BF  00E1               	movwf	_display+3
  2862  05C0  2DD7               	goto	l5554
  2863  05C1                     l5552:
  2864  05C1  085B               	movf	_cursor,w
  2865  05C2  00C3               	movwf	??_main
  2866  05C3  01C4               	clrf	??_main+1
  2867                           
  2868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2869                           ; Switch size 1, requested type "simple"
  2870                           ; Number of cases is 1, Range of values is 0 to 0
  2871                           ; switch strategies available:
  2872                           ; Name         Instructions Cycles
  2873                           ; simple_byte            4     3 (average)
  2874                           ; direct_byte           11     8 (fixed)
  2875                           ; jumptable            260     6 (fixed)
  2876                           ;	Chosen strategy is simple_byte
  2877  05C4  0844               	movf	??_main+1,w
  2878  05C5  3A00               	xorlw	0	; case 0
  2879  05C6  1903               	skipnz
  2880  05C7  2DC9               	goto	l6270
  2881  05C8  2DD7               	goto	l5554
  2882  05C9                     l6270:
  2883                           
  2884                           ; Switch size 1, requested type "simple"
  2885                           ; Number of cases is 4, Range of values is 0 to 3
  2886                           ; switch strategies available:
  2887                           ; Name         Instructions Cycles
  2888                           ; simple_byte           13     7 (average)
  2889                           ; direct_byte           20     8 (fixed)
  2890                           ; jumptable            260     6 (fixed)
  2891                           ;	Chosen strategy is simple_byte
  2892  05C9  0843               	movf	??_main,w
  2893  05CA  3A00               	xorlw	0	; case 0
  2894  05CB  1903               	skipnz
  2895  05CC  2DAD               	goto	l5542
  2896  05CD  3A01               	xorlw	1	; case 1
  2897  05CE  1903               	skipnz
  2898  05CF  2DB2               	goto	l5544
  2899  05D0  3A03               	xorlw	3	; case 2
  2900  05D1  1903               	skipnz
  2901  05D2  2DB7               	goto	l5546
  2902  05D3  3A01               	xorlw	1	; case 3
  2903  05D4  1903               	skipnz
  2904  05D5  2DBC               	goto	l5548
  2905  05D6  2DD7               	goto	l5554
  2906  05D7                     l5554:
  2907                           
  2908                           ;eleclockmain.c: 295:                     Setting_display(cursor,display);
  2909  05D7  305E               	movlw	(low (_display| 0))& (0+255)
  2910  05D8  00C3               	movwf	??_main
  2911  05D9  0843               	movf	??_main,w
  2912  05DA  00AA               	movwf	Setting_display@dp
  2913  05DB  085B               	movf	_cursor,w
  2914  05DC  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2915  05E1  29EE               	goto	l5342
  2916  05E2                     l5558:
  2917                           
  2918                           ;eleclockmain.c: 301:                 if(Setting){
  2919  05E2  085C               	movf	_Setting,w
  2920  05E3  1903               	btfsc	3,2
  2921  05E4  2DE6               	goto	u4451
  2922  05E5  2DE7               	goto	u4450
  2923  05E6                     u4451:
  2924  05E6  2DFE               	goto	l5568
  2925  05E7                     u4450:
  2926  05E7                     l5560:
  2927                           
  2928                           ;eleclockmain.c: 302:                     if(cursor!=0)cursor--;
  2929  05E7  085B               	movf	_cursor,w
  2930  05E8  1903               	btfsc	3,2
  2931  05E9  2DEB               	goto	u4461
  2932  05EA  2DEC               	goto	u4460
  2933  05EB                     u4461:
  2934  05EB  2DEF               	goto	l5564
  2935  05EC                     u4460:
  2936  05EC                     l5562:
  2937  05EC  3001               	movlw	1
  2938  05ED  02DB               	subwf	_cursor,f
  2939  05EE  2DF3               	goto	l5566
  2940  05EF                     l5564:
  2941  05EF  3003               	movlw	3
  2942  05F0  00C3               	movwf	??_main
  2943  05F1  0843               	movf	??_main,w
  2944  05F2  00DB               	movwf	_cursor
  2945  05F3                     l5566:
  2946                           
  2947                           ;eleclockmain.c: 304:                     Setting_display(cursor,display);
  2948  05F3  305E               	movlw	(low (_display| 0))& (0+255)
  2949  05F4  00C3               	movwf	??_main
  2950  05F5  0843               	movf	??_main,w
  2951  05F6  00AA               	movwf	Setting_display@dp
  2952  05F7  085B               	movf	_cursor,w
  2953  05F8  120A  158A  2429  120A  118A  	fcall	_Setting_display
  2954                           
  2955                           ;eleclockmain.c: 305:                 }
  2956  05FD  29EE               	goto	l5342
  2957  05FE                     l5568:
  2958                           
  2959                           ;eleclockmain.c: 307:                     if(Mode!=1)Mode--;
  2960  05FE  035D               	decf	_Mode,w
  2961  05FF  1903               	btfsc	3,2
  2962  0600  2E02               	goto	u4471
  2963  0601  2E03               	goto	u4470
  2964  0602                     u4471:
  2965  0602  2E06               	goto	l201
  2966  0603                     u4470:
  2967  0603                     l5570:
  2968  0603  3001               	movlw	1
  2969  0604  02DD               	subwf	_Mode,f
  2970  0605  29EE               	goto	l5342
  2971  0606                     l201:	
  2972                           ;eleclockmain.c: 308:                     else Mode=1;
  2973                           
  2974  0606  01DD               	clrf	_Mode
  2975  0607  0ADD               	incf	_Mode,f
  2976  0608  29EE               	goto	l5342
  2977  0609                     l5574:
  2978                           
  2979                           ;eleclockmain.c: 314:                 if(Setting){
  2980  0609  085C               	movf	_Setting,w
  2981  060A  1903               	btfsc	3,2
  2982  060B  2E0D               	goto	u4481
  2983  060C  2E0E               	goto	u4480
  2984  060D                     u4481:
  2985  060D  2E25               	goto	l5584
  2986  060E                     u4480:
  2987  060E                     l5576:
  2988                           
  2989                           ;eleclockmain.c: 315:                     if(cursor==3) cursor=0;
  2990  060E  3003               	movlw	3
  2991  060F  065B               	xorwf	_cursor,w
  2992  0610  1D03               	btfss	3,2
  2993  0611  2E13               	goto	u4491
  2994  0612  2E14               	goto	u4490
  2995  0613                     u4491:
  2996  0613  2E16               	goto	l5580
  2997  0614                     u4490:
  2998  0614                     l5578:
  2999  0614  01DB               	clrf	_cursor
  3000  0615  2E1A               	goto	l5582
  3001  0616                     l5580:
  3002  0616  3001               	movlw	1
  3003  0617  00C3               	movwf	??_main
  3004  0618  0843               	movf	??_main,w
  3005  0619  07DB               	addwf	_cursor,f
  3006  061A                     l5582:
  3007                           
  3008                           ;eleclockmain.c: 317:                     Setting_display(cursor,display);
  3009  061A  305E               	movlw	(low (_display| 0))& (0+255)
  3010  061B  00C3               	movwf	??_main
  3011  061C  0843               	movf	??_main,w
  3012  061D  00AA               	movwf	Setting_display@dp
  3013  061E  085B               	movf	_cursor,w
  3014  061F  120A  158A  2429  120A  118A  	fcall	_Setting_display
  3015                           
  3016                           ;eleclockmain.c: 318:                 }
  3017  0624  29EE               	goto	l5342
  3018  0625                     l5584:
  3019                           
  3020                           ;eleclockmain.c: 320:                     if(Mode!=4)Mode++;
  3021  0625  3004               	movlw	4
  3022  0626  065D               	xorwf	_Mode,w
  3023  0627  1903               	btfsc	3,2
  3024  0628  2E2A               	goto	u4501
  3025  0629  2E2B               	goto	u4500
  3026  062A                     u4501:
  3027  062A  2E30               	goto	l5588
  3028  062B                     u4500:
  3029  062B                     l5586:
  3030  062B  3001               	movlw	1
  3031  062C  00C3               	movwf	??_main
  3032  062D  0843               	movf	??_main,w
  3033  062E  07DD               	addwf	_Mode,f
  3034  062F  29EE               	goto	l5342
  3035  0630                     l5588:
  3036  0630  3004               	movlw	4
  3037  0631  00C3               	movwf	??_main
  3038  0632  0843               	movf	??_main,w
  3039  0633  00DD               	movwf	_Mode
  3040  0634  29EE               	goto	l5342
  3041  0635                     l5592:
  3042                           
  3043                           ;eleclockmain.c: 326:                 Setting=0;
  3044  0635  01DC               	clrf	_Setting
  3045                           
  3046                           ;eleclockmain.c: 327:                 IRKey=0;
  3047  0636  01D3               	clrf	_IRKey
  3048  0637  01D4               	clrf	_IRKey+1
  3049                           
  3050                           ;eleclockmain.c: 328:                 break;
  3051  0638  2873               	goto	l5304
  3052  0639                     l5596:
  3053                           
  3054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3055                           ; Switch size 1, requested type "simple"
  3056                           ; Number of cases is 1, Range of values is 0 to 0
  3057                           ; switch strategies available:
  3058                           ; Name         Instructions Cycles
  3059                           ; simple_byte            4     3 (average)
  3060                           ; direct_byte           11     8 (fixed)
  3061                           ; jumptable            260     6 (fixed)
  3062                           ;	Chosen strategy is simple_byte
  3063  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3064  063A  1303               	bcf	3,6	;RP1=0, select bank0
  3065  063B  0854               	movf	_IRKey+1,w
  3066  063C  3A00               	xorlw	0	; case 0
  3067  063D  1903               	skipnz
  3068  063E  2E40               	goto	l6272
  3069  063F  2873               	goto	l5304
  3070  0640                     l6272:
  3071                           
  3072                           ; Switch size 1, requested type "simple"
  3073                           ; Number of cases is 15, Range of values is 7 to 94
  3074                           ; switch strategies available:
  3075                           ; Name         Instructions Cycles
  3076                           ; simple_byte           46    24 (average)
  3077                           ; jumptable            263     9 (fixed)
  3078                           ;	Chosen strategy is simple_byte
  3079  0640  0853               	movf	_IRKey,w
  3080  0641  3A07               	xorlw	7	; case 7
  3081  0642  1903               	skipnz
  3082  0643  2DE2               	goto	l5558
  3083  0644  3A0F               	xorlw	15	; case 8
  3084  0645  1903               	skipnz
  3085  0646  2C80               	goto	l5438
  3086  0647  3A01               	xorlw	1	; case 9
  3087  0648  1903               	skipnz
  3088  0649  2E09               	goto	l5574
  3089  064A  3A05               	xorlw	5	; case 12
  3090  064B  1903               	skipnz
  3091  064C  2BD7               	goto	l5386
  3092  064D  3A19               	xorlw	25	; case 21
  3093  064E  1903               	skipnz
  3094  064F  28D8               	goto	l5322
  3095  0650  3A03               	xorlw	3	; case 22
  3096  0651  1903               	skipnz
  3097  0652  2BA8               	goto	l5366
  3098  0653  3A0E               	xorlw	14	; case 24
  3099  0654  1903               	skipnz
  3100  0655  2C0A               	goto	l5398
  3101  0656  3A04               	xorlw	4	; case 28
  3102  0657  1903               	skipnz
  3103  0658  2CBB               	goto	l5458
  3104  0659  3A5E               	xorlw	94	; case 66
  3105  065A  1903               	skipnz
  3106  065B  2D31               	goto	l5498
  3107  065C  3A01               	xorlw	1	; case 67
  3108  065D  1903               	skipnz
  3109  065E  2E35               	goto	l5592
  3110  065F  3A04               	xorlw	4	; case 71
  3111  0660  1903               	skipnz
  3112  0661  29F3               	goto	l5344
  3113  0662  3A0D               	xorlw	13	; case 74
  3114  0663  1903               	skipnz
  3115  0664  2DA7               	goto	l5538
  3116  0665  3A18               	xorlw	24	; case 82
  3117  0666  1903               	skipnz
  3118  0667  2D6C               	goto	l5518
  3119  0668  3A08               	xorlw	8	; case 90
  3120  0669  1903               	skipnz
  3121  066A  2CF6               	goto	l5478
  3122  066B  3A04               	xorlw	4	; case 94
  3123  066C  1903               	skipnz
  3124  066D  2C45               	goto	l5418
  3125  066E  2873               	goto	l5304
  3126  066F  120A  118A  280C   	ljmp	start
  3127  0672                     __end_of_main:
  3128                           
  3129                           	psect	text1
  3130  08E5                     __ptext1:	
  3131 ;; *************** function _updateTime *****************
  3132 ;; Defined at:
  3133 ;;		line 71 in file "clock.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, pclath, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3147 ;;      Params:         0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 4
  3154 ;; This function calls:
  3155 ;;		_I2C_Begin
  3156 ;;		_I2C_End
  3157 ;;		_I2C_Read
  3158 ;;		_I2C_Write
  3159 ;;		_b2d
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _updateTime
  3167  08E5                     _updateTime:
  3168  08E5                     l5040:	
  3169                           ;incstack = 0
  3170                           ; Regs used in _updateTime: [wreg+status,2+status,0+pclath+cstack]
  3171                           
  3172                           
  3173                           ;clock.c: 72:     I2C_Begin();
  3174  08E5  160A  118A  21CA  120A  158A  	fcall	_I2C_Begin
  3175                           
  3176                           ;clock.c: 73:     I2C_Write(0xD0);
  3177  08EA  30D0               	movlw	208
  3178  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  3179  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  3180  08ED  00AD               	movwf	I2C_Write@data
  3181  08EE  3000               	movlw	0
  3182  08EF  00AE               	movwf	I2C_Write@data+1
  3183  08F0  160A  118A  21DC  120A  158A  	fcall	_I2C_Write
  3184                           
  3185                           ;clock.c: 74:     I2C_Write(0);
  3186  08F5  3000               	movlw	0
  3187  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  3188  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  3189  08F8  00AD               	movwf	I2C_Write@data
  3190  08F9  00AE               	movwf	I2C_Write@data+1
  3191  08FA  160A  118A  21DC  120A  158A  	fcall	_I2C_Write
  3192                           
  3193                           ;clock.c: 75:     I2C_End();
  3194  08FF  160A  118A  21D3  120A  158A  	fcall	_I2C_End
  3195                           
  3196                           ;clock.c: 77:     I2C_Begin();
  3197  0904  160A  118A  21CA  120A  158A  	fcall	_I2C_Begin
  3198                           
  3199                           ;clock.c: 78:     I2C_Write(0xD1);
  3200  0909  30D1               	movlw	209
  3201  090A  1283               	bcf	3,5	;RP0=0, select bank0
  3202  090B  1303               	bcf	3,6	;RP1=0, select bank0
  3203  090C  00AD               	movwf	I2C_Write@data
  3204  090D  3000               	movlw	0
  3205  090E  00AE               	movwf	I2C_Write@data+1
  3206  090F  160A  118A  21DC  120A  158A  	fcall	_I2C_Write
  3207                           
  3208                           ;clock.c: 79:     sec = b2d(I2C_Read(1));
  3209  0914  3001               	movlw	1
  3210  0915  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0916  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0917  00A0               	movwf	I2C_Read@ack
  3213  0918  3000               	movlw	0
  3214  0919  00A1               	movwf	I2C_Read@ack+1
  3215  091A  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3216  091F  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0920  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0921  0821               	movf	?_I2C_Read+1,w
  3219  0922  00A7               	movwf	b2d@to_convert+1
  3220  0923  0820               	movf	?_I2C_Read,w
  3221  0924  00A6               	movwf	b2d@to_convert
  3222  0925  160A  118A  22A7  120A  158A  	fcall	_b2d
  3223  092A  1283               	bcf	3,5	;RP0=0, select bank0
  3224  092B  1303               	bcf	3,6	;RP1=0, select bank0
  3225  092C  0827               	movf	?_b2d+1,w
  3226  092D  00E3               	movwf	_sec+1
  3227  092E  0826               	movf	?_b2d,w
  3228  092F  00E2               	movwf	_sec
  3229                           
  3230                           ;clock.c: 80:     min = b2d(I2C_Read(1));
  3231  0930  3001               	movlw	1
  3232  0931  00A0               	movwf	I2C_Read@ack
  3233  0932  3000               	movlw	0
  3234  0933  00A1               	movwf	I2C_Read@ack+1
  3235  0934  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3236  0939  1283               	bcf	3,5	;RP0=0, select bank0
  3237  093A  1303               	bcf	3,6	;RP1=0, select bank0
  3238  093B  0821               	movf	?_I2C_Read+1,w
  3239  093C  00A7               	movwf	b2d@to_convert+1
  3240  093D  0820               	movf	?_I2C_Read,w
  3241  093E  00A6               	movwf	b2d@to_convert
  3242  093F  160A  118A  22A7  120A  158A  	fcall	_b2d
  3243  0944  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0945  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0946  0827               	movf	?_b2d+1,w
  3246  0947  00E5               	movwf	_min+1
  3247  0948  0826               	movf	?_b2d,w
  3248  0949  00E4               	movwf	_min
  3249                           
  3250                           ;clock.c: 81:     hour = b2d(I2C_Read(1));
  3251  094A  3001               	movlw	1
  3252  094B  00A0               	movwf	I2C_Read@ack
  3253  094C  3000               	movlw	0
  3254  094D  00A1               	movwf	I2C_Read@ack+1
  3255  094E  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3256  0953  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0954  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0955  0821               	movf	?_I2C_Read+1,w
  3259  0956  00A7               	movwf	b2d@to_convert+1
  3260  0957  0820               	movf	?_I2C_Read,w
  3261  0958  00A6               	movwf	b2d@to_convert
  3262  0959  160A  118A  22A7  120A  158A  	fcall	_b2d
  3263  095E  1283               	bcf	3,5	;RP0=0, select bank0
  3264  095F  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0960  0827               	movf	?_b2d+1,w
  3266  0961  00E7               	movwf	_hour+1
  3267  0962  0826               	movf	?_b2d,w
  3268  0963  00E6               	movwf	_hour
  3269                           
  3270                           ;clock.c: 82:     I2C_Read(1);
  3271  0964  3001               	movlw	1
  3272  0965  00A0               	movwf	I2C_Read@ack
  3273  0966  3000               	movlw	0
  3274  0967  00A1               	movwf	I2C_Read@ack+1
  3275  0968  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3276                           
  3277                           ;clock.c: 83:     date = b2d(I2C_Read(1));
  3278  096D  3001               	movlw	1
  3279  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3280  096F  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0970  00A0               	movwf	I2C_Read@ack
  3282  0971  3000               	movlw	0
  3283  0972  00A1               	movwf	I2C_Read@ack+1
  3284  0973  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3285  0978  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0979  1303               	bcf	3,6	;RP1=0, select bank0
  3287  097A  0821               	movf	?_I2C_Read+1,w
  3288  097B  00A7               	movwf	b2d@to_convert+1
  3289  097C  0820               	movf	?_I2C_Read,w
  3290  097D  00A6               	movwf	b2d@to_convert
  3291  097E  160A  118A  22A7  120A  158A  	fcall	_b2d
  3292  0983  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0984  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0985  0827               	movf	?_b2d+1,w
  3295  0986  00E9               	movwf	_date+1
  3296  0987  0826               	movf	?_b2d,w
  3297  0988  00E8               	movwf	_date
  3298                           
  3299                           ;clock.c: 84:     month = b2d(I2C_Read(1));
  3300  0989  3001               	movlw	1
  3301  098A  00A0               	movwf	I2C_Read@ack
  3302  098B  3000               	movlw	0
  3303  098C  00A1               	movwf	I2C_Read@ack+1
  3304  098D  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3305  0992  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0993  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0994  0821               	movf	?_I2C_Read+1,w
  3308  0995  00A7               	movwf	b2d@to_convert+1
  3309  0996  0820               	movf	?_I2C_Read,w
  3310  0997  00A6               	movwf	b2d@to_convert
  3311  0998  160A  118A  22A7  120A  158A  	fcall	_b2d
  3312  099D  1283               	bcf	3,5	;RP0=0, select bank0
  3313  099E  1303               	bcf	3,6	;RP1=0, select bank0
  3314  099F  0827               	movf	?_b2d+1,w
  3315  09A0  00EB               	movwf	_month+1
  3316  09A1  0826               	movf	?_b2d,w
  3317  09A2  00EA               	movwf	_month
  3318                           
  3319                           ;clock.c: 85:     year = b2d(I2C_Read(1));
  3320  09A3  3001               	movlw	1
  3321  09A4  00A0               	movwf	I2C_Read@ack
  3322  09A5  3000               	movlw	0
  3323  09A6  00A1               	movwf	I2C_Read@ack+1
  3324  09A7  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3325  09AC  1283               	bcf	3,5	;RP0=0, select bank0
  3326  09AD  1303               	bcf	3,6	;RP1=0, select bank0
  3327  09AE  0821               	movf	?_I2C_Read+1,w
  3328  09AF  00A7               	movwf	b2d@to_convert+1
  3329  09B0  0820               	movf	?_I2C_Read,w
  3330  09B1  00A6               	movwf	b2d@to_convert
  3331  09B2  160A  118A  22A7  120A  158A  	fcall	_b2d
  3332  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  3333  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  3334  09B9  0827               	movf	?_b2d+1,w
  3335  09BA  00ED               	movwf	_year+1
  3336  09BB  0826               	movf	?_b2d,w
  3337  09BC  00EC               	movwf	_year
  3338                           
  3339                           ;clock.c: 86:     I2C_End();
  3340  09BD  160A  118A  21D3  120A  158A  	fcall	_I2C_End
  3341                           
  3342                           ;clock.c: 88:     I2C_Begin();
  3343  09C2  160A  118A  21CA  120A  158A  	fcall	_I2C_Begin
  3344                           
  3345                           ;clock.c: 89:     I2C_Write(0xD1);
  3346  09C7  30D1               	movlw	209
  3347  09C8  1283               	bcf	3,5	;RP0=0, select bank0
  3348  09C9  1303               	bcf	3,6	;RP1=0, select bank0
  3349  09CA  00AD               	movwf	I2C_Write@data
  3350  09CB  3000               	movlw	0
  3351  09CC  00AE               	movwf	I2C_Write@data+1
  3352  09CD  160A  118A  21DC  120A  158A  	fcall	_I2C_Write
  3353                           
  3354                           ;clock.c: 90:     I2C_Read(1);
  3355  09D2  3001               	movlw	1
  3356  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  3357  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  3358  09D5  00A0               	movwf	I2C_Read@ack
  3359  09D6  3000               	movlw	0
  3360  09D7  00A1               	movwf	I2C_Read@ack+1
  3361  09D8  160A  118A  22D0  120A  158A  	fcall	_I2C_Read
  3362                           
  3363                           ;clock.c: 91:     I2C_End();
  3364  09DD  160A  118A  21D3  120A  158A  	fcall	_I2C_End
  3365  09E2                     l464:
  3366  09E2  0008               	return
  3367  09E3                     __end_of_updateTime:
  3368                           
  3369                           	psect	text2
  3370  12A7                     __ptext2:	
  3371 ;; *************** function _b2d *****************
  3372 ;; Defined at:
  3373 ;;		line 34 in file "clock.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  to_convert      2    6[BANK0 ] int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  2    6[BANK0 ] int 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       2       0       0       0
  3388 ;;      Locals:         0       0       0       0       0
  3389 ;;      Temps:          0       2       0       0       0
  3390 ;;      Totals:         0       4       0       0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 3
  3394 ;; This function calls:
  3395 ;;		___wmul
  3396 ;; This function is called by:
  3397 ;;		_updateTime
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _b2d
  3403  12A7                     _b2d:
  3404  12A7                     l4910:	
  3405                           ;incstack = 0
  3406                           ; Regs used in _b2d: [wreg+status,2+status,0+pclath+cstack]
  3407                           
  3408                           
  3409                           ;clock.c: 35:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  3410  12A7  300F               	movlw	15
  3411  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  3412  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  3413  12AA  0526               	andwf	b2d@to_convert,w
  3414  12AB  00A8               	movwf	??_b2d
  3415  12AC  3000               	movlw	0
  3416  12AD  0527               	andwf	b2d@to_convert+1,w
  3417  12AE  00A9               	movwf	??_b2d+1
  3418  12AF  0E26               	swapf	b2d@to_convert,w
  3419  12B0  390F               	andlw	15
  3420  12B1  00A0               	movwf	___wmul@multiplier
  3421  12B2  0E27               	swapf	b2d@to_convert+1,w
  3422  12B3  39F0               	andlw	240
  3423  12B4  04A0               	iorwf	___wmul@multiplier,f
  3424  12B5  0E27               	swapf	b2d@to_convert+1,w
  3425  12B6  390F               	andlw	15
  3426  12B7  00A1               	movwf	___wmul@multiplier+1
  3427  12B8  30F0               	movlw	240
  3428  12B9  1DA1               	btfss	___wmul@multiplier+1,3
  3429  12BA  3000               	movlw	0
  3430  12BB  04A1               	iorwf	___wmul@multiplier+1,f
  3431  12BC  300A               	movlw	10
  3432  12BD  00A2               	movwf	___wmul@multiplicand
  3433  12BE  3000               	movlw	0
  3434  12BF  00A3               	movwf	___wmul@multiplicand+1
  3435  12C0  160A  118A  2280  160A  118A  	fcall	___wmul
  3436  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  3437  12C6  1303               	bcf	3,6	;RP1=0, select bank0
  3438  12C7  0828               	movf	??_b2d,w
  3439  12C8  0720               	addwf	?___wmul,w
  3440  12C9  00A6               	movwf	?_b2d
  3441  12CA  0829               	movf	??_b2d+1,w
  3442  12CB  1803               	skipnc
  3443  12CC  0A29               	incf	??_b2d+1,w
  3444  12CD  0721               	addwf	?___wmul+1,w
  3445  12CE  00A7               	movwf	?_b2d+1
  3446  12CF                     l452:
  3447  12CF  0008               	return
  3448  12D0                     __end_of_b2d:
  3449                           
  3450                           	psect	text3
  3451  1280                     __ptext3:	
  3452 ;; *************** function ___wmul *****************
  3453 ;; Defined at:
  3454 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3457 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  product         2    4[BANK0 ] unsigned int 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2    0[BANK0 ] unsigned int 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         0       4       0       0       0
  3470 ;;      Locals:         0       2       0       0       0
  3471 ;;      Temps:          0       0       0       0       0
  3472 ;;      Totals:         0       6       0       0       0
  3473 ;;Total ram usage:        6 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 2
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;;		_b2d
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function ___wmul
  3486  1280                     ___wmul:
  3487  1280                     l4654:	
  3488                           ;incstack = 0
  3489                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3490                           
  3491  1280  1283               	bcf	3,5	;RP0=0, select bank0
  3492  1281  1303               	bcf	3,6	;RP1=0, select bank0
  3493  1282  01A4               	clrf	___wmul@product
  3494  1283  01A5               	clrf	___wmul@product+1
  3495  1284                     l4656:
  3496  1284  1C20               	btfss	___wmul@multiplier,0
  3497  1285  2A87               	goto	u3331
  3498  1286  2A88               	goto	u3330
  3499  1287                     u3331:
  3500  1287  2A8E               	goto	l610
  3501  1288                     u3330:
  3502  1288                     l4658:
  3503  1288  0822               	movf	___wmul@multiplicand,w
  3504  1289  07A4               	addwf	___wmul@product,f
  3505  128A  1803               	skipnc
  3506  128B  0AA5               	incf	___wmul@product+1,f
  3507  128C  0823               	movf	___wmul@multiplicand+1,w
  3508  128D  07A5               	addwf	___wmul@product+1,f
  3509  128E                     l610:
  3510  128E  3001               	movlw	1
  3511  128F                     u3345:
  3512  128F  1003               	clrc
  3513  1290  0DA2               	rlf	___wmul@multiplicand,f
  3514  1291  0DA3               	rlf	___wmul@multiplicand+1,f
  3515  1292  3EFF               	addlw	-1
  3516  1293  1D03               	skipz
  3517  1294  2A8F               	goto	u3345
  3518  1295                     l4660:
  3519  1295  3001               	movlw	1
  3520  1296                     u3355:
  3521  1296  1003               	clrc
  3522  1297  0CA1               	rrf	___wmul@multiplier+1,f
  3523  1298  0CA0               	rrf	___wmul@multiplier,f
  3524  1299  3EFF               	addlw	-1
  3525  129A  1D03               	skipz
  3526  129B  2A96               	goto	u3355
  3527  129C                     l4662:
  3528  129C  0820               	movf	___wmul@multiplier,w
  3529  129D  0421               	iorwf	___wmul@multiplier+1,w
  3530  129E  1D03               	btfss	3,2
  3531  129F  2AA1               	goto	u3361
  3532  12A0  2AA2               	goto	u3360
  3533  12A1                     u3361:
  3534  12A1  2A84               	goto	l4656
  3535  12A2                     u3360:
  3536  12A2                     l4664:
  3537  12A2  0825               	movf	___wmul@product+1,w
  3538  12A3  00A1               	movwf	?___wmul+1
  3539  12A4  0824               	movf	___wmul@product,w
  3540  12A5  00A0               	movwf	?___wmul
  3541  12A6                     l612:
  3542  12A6  0008               	return
  3543  12A7                     __end_of___wmul:
  3544                           
  3545                           	psect	text4
  3546  12D0                     __ptext4:	
  3547 ;; *************** function _I2C_Read *****************
  3548 ;; Defined at:
  3549 ;;		line 42 in file "clock.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  ack             2    0[BANK0 ] unsigned short 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  incoming        2    4[BANK0 ] unsigned short 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2    0[BANK0 ] unsigned short 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       2       0       0       0
  3564 ;;      Locals:         0       2       0       0       0
  3565 ;;      Temps:          0       2       0       0       0
  3566 ;;      Totals:         0       6       0       0       0
  3567 ;;Total ram usage:        6 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 3
  3570 ;; This function calls:
  3571 ;;		_I2C_Hold
  3572 ;; This function is called by:
  3573 ;;		_updateTime
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function _I2C_Read
  3579  12D0                     _I2C_Read:
  3580  12D0                     l4918:	
  3581                           ;incstack = 0
  3582                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3583                           
  3584                           
  3585                           ;clock.c: 43:   unsigned short incoming;;clock.c: 44:   I2C_Hold();
  3586  12D0  160A  118A  21E6  160A  118A  	fcall	_I2C_Hold
  3587  12D5                     l4920:
  3588                           
  3589                           ;clock.c: 45:   RCEN = 1;
  3590  12D5  1683               	bsf	3,5	;RP0=1, select bank1
  3591  12D6  1303               	bcf	3,6	;RP1=0, select bank1
  3592  12D7  1591               	bsf	17,3	;volatile
  3593                           
  3594                           ;clock.c: 47:   I2C_Hold();
  3595  12D8  160A  118A  21E6  160A  118A  	fcall	_I2C_Hold
  3596  12DD                     l4922:
  3597                           
  3598                           ;clock.c: 48:   incoming = SSPBUF;
  3599  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  3600  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  3601  12DF  0813               	movf	19,w	;volatile
  3602  12E0  00A2               	movwf	??_I2C_Read
  3603  12E1  01A3               	clrf	??_I2C_Read+1
  3604  12E2  0822               	movf	??_I2C_Read,w
  3605  12E3  00A4               	movwf	I2C_Read@incoming
  3606  12E4  0823               	movf	??_I2C_Read+1,w
  3607  12E5  00A5               	movwf	I2C_Read@incoming+1
  3608  12E6                     l4924:
  3609                           
  3610                           ;clock.c: 50:   I2C_Hold();
  3611  12E6  160A  118A  21E6  160A  118A  	fcall	_I2C_Hold
  3612  12EB                     l4926:
  3613                           
  3614                           ;clock.c: 51:   ACKDT = (ack)?0:1;
  3615  12EB  1283               	bcf	3,5	;RP0=0, select bank0
  3616  12EC  1303               	bcf	3,6	;RP1=0, select bank0
  3617  12ED  0820               	movf	I2C_Read@ack,w
  3618  12EE  0421               	iorwf	I2C_Read@ack+1,w
  3619  12EF  1903               	btfsc	3,2
  3620  12F0  2AF2               	goto	u3671
  3621  12F1  2AF6               	goto	u3670
  3622  12F2                     u3671:
  3623  12F2  1683               	bsf	3,5	;RP0=1, select bank1
  3624  12F3  1303               	bcf	3,6	;RP1=0, select bank1
  3625  12F4  1691               	bsf	17,5	;volatile
  3626  12F5  2AF9               	goto	u3684
  3627  12F6                     u3670:
  3628  12F6  1683               	bsf	3,5	;RP0=1, select bank1
  3629  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  3630  12F8  1291               	bcf	17,5	;volatile
  3631  12F9                     u3684:
  3632  12F9                     l4928:
  3633                           
  3634                           ;clock.c: 52:   ACKEN = 1;
  3635  12F9  1611               	bsf	17,4	;volatile
  3636  12FA                     l4930:
  3637                           
  3638                           ;clock.c: 54:   return incoming;
  3639  12FA  1283               	bcf	3,5	;RP0=0, select bank0
  3640  12FB  1303               	bcf	3,6	;RP1=0, select bank0
  3641  12FC  0825               	movf	I2C_Read@incoming+1,w
  3642  12FD  00A1               	movwf	?_I2C_Read+1
  3643  12FE  0824               	movf	I2C_Read@incoming,w
  3644  12FF  00A0               	movwf	?_I2C_Read
  3645  1300                     l458:
  3646  1300  0008               	return
  3647  1301                     __end_of_I2C_Read:
  3648                           
  3649                           	psect	text5
  3650  1662                     __ptext5:	
  3651 ;; *************** function _setTime *****************
  3652 ;; Defined at:
  3653 ;;		line 57 in file "clock.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0
  3670 ;;      Totals:         0       0       0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 4
  3674 ;; This function calls:
  3675 ;;		_I2C_Begin
  3676 ;;		_I2C_End
  3677 ;;		_I2C_Write
  3678 ;;		_d2b
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _setTime
  3686  1662                     _setTime:
  3687  1662                     l5144:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _setTime: [wreg+status,2+status,0+pclath+cstack]
  3690                           
  3691                           
  3692                           ;clock.c: 58:    I2C_Begin();
  3693  1662  160A  118A  21CA  160A  118A  	fcall	_I2C_Begin
  3694                           
  3695                           ;clock.c: 59:    I2C_Write(0xD0);
  3696  1667  30D0               	movlw	208
  3697  1668  1283               	bcf	3,5	;RP0=0, select bank0
  3698  1669  1303               	bcf	3,6	;RP1=0, select bank0
  3699  166A  00AD               	movwf	I2C_Write@data
  3700  166B  3000               	movlw	0
  3701  166C  00AE               	movwf	I2C_Write@data+1
  3702  166D  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3703                           
  3704                           ;clock.c: 60:    I2C_Write(0);
  3705  1672  3000               	movlw	0
  3706  1673  1283               	bcf	3,5	;RP0=0, select bank0
  3707  1674  1303               	bcf	3,6	;RP1=0, select bank0
  3708  1675  00AD               	movwf	I2C_Write@data
  3709  1676  00AE               	movwf	I2C_Write@data+1
  3710  1677  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3711                           
  3712                           ;clock.c: 61:    I2C_Write(d2b(sec));
  3713  167C  1283               	bcf	3,5	;RP0=0, select bank0
  3714  167D  1303               	bcf	3,6	;RP1=0, select bank0
  3715  167E  0863               	movf	_sec+1,w
  3716  167F  00AA               	movwf	d2b@to_convert+1
  3717  1680  0862               	movf	_sec,w
  3718  1681  00A9               	movwf	d2b@to_convert
  3719  1682  160A  118A  2301  160A  118A  	fcall	_d2b
  3720  1687  1283               	bcf	3,5	;RP0=0, select bank0
  3721  1688  1303               	bcf	3,6	;RP1=0, select bank0
  3722  1689  082A               	movf	?_d2b+1,w
  3723  168A  00AE               	movwf	I2C_Write@data+1
  3724  168B  0829               	movf	?_d2b,w
  3725  168C  00AD               	movwf	I2C_Write@data
  3726  168D  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3727                           
  3728                           ;clock.c: 62:    I2C_Write(d2b(min));
  3729  1692  1283               	bcf	3,5	;RP0=0, select bank0
  3730  1693  1303               	bcf	3,6	;RP1=0, select bank0
  3731  1694  0865               	movf	_min+1,w
  3732  1695  00AA               	movwf	d2b@to_convert+1
  3733  1696  0864               	movf	_min,w
  3734  1697  00A9               	movwf	d2b@to_convert
  3735  1698  160A  118A  2301  160A  118A  	fcall	_d2b
  3736  169D  1283               	bcf	3,5	;RP0=0, select bank0
  3737  169E  1303               	bcf	3,6	;RP1=0, select bank0
  3738  169F  082A               	movf	?_d2b+1,w
  3739  16A0  00AE               	movwf	I2C_Write@data+1
  3740  16A1  0829               	movf	?_d2b,w
  3741  16A2  00AD               	movwf	I2C_Write@data
  3742  16A3  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3743                           
  3744                           ;clock.c: 63:    I2C_Write(d2b(hour));
  3745  16A8  1283               	bcf	3,5	;RP0=0, select bank0
  3746  16A9  1303               	bcf	3,6	;RP1=0, select bank0
  3747  16AA  0867               	movf	_hour+1,w
  3748  16AB  00AA               	movwf	d2b@to_convert+1
  3749  16AC  0866               	movf	_hour,w
  3750  16AD  00A9               	movwf	d2b@to_convert
  3751  16AE  160A  118A  2301  160A  118A  	fcall	_d2b
  3752  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  3753  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  3754  16B5  082A               	movf	?_d2b+1,w
  3755  16B6  00AE               	movwf	I2C_Write@data+1
  3756  16B7  0829               	movf	?_d2b,w
  3757  16B8  00AD               	movwf	I2C_Write@data
  3758  16B9  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3759                           
  3760                           ;clock.c: 64:    I2C_Write(1);
  3761  16BE  3001               	movlw	1
  3762  16BF  1283               	bcf	3,5	;RP0=0, select bank0
  3763  16C0  1303               	bcf	3,6	;RP1=0, select bank0
  3764  16C1  00AD               	movwf	I2C_Write@data
  3765  16C2  3000               	movlw	0
  3766  16C3  00AE               	movwf	I2C_Write@data+1
  3767  16C4  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3768                           
  3769                           ;clock.c: 65:    I2C_Write(d2b(date));
  3770  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  3771  16CA  1303               	bcf	3,6	;RP1=0, select bank0
  3772  16CB  0869               	movf	_date+1,w
  3773  16CC  00AA               	movwf	d2b@to_convert+1
  3774  16CD  0868               	movf	_date,w
  3775  16CE  00A9               	movwf	d2b@to_convert
  3776  16CF  160A  118A  2301  160A  118A  	fcall	_d2b
  3777  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  3778  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  3779  16D6  082A               	movf	?_d2b+1,w
  3780  16D7  00AE               	movwf	I2C_Write@data+1
  3781  16D8  0829               	movf	?_d2b,w
  3782  16D9  00AD               	movwf	I2C_Write@data
  3783  16DA  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3784                           
  3785                           ;clock.c: 66:    I2C_Write(d2b(month));
  3786  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  3787  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  3788  16E1  086B               	movf	_month+1,w
  3789  16E2  00AA               	movwf	d2b@to_convert+1
  3790  16E3  086A               	movf	_month,w
  3791  16E4  00A9               	movwf	d2b@to_convert
  3792  16E5  160A  118A  2301  160A  118A  	fcall	_d2b
  3793  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  3794  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  3795  16EC  082A               	movf	?_d2b+1,w
  3796  16ED  00AE               	movwf	I2C_Write@data+1
  3797  16EE  0829               	movf	?_d2b,w
  3798  16EF  00AD               	movwf	I2C_Write@data
  3799  16F0  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3800                           
  3801                           ;clock.c: 67:    I2C_Write(d2b(year));
  3802  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  3803  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  3804  16F7  086D               	movf	_year+1,w
  3805  16F8  00AA               	movwf	d2b@to_convert+1
  3806  16F9  086C               	movf	_year,w
  3807  16FA  00A9               	movwf	d2b@to_convert
  3808  16FB  160A  118A  2301  160A  118A  	fcall	_d2b
  3809  1700  1283               	bcf	3,5	;RP0=0, select bank0
  3810  1701  1303               	bcf	3,6	;RP1=0, select bank0
  3811  1702  082A               	movf	?_d2b+1,w
  3812  1703  00AE               	movwf	I2C_Write@data+1
  3813  1704  0829               	movf	?_d2b,w
  3814  1705  00AD               	movwf	I2C_Write@data
  3815  1706  160A  118A  21DC  160A  118A  	fcall	_I2C_Write
  3816                           
  3817                           ;clock.c: 68:    I2C_End();
  3818  170B  160A  118A  21D3  160A  118A  	fcall	_I2C_End
  3819  1710                     l461:
  3820  1710  0008               	return
  3821  1711                     __end_of_setTime:
  3822                           
  3823                           	psect	text6
  3824  1301                     __ptext6:	
  3825 ;; *************** function _d2b *****************
  3826 ;; Defined at:
  3827 ;;		line 38 in file "clock.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  to_convert      2    9[BANK0 ] int 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  2    9[BANK0 ] int 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0, pclath, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3841 ;;      Params:         0       2       0       0       0
  3842 ;;      Locals:         0       0       0       0       0
  3843 ;;      Temps:          0       2       0       0       0
  3844 ;;      Totals:         0       4       0       0       0
  3845 ;;Total ram usage:        4 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 3
  3848 ;; This function calls:
  3849 ;;		___awdiv
  3850 ;;		___awmod
  3851 ;; This function is called by:
  3852 ;;		_setTime
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function _d2b
  3858  1301                     _d2b:
  3859  1301                     l4914:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _d2b: [wreg+status,2+status,0+pclath+cstack]
  3862                           
  3863                           
  3864                           ;clock.c: 39:    return ((to_convert / 10) << 4) + (to_convert % 10);
  3865  1301  300A               	movlw	10
  3866  1302  1283               	bcf	3,5	;RP0=0, select bank0
  3867  1303  1303               	bcf	3,6	;RP1=0, select bank0
  3868  1304  00A0               	movwf	___awdiv@divisor
  3869  1305  3000               	movlw	0
  3870  1306  00A1               	movwf	___awdiv@divisor+1
  3871  1307  082A               	movf	d2b@to_convert+1,w
  3872  1308  00A3               	movwf	___awdiv@dividend+1
  3873  1309  0829               	movf	d2b@to_convert,w
  3874  130A  00A2               	movwf	___awdiv@dividend
  3875  130B  160A  118A  257A  160A  118A  	fcall	___awdiv
  3876  1310  1283               	bcf	3,5	;RP0=0, select bank0
  3877  1311  1303               	bcf	3,6	;RP1=0, select bank0
  3878  1312  0820               	movf	?___awdiv,w
  3879  1313  00AB               	movwf	??_d2b
  3880  1314  0821               	movf	?___awdiv+1,w
  3881  1315  00AC               	movwf	??_d2b+1
  3882  1316  0EAB               	swapf	??_d2b,f
  3883  1317  0EAC               	swapf	??_d2b+1,f
  3884  1318  30F0               	movlw	240
  3885  1319  05AC               	andwf	??_d2b+1,f
  3886  131A  082B               	movf	??_d2b,w
  3887  131B  390F               	andlw	15
  3888  131C  04AC               	iorwf	??_d2b+1,f
  3889  131D  30F0               	movlw	240
  3890  131E  05AB               	andwf	??_d2b,f
  3891  131F  300A               	movlw	10
  3892  1320  00A0               	movwf	___awmod@divisor
  3893  1321  3000               	movlw	0
  3894  1322  00A1               	movwf	___awmod@divisor+1
  3895  1323  082A               	movf	d2b@to_convert+1,w
  3896  1324  00A3               	movwf	___awmod@dividend+1
  3897  1325  0829               	movf	d2b@to_convert,w
  3898  1326  00A2               	movwf	___awmod@dividend
  3899  1327  160A  118A  2454  160A  118A  	fcall	___awmod
  3900  132C  1283               	bcf	3,5	;RP0=0, select bank0
  3901  132D  1303               	bcf	3,6	;RP1=0, select bank0
  3902  132E  0820               	movf	?___awmod,w
  3903  132F  072B               	addwf	??_d2b,w
  3904  1330  00A9               	movwf	?_d2b
  3905  1331  0821               	movf	?___awmod+1,w
  3906  1332  1803               	skipnc
  3907  1333  0A21               	incf	?___awmod+1,w
  3908  1334  072C               	addwf	??_d2b+1,w
  3909  1335  00AA               	movwf	?_d2b+1
  3910  1336                     l455:
  3911  1336  0008               	return
  3912  1337                     __end_of_d2b:
  3913                           
  3914                           	psect	text7
  3915  1454                     __ptext7:	
  3916 ;; *************** function ___awmod *****************
  3917 ;; Defined at:
  3918 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  divisor         2    0[BANK0 ] int 
  3921 ;;  dividend        2    2[BANK0 ] int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  sign            1    6[BANK0 ] unsigned char 
  3924 ;;  counter         1    5[BANK0 ] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2    0[BANK0 ] int 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       4       0       0       0
  3935 ;;      Locals:         0       2       0       0       0
  3936 ;;      Temps:          0       1       0       0       0
  3937 ;;      Totals:         0       7       0       0       0
  3938 ;;Total ram usage:        7 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 2
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_d2b
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function ___awmod
  3950  1454                     ___awmod:
  3951  1454                     l4712:	
  3952                           ;incstack = 0
  3953                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3954                           
  3955  1454  1283               	bcf	3,5	;RP0=0, select bank0
  3956  1455  1303               	bcf	3,6	;RP1=0, select bank0
  3957  1456  01A6               	clrf	___awmod@sign
  3958  1457                     l4714:
  3959  1457  1FA3               	btfss	___awmod@dividend+1,7
  3960  1458  2C5A               	goto	u3471
  3961  1459  2C5B               	goto	u3470
  3962  145A                     u3471:
  3963  145A  2C62               	goto	l4720
  3964  145B                     u3470:
  3965  145B                     l4716:
  3966  145B  09A2               	comf	___awmod@dividend,f
  3967  145C  09A3               	comf	___awmod@dividend+1,f
  3968  145D  0AA2               	incf	___awmod@dividend,f
  3969  145E  1903               	skipnz
  3970  145F  0AA3               	incf	___awmod@dividend+1,f
  3971  1460                     l4718:
  3972  1460  01A6               	clrf	___awmod@sign
  3973  1461  0AA6               	incf	___awmod@sign,f
  3974  1462                     l4720:
  3975  1462  1FA1               	btfss	___awmod@divisor+1,7
  3976  1463  2C65               	goto	u3481
  3977  1464  2C66               	goto	u3480
  3978  1465                     u3481:
  3979  1465  2C6B               	goto	l4724
  3980  1466                     u3480:
  3981  1466                     l4722:
  3982  1466  09A0               	comf	___awmod@divisor,f
  3983  1467  09A1               	comf	___awmod@divisor+1,f
  3984  1468  0AA0               	incf	___awmod@divisor,f
  3985  1469  1903               	skipnz
  3986  146A  0AA1               	incf	___awmod@divisor+1,f
  3987  146B                     l4724:
  3988  146B  0820               	movf	___awmod@divisor,w
  3989  146C  0421               	iorwf	___awmod@divisor+1,w
  3990  146D  1903               	btfsc	3,2
  3991  146E  2C70               	goto	u3491
  3992  146F  2C71               	goto	u3490
  3993  1470                     u3491:
  3994  1470  2CA0               	goto	l4742
  3995  1471                     u3490:
  3996  1471                     l4726:
  3997  1471  01A5               	clrf	___awmod@counter
  3998  1472  0AA5               	incf	___awmod@counter,f
  3999  1473  2C7F               	goto	l4732
  4000  1474                     l4728:
  4001  1474  3001               	movlw	1
  4002  1475                     u3505:
  4003  1475  1003               	clrc
  4004  1476  0DA0               	rlf	___awmod@divisor,f
  4005  1477  0DA1               	rlf	___awmod@divisor+1,f
  4006  1478  3EFF               	addlw	-1
  4007  1479  1D03               	skipz
  4008  147A  2C75               	goto	u3505
  4009  147B                     l4730:
  4010  147B  3001               	movlw	1
  4011  147C  00A4               	movwf	??___awmod
  4012  147D  0824               	movf	??___awmod,w
  4013  147E  07A5               	addwf	___awmod@counter,f
  4014  147F                     l4732:
  4015  147F  1FA1               	btfss	___awmod@divisor+1,7
  4016  1480  2C82               	goto	u3511
  4017  1481  2C83               	goto	u3510
  4018  1482                     u3511:
  4019  1482  2C74               	goto	l4728
  4020  1483                     u3510:
  4021  1483                     l4734:
  4022  1483  0821               	movf	___awmod@divisor+1,w
  4023  1484  0223               	subwf	___awmod@dividend+1,w
  4024  1485  1D03               	skipz
  4025  1486  2C89               	goto	u3525
  4026  1487  0820               	movf	___awmod@divisor,w
  4027  1488  0222               	subwf	___awmod@dividend,w
  4028  1489                     u3525:
  4029  1489  1C03               	skipc
  4030  148A  2C8C               	goto	u3521
  4031  148B  2C8D               	goto	u3520
  4032  148C                     u3521:
  4033  148C  2C93               	goto	l4738
  4034  148D                     u3520:
  4035  148D                     l4736:
  4036  148D  0820               	movf	___awmod@divisor,w
  4037  148E  02A2               	subwf	___awmod@dividend,f
  4038  148F  0821               	movf	___awmod@divisor+1,w
  4039  1490  1C03               	skipc
  4040  1491  03A3               	decf	___awmod@dividend+1,f
  4041  1492  02A3               	subwf	___awmod@dividend+1,f
  4042  1493                     l4738:
  4043  1493  3001               	movlw	1
  4044  1494                     u3535:
  4045  1494  1003               	clrc
  4046  1495  0CA1               	rrf	___awmod@divisor+1,f
  4047  1496  0CA0               	rrf	___awmod@divisor,f
  4048  1497  3EFF               	addlw	-1
  4049  1498  1D03               	skipz
  4050  1499  2C94               	goto	u3535
  4051  149A                     l4740:
  4052  149A  3001               	movlw	1
  4053  149B  02A5               	subwf	___awmod@counter,f
  4054  149C  1D03               	btfss	3,2
  4055  149D  2C9F               	goto	u3541
  4056  149E  2CA0               	goto	u3540
  4057  149F                     u3541:
  4058  149F  2C83               	goto	l4734
  4059  14A0                     u3540:
  4060  14A0                     l4742:
  4061  14A0  0826               	movf	___awmod@sign,w
  4062  14A1  1903               	btfsc	3,2
  4063  14A2  2CA4               	goto	u3551
  4064  14A3  2CA5               	goto	u3550
  4065  14A4                     u3551:
  4066  14A4  2CAA               	goto	l4746
  4067  14A5                     u3550:
  4068  14A5                     l4744:
  4069  14A5  09A2               	comf	___awmod@dividend,f
  4070  14A6  09A3               	comf	___awmod@dividend+1,f
  4071  14A7  0AA2               	incf	___awmod@dividend,f
  4072  14A8  1903               	skipnz
  4073  14A9  0AA3               	incf	___awmod@dividend+1,f
  4074  14AA                     l4746:
  4075  14AA  0823               	movf	___awmod@dividend+1,w
  4076  14AB  00A1               	movwf	?___awmod+1
  4077  14AC  0822               	movf	___awmod@dividend,w
  4078  14AD  00A0               	movwf	?___awmod
  4079  14AE                     l776:
  4080  14AE  0008               	return
  4081  14AF                     __end_of___awmod:
  4082                           
  4083                           	psect	text8
  4084  157A                     __ptext8:	
  4085 ;; *************** function ___awdiv *****************
  4086 ;; Defined at:
  4087 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  divisor         2    0[BANK0 ] int 
  4090 ;;  dividend        2    2[BANK0 ] int 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  quotient        2    7[BANK0 ] int 
  4093 ;;  sign            1    6[BANK0 ] unsigned char 
  4094 ;;  counter         1    5[BANK0 ] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    0[BANK0 ] int 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       4       0       0       0
  4105 ;;      Locals:         0       4       0       0       0
  4106 ;;      Temps:          0       1       0       0       0
  4107 ;;      Totals:         0       9       0       0       0
  4108 ;;Total ram usage:        9 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 2
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_d2b
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function ___awdiv
  4120  157A                     ___awdiv:
  4121  157A                     l4668:	
  4122                           ;incstack = 0
  4123                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4124                           
  4125  157A  1283               	bcf	3,5	;RP0=0, select bank0
  4126  157B  1303               	bcf	3,6	;RP1=0, select bank0
  4127  157C  01A6               	clrf	___awdiv@sign
  4128  157D                     l4670:
  4129  157D  1FA1               	btfss	___awdiv@divisor+1,7
  4130  157E  2D80               	goto	u3371
  4131  157F  2D81               	goto	u3370
  4132  1580                     u3371:
  4133  1580  2D88               	goto	l4676
  4134  1581                     u3370:
  4135  1581                     l4672:
  4136  1581  09A0               	comf	___awdiv@divisor,f
  4137  1582  09A1               	comf	___awdiv@divisor+1,f
  4138  1583  0AA0               	incf	___awdiv@divisor,f
  4139  1584  1903               	skipnz
  4140  1585  0AA1               	incf	___awdiv@divisor+1,f
  4141  1586                     l4674:
  4142  1586  01A6               	clrf	___awdiv@sign
  4143  1587  0AA6               	incf	___awdiv@sign,f
  4144  1588                     l4676:
  4145  1588  1FA3               	btfss	___awdiv@dividend+1,7
  4146  1589  2D8B               	goto	u3381
  4147  158A  2D8C               	goto	u3380
  4148  158B                     u3381:
  4149  158B  2D95               	goto	l4682
  4150  158C                     u3380:
  4151  158C                     l4678:
  4152  158C  09A2               	comf	___awdiv@dividend,f
  4153  158D  09A3               	comf	___awdiv@dividend+1,f
  4154  158E  0AA2               	incf	___awdiv@dividend,f
  4155  158F  1903               	skipnz
  4156  1590  0AA3               	incf	___awdiv@dividend+1,f
  4157  1591                     l4680:
  4158  1591  3001               	movlw	1
  4159  1592  00A4               	movwf	??___awdiv
  4160  1593  0824               	movf	??___awdiv,w
  4161  1594  06A6               	xorwf	___awdiv@sign,f
  4162  1595                     l4682:
  4163  1595  01A7               	clrf	___awdiv@quotient
  4164  1596  01A8               	clrf	___awdiv@quotient+1
  4165  1597                     l4684:
  4166  1597  0820               	movf	___awdiv@divisor,w
  4167  1598  0421               	iorwf	___awdiv@divisor+1,w
  4168  1599  1903               	btfsc	3,2
  4169  159A  2D9C               	goto	u3391
  4170  159B  2D9D               	goto	u3390
  4171  159C                     u3391:
  4172  159C  2DD4               	goto	l4704
  4173  159D                     u3390:
  4174  159D                     l4686:
  4175  159D  01A5               	clrf	___awdiv@counter
  4176  159E  0AA5               	incf	___awdiv@counter,f
  4177  159F  2DAB               	goto	l4692
  4178  15A0                     l4688:
  4179  15A0  3001               	movlw	1
  4180  15A1                     u3405:
  4181  15A1  1003               	clrc
  4182  15A2  0DA0               	rlf	___awdiv@divisor,f
  4183  15A3  0DA1               	rlf	___awdiv@divisor+1,f
  4184  15A4  3EFF               	addlw	-1
  4185  15A5  1D03               	skipz
  4186  15A6  2DA1               	goto	u3405
  4187  15A7                     l4690:
  4188  15A7  3001               	movlw	1
  4189  15A8  00A4               	movwf	??___awdiv
  4190  15A9  0824               	movf	??___awdiv,w
  4191  15AA  07A5               	addwf	___awdiv@counter,f
  4192  15AB                     l4692:
  4193  15AB  1FA1               	btfss	___awdiv@divisor+1,7
  4194  15AC  2DAE               	goto	u3411
  4195  15AD  2DAF               	goto	u3410
  4196  15AE                     u3411:
  4197  15AE  2DA0               	goto	l4688
  4198  15AF                     u3410:
  4199  15AF                     l4694:
  4200  15AF  3001               	movlw	1
  4201  15B0                     u3425:
  4202  15B0  1003               	clrc
  4203  15B1  0DA7               	rlf	___awdiv@quotient,f
  4204  15B2  0DA8               	rlf	___awdiv@quotient+1,f
  4205  15B3  3EFF               	addlw	-1
  4206  15B4  1D03               	skipz
  4207  15B5  2DB0               	goto	u3425
  4208  15B6  0821               	movf	___awdiv@divisor+1,w
  4209  15B7  0223               	subwf	___awdiv@dividend+1,w
  4210  15B8  1D03               	skipz
  4211  15B9  2DBC               	goto	u3435
  4212  15BA  0820               	movf	___awdiv@divisor,w
  4213  15BB  0222               	subwf	___awdiv@dividend,w
  4214  15BC                     u3435:
  4215  15BC  1C03               	skipc
  4216  15BD  2DBF               	goto	u3431
  4217  15BE  2DC0               	goto	u3430
  4218  15BF                     u3431:
  4219  15BF  2DC7               	goto	l4700
  4220  15C0                     u3430:
  4221  15C0                     l4696:
  4222  15C0  0820               	movf	___awdiv@divisor,w
  4223  15C1  02A2               	subwf	___awdiv@dividend,f
  4224  15C2  0821               	movf	___awdiv@divisor+1,w
  4225  15C3  1C03               	skipc
  4226  15C4  03A3               	decf	___awdiv@dividend+1,f
  4227  15C5  02A3               	subwf	___awdiv@dividend+1,f
  4228  15C6                     l4698:
  4229  15C6  1427               	bsf	___awdiv@quotient,0
  4230  15C7                     l4700:
  4231  15C7  3001               	movlw	1
  4232  15C8                     u3445:
  4233  15C8  1003               	clrc
  4234  15C9  0CA1               	rrf	___awdiv@divisor+1,f
  4235  15CA  0CA0               	rrf	___awdiv@divisor,f
  4236  15CB  3EFF               	addlw	-1
  4237  15CC  1D03               	skipz
  4238  15CD  2DC8               	goto	u3445
  4239  15CE                     l4702:
  4240  15CE  3001               	movlw	1
  4241  15CF  02A5               	subwf	___awdiv@counter,f
  4242  15D0  1D03               	btfss	3,2
  4243  15D1  2DD3               	goto	u3451
  4244  15D2  2DD4               	goto	u3450
  4245  15D3                     u3451:
  4246  15D3  2DAF               	goto	l4694
  4247  15D4                     u3450:
  4248  15D4                     l4704:
  4249  15D4  0826               	movf	___awdiv@sign,w
  4250  15D5  1903               	btfsc	3,2
  4251  15D6  2DD8               	goto	u3461
  4252  15D7  2DD9               	goto	u3460
  4253  15D8                     u3461:
  4254  15D8  2DDE               	goto	l4708
  4255  15D9                     u3460:
  4256  15D9                     l4706:
  4257  15D9  09A7               	comf	___awdiv@quotient,f
  4258  15DA  09A8               	comf	___awdiv@quotient+1,f
  4259  15DB  0AA7               	incf	___awdiv@quotient,f
  4260  15DC  1903               	skipnz
  4261  15DD  0AA8               	incf	___awdiv@quotient+1,f
  4262  15DE                     l4708:
  4263  15DE  0828               	movf	___awdiv@quotient+1,w
  4264  15DF  00A1               	movwf	?___awdiv+1
  4265  15E0  0827               	movf	___awdiv@quotient,w
  4266  15E1  00A0               	movwf	?___awdiv
  4267  15E2                     l763:
  4268  15E2  0008               	return
  4269  15E3                     __end_of___awdiv:
  4270                           
  4271                           	psect	text9
  4272  11DC                     __ptext9:	
  4273 ;; *************** function _I2C_Write *****************
  4274 ;; Defined at:
  4275 ;;		line 29 in file "clock.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  data            2   13[BANK0 ] unsigned int 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         0       2       0       0       0
  4290 ;;      Locals:         0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0
  4292 ;;      Totals:         0       2       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 3
  4296 ;; This function calls:
  4297 ;;		_I2C_Hold
  4298 ;; This function is called by:
  4299 ;;		_setTime
  4300 ;;		_updateTime
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _I2C_Write
  4306  11DC                     _I2C_Write:
  4307  11DC                     l4906:	
  4308                           ;incstack = 0
  4309                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  4310                           
  4311                           
  4312                           ;clock.c: 30:   I2C_Hold();
  4313  11DC  160A  118A  21E6  160A  118A  	fcall	_I2C_Hold
  4314  11E1                     l4908:
  4315                           
  4316                           ;clock.c: 31:   SSPBUF = data;
  4317  11E1  1283               	bcf	3,5	;RP0=0, select bank0
  4318  11E2  1303               	bcf	3,6	;RP1=0, select bank0
  4319  11E3  082D               	movf	I2C_Write@data,w
  4320  11E4  0093               	movwf	19	;volatile
  4321  11E5                     l449:
  4322  11E5  0008               	return
  4323  11E6                     __end_of_I2C_Write:
  4324                           
  4325                           	psect	text10
  4326  11D3                     __ptext10:	
  4327 ;; *************** function _I2C_End *****************
  4328 ;; Defined at:
  4329 ;;		line 24 in file "clock.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0, pclath, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4343 ;;      Params:         0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0
  4346 ;;      Totals:         0       0       0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 3
  4350 ;; This function calls:
  4351 ;;		_I2C_Hold
  4352 ;; This function is called by:
  4353 ;;		_setTime
  4354 ;;		_updateTime
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _I2C_End
  4360  11D3                     _I2C_End:
  4361  11D3                     l4902:	
  4362                           ;incstack = 0
  4363                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  4364                           
  4365                           
  4366                           ;clock.c: 25:   I2C_Hold();
  4367  11D3  160A  118A  21E6  160A  118A  	fcall	_I2C_Hold
  4368  11D8                     l4904:
  4369                           
  4370                           ;clock.c: 26:   PEN = 1;
  4371  11D8  1683               	bsf	3,5	;RP0=1, select bank1
  4372  11D9  1303               	bcf	3,6	;RP1=0, select bank1
  4373  11DA  1511               	bsf	17,2	;volatile
  4374  11DB                     l446:
  4375  11DB  0008               	return
  4376  11DC                     __end_of_I2C_End:
  4377                           
  4378                           	psect	text11
  4379  11CA                     __ptext11:	
  4380 ;; *************** function _I2C_Begin *****************
  4381 ;; Defined at:
  4382 ;;		line 18 in file "clock.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 3
  4403 ;; This function calls:
  4404 ;;		_I2C_Hold
  4405 ;; This function is called by:
  4406 ;;		_setTime
  4407 ;;		_updateTime
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _I2C_Begin
  4413  11CA                     _I2C_Begin:
  4414  11CA                     l4898:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _I2C_Begin: [wreg+status,2+status,0+pclath+cstack]
  4417                           
  4418                           
  4419                           ;clock.c: 19:   I2C_Hold();
  4420  11CA  160A  118A  21E6  160A  118A  	fcall	_I2C_Hold
  4421  11CF                     l4900:
  4422                           
  4423                           ;clock.c: 20:   SEN = 1;
  4424  11CF  1683               	bsf	3,5	;RP0=1, select bank1
  4425  11D0  1303               	bcf	3,6	;RP1=0, select bank1
  4426  11D1  1411               	bsf	17,0	;volatile
  4427  11D2                     l443:
  4428  11D2  0008               	return
  4429  11D3                     __end_of_I2C_Begin:
  4430                           
  4431                           	psect	text12
  4432  11E6                     __ptext12:	
  4433 ;; *************** function _I2C_Hold *****************
  4434 ;; Defined at:
  4435 ;;		line 14 in file "clock.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0
  4452 ;;      Totals:         0       0       0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 2
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_I2C_Begin
  4460 ;;		_I2C_End
  4461 ;;		_I2C_Write
  4462 ;;		_I2C_Read
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           
  4467                           ;psect for function _I2C_Hold
  4468  11E6                     _I2C_Hold:
  4469  11E6                     l4648:	
  4470                           ;incstack = 0
  4471                           ; Regs used in _I2C_Hold: [wreg+status,2]
  4472                           
  4473  11E6                     l4650:	
  4474                           ;clock.c: 15:     while ((SSPCON2 & 0b00011111)||(SSPSTAT & 0b00000100)) ;
  4475                           
  4476  11E6  1683               	bsf	3,5	;RP0=1, select bank1
  4477  11E7  1303               	bcf	3,6	;RP1=0, select bank1
  4478  11E8  0811               	movf	17,w	;volatile
  4479  11E9  391F               	andlw	31
  4480  11EA  1D03               	btfss	3,2
  4481  11EB  29ED               	goto	u3311
  4482  11EC  29EE               	goto	u3310
  4483  11ED                     u3311:
  4484  11ED  29E6               	goto	l4650
  4485  11EE                     u3310:
  4486  11EE                     l4652:
  4487  11EE  1914               	btfsc	20,2	;volatile
  4488  11EF  29F1               	goto	u3321
  4489  11F0  29F2               	goto	u3320
  4490  11F1                     u3321:
  4491  11F1  29E6               	goto	l4650
  4492  11F2                     u3320:
  4493  11F2                     l440:
  4494  11F2  0008               	return
  4495  11F3                     __end_of_I2C_Hold:
  4496                           
  4497                           	psect	text13
  4498  1223                     __ptext13:	
  4499 ;; *************** function _init_io *****************
  4500 ;; Defined at:
  4501 ;;		line 10 in file "irf.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4515 ;;      Params:         0       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0
  4518 ;;      Totals:         0       0       0       0       0
  4519 ;;Total ram usage:        0 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; Hardware stack levels required when called: 2
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_main
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           
  4530                           ;psect for function _init_io
  4531  1223                     _init_io:
  4532  1223                     l5018:	
  4533                           ;incstack = 0
  4534                           ; Regs used in _init_io: [wreg+status,2]
  4535                           
  4536                           
  4537                           ;irf.c: 12:     TRISC = 0xFF;
  4538  1223  30FF               	movlw	255
  4539  1224  1683               	bsf	3,5	;RP0=1, select bank1
  4540  1225  1303               	bcf	3,6	;RP1=0, select bank1
  4541  1226  0087               	movwf	7	;volatile
  4542  1227                     l5020:
  4543                           
  4544                           ;irf.c: 14:     T0CS=0;
  4545  1227  1281               	bcf	1,5	;volatile
  4546  1228                     l5022:
  4547                           
  4548                           ;irf.c: 15:     PSA=1;
  4549  1228  1581               	bsf	1,3	;volatile
  4550                           
  4551                           ;irf.c: 16:     TMR0=0x13;
  4552  1229  3013               	movlw	19
  4553  122A  1283               	bcf	3,5	;RP0=0, select bank0
  4554  122B  1303               	bcf	3,6	;RP1=0, select bank0
  4555  122C  0081               	movwf	1	;volatile
  4556  122D                     l5024:
  4557                           
  4558                           ;irf.c: 17:     T0IF=0;
  4559  122D  110B               	bcf	11,2	;volatile
  4560  122E                     l5026:
  4561                           
  4562                           ;irf.c: 18:     T0IE=1;
  4563  122E  168B               	bsf	11,5	;volatile
  4564                           
  4565                           ;irf.c: 22:  CCP2CON=0x04;
  4566  122F  3004               	movlw	4
  4567  1230  009D               	movwf	29	;volatile
  4568  1231                     l5028:
  4569                           
  4570                           ;irf.c: 23:  T1CON=0x00;
  4571  1231  0190               	clrf	16	;volatile
  4572  1232                     l5030:
  4573                           
  4574                           ;irf.c: 24:  TRISC1=1;
  4575  1232  1683               	bsf	3,5	;RP0=1, select bank1
  4576  1233  1303               	bcf	3,6	;RP1=0, select bank1
  4577  1234  1487               	bsf	7,1	;volatile
  4578  1235                     l5032:
  4579                           
  4580                           ;irf.c: 25:  CCP2IF=0;
  4581  1235  1283               	bcf	3,5	;RP0=0, select bank0
  4582  1236  1303               	bcf	3,6	;RP1=0, select bank0
  4583  1237  100D               	bcf	13,0	;volatile
  4584  1238                     l5034:
  4585                           
  4586                           ;irf.c: 26:  CCP2IE=1;
  4587  1238  1683               	bsf	3,5	;RP0=1, select bank1
  4588  1239  1303               	bcf	3,6	;RP1=0, select bank1
  4589  123A  140D               	bsf	13,0	;volatile
  4590  123B                     l5036:
  4591                           
  4592                           ;irf.c: 27:  TMR1ON=1;
  4593  123B  1283               	bcf	3,5	;RP0=0, select bank0
  4594  123C  1303               	bcf	3,6	;RP1=0, select bank0
  4595  123D  1410               	bsf	16,0	;volatile
  4596  123E                     l5038:
  4597                           
  4598                           ;irf.c: 31:     GIE=1;
  4599  123E  178B               	bsf	11,7	;volatile
  4600  123F                     l515:
  4601  123F  0008               	return
  4602  1240                     __end_of_init_io:
  4603                           
  4604                           	psect	text14
  4605  0C29                     __ptext14:	
  4606 ;; *************** function _Setting_display *****************
  4607 ;; Defined at:
  4608 ;;		line 532 in file "ht1621.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  cursor          1    wreg     unsigned char 
  4611 ;;  dp              1   10[BANK0 ] PTR unsigned char 
  4612 ;;		 -> display(4), 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  cursor          1   14[BANK0 ] unsigned char 
  4615 ;;  Temp_Data       1   15[BANK0 ] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4625 ;;      Params:         0       1       0       0       0
  4626 ;;      Locals:         0       2       0       0       0
  4627 ;;      Temps:          0       3       0       0       0
  4628 ;;      Totals:         0       6       0       0       0
  4629 ;;Total ram usage:        6 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 5
  4632 ;; This function calls:
  4633 ;;		_Write1DataHT1621
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _Setting_display
  4641  0C29                     _Setting_display:
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _Setting_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4645                           ;Setting_display@cursor stored from wreg
  4646  0C29  1283               	bcf	3,5	;RP0=0, select bank0
  4647  0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  4648  0C2B  00AE               	movwf	Setting_display@cursor
  4649  0C2C                     l5146:
  4650                           
  4651                           ;ht1621.c: 533:     unsigned char Temp_Data;;ht1621.c: 534:     switch(cursor){
  4652  0C2C  2FE9               	goto	l5238
  4653  0C2D                     l5148:
  4654                           
  4655                           ;ht1621.c: 536:             Temp_Data= dp[0];
  4656  0C2D  082A               	movf	Setting_display@dp,w
  4657  0C2E  0084               	movwf	4
  4658  0C2F  1383               	bcf	3,7	;select IRP bank0
  4659  0C30  0800               	movf	0,w
  4660  0C31  00AB               	movwf	??_Setting_display
  4661  0C32  082B               	movf	??_Setting_display,w
  4662  0C33  00AF               	movwf	Setting_display@Temp_Data
  4663  0C34                     l5150:
  4664                           
  4665                           ;ht1621.c: 537:             Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4
      +                          );
  4666  0C34  082F               	movf	Setting_display@Temp_Data,w
  4667  0C35  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4668  0C36  0084               	movwf	4
  4669  0C37  0800               	movf	0,w
  4670  0C38  00AB               	movwf	??_Setting_display
  4671  0C39  3004               	movlw	4
  4672  0C3A                     u4085:
  4673  0C3A  1003               	clrc
  4674  0C3B  0CAB               	rrf	??_Setting_display,f
  4675  0C3C  3EFF               	addlw	-1
  4676  0C3D  1D03               	skipz
  4677  0C3E  2C3A               	goto	u4085
  4678  0C3F  082B               	movf	??_Setting_display,w
  4679  0C40  00AC               	movwf	??_Setting_display+1
  4680  0C41  082C               	movf	??_Setting_display+1,w
  4681  0C42  00A4               	movwf	Write1DataHT1621@Dat
  4682  0C43  3001               	movlw	low (_HT1621_segtab-__stringbase)
  4683  0C44  0084               	movwf	4
  4684  0C45  160A  118A  2000  120A  158A  	fcall	stringdir
  4685  0C4A  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4686  0C4F                     l5152:
  4687                           
  4688                           ;ht1621.c: 538:             Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  4689  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  4690  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  4691  0C51  082F               	movf	Setting_display@Temp_Data,w
  4692  0C52  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4693  0C53  0084               	movwf	4
  4694  0C54  1383               	bcf	3,7	;select IRP bank1
  4695  0C55  0800               	movf	0,w
  4696  0C56  00AB               	movwf	??_Setting_display
  4697  0C57  082B               	movf	??_Setting_display,w
  4698  0C58  00A4               	movwf	Write1DataHT1621@Dat
  4699  0C59  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  4700  0C5A  0084               	movwf	4
  4701  0C5B  160A  118A  2000  120A  158A  	fcall	stringdir
  4702  0C60  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4703                           
  4704                           ;ht1621.c: 539:             Temp_Data = dp[1];
  4705  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  4707  0C67  0A2A               	incf	Setting_display@dp,w
  4708  0C68  0084               	movwf	4
  4709  0C69  1383               	bcf	3,7	;select IRP bank0
  4710  0C6A  0800               	movf	0,w
  4711  0C6B  00AB               	movwf	??_Setting_display
  4712  0C6C  082B               	movf	??_Setting_display,w
  4713  0C6D  00AF               	movwf	Setting_display@Temp_Data
  4714  0C6E                     l5154:
  4715                           
  4716                           ;ht1621.c: 541:             Write1DataHT1621(HT1621_segtab[2], (LCD_RAM_Tab[Temp_Data]|0
      +                          x80)>>4);
  4717  0C6E  082F               	movf	Setting_display@Temp_Data,w
  4718  0C6F  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4719  0C70  0084               	movwf	4
  4720  0C71  3080               	movlw	128
  4721  0C72  0400               	iorwf	0,w
  4722  0C73  00AB               	movwf	??_Setting_display
  4723  0C74  3000               	movlw	0
  4724  0C75  00AC               	movwf	??_Setting_display+1
  4725  0C76  3004               	movlw	4
  4726  0C77  00FF               	movwf	btemp+1
  4727  0C78                     u4095:
  4728  0C78  0D2C               	rlf	??_Setting_display+1,w
  4729  0C79  0CAC               	rrf	??_Setting_display+1,f
  4730  0C7A  0CAB               	rrf	??_Setting_display,f
  4731  0C7B  0BFF               	decfsz	btemp+1,f
  4732  0C7C  2C78               	goto	u4095
  4733  0C7D  082B               	movf	??_Setting_display,w
  4734  0C7E  00AD               	movwf	??_Setting_display+2
  4735  0C7F  082D               	movf	??_Setting_display+2,w
  4736  0C80  00A4               	movwf	Write1DataHT1621@Dat
  4737  0C81  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  4738  0C82  0084               	movwf	4
  4739  0C83  160A  118A  2000  120A  158A  	fcall	stringdir
  4740  0C88  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4741  0C8D                     l5156:
  4742                           
  4743                           ;ht1621.c: 542:             Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  4744  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0C8F  082F               	movf	Setting_display@Temp_Data,w
  4747  0C90  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4748  0C91  0084               	movwf	4
  4749  0C92  1383               	bcf	3,7	;select IRP bank1
  4750  0C93  0800               	movf	0,w
  4751  0C94  00AB               	movwf	??_Setting_display
  4752  0C95  082B               	movf	??_Setting_display,w
  4753  0C96  00A4               	movwf	Write1DataHT1621@Dat
  4754  0C97  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  4755  0C98  0084               	movwf	4
  4756  0C99  160A  118A  2000  120A  158A  	fcall	stringdir
  4757  0C9E  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4758  0CA3                     l5158:
  4759                           
  4760                           ;ht1621.c: 543:             Temp_Data = dp[2];
  4761  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  4762  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  4763  0CA5  082A               	movf	Setting_display@dp,w
  4764  0CA6  3E02               	addlw	2
  4765  0CA7  0084               	movwf	4
  4766  0CA8  1383               	bcf	3,7	;select IRP bank0
  4767  0CA9  0800               	movf	0,w
  4768  0CAA  00AB               	movwf	??_Setting_display
  4769  0CAB  082B               	movf	??_Setting_display,w
  4770  0CAC  00AF               	movwf	Setting_display@Temp_Data
  4771  0CAD                     l5160:
  4772                           
  4773                           ;ht1621.c: 545:             Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data]|0
      +                          x80)>>4);
  4774  0CAD  082F               	movf	Setting_display@Temp_Data,w
  4775  0CAE  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4776  0CAF  0084               	movwf	4
  4777  0CB0  3080               	movlw	128
  4778  0CB1  0400               	iorwf	0,w
  4779  0CB2  00AB               	movwf	??_Setting_display
  4780  0CB3  3000               	movlw	0
  4781  0CB4  00AC               	movwf	??_Setting_display+1
  4782  0CB5  3004               	movlw	4
  4783  0CB6  00FF               	movwf	btemp+1
  4784  0CB7                     u4105:
  4785  0CB7  0D2C               	rlf	??_Setting_display+1,w
  4786  0CB8  0CAC               	rrf	??_Setting_display+1,f
  4787  0CB9  0CAB               	rrf	??_Setting_display,f
  4788  0CBA  0BFF               	decfsz	btemp+1,f
  4789  0CBB  2CB7               	goto	u4105
  4790  0CBC  082B               	movf	??_Setting_display,w
  4791  0CBD  00AD               	movwf	??_Setting_display+2
  4792  0CBE  082D               	movf	??_Setting_display+2,w
  4793  0CBF  00A4               	movwf	Write1DataHT1621@Dat
  4794  0CC0  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  4795  0CC1  0084               	movwf	4
  4796  0CC2  160A  118A  2000  120A  158A  	fcall	stringdir
  4797  0CC7  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4798  0CCC                     l5162:
  4799                           
  4800                           ;ht1621.c: 546:             Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  4801  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  4803  0CCE  082F               	movf	Setting_display@Temp_Data,w
  4804  0CCF  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4805  0CD0  0084               	movwf	4
  4806  0CD1  1383               	bcf	3,7	;select IRP bank1
  4807  0CD2  0800               	movf	0,w
  4808  0CD3  00AB               	movwf	??_Setting_display
  4809  0CD4  082B               	movf	??_Setting_display,w
  4810  0CD5  00A4               	movwf	Write1DataHT1621@Dat
  4811  0CD6  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  4812  0CD7  0084               	movwf	4
  4813  0CD8  160A  118A  2000  120A  158A  	fcall	stringdir
  4814  0CDD  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4815  0CE2                     l5164:
  4816                           
  4817                           ;ht1621.c: 547:             Temp_Data = dp[3];
  4818  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4819  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  4820  0CE4  082A               	movf	Setting_display@dp,w
  4821  0CE5  3E03               	addlw	3
  4822  0CE6  0084               	movwf	4
  4823  0CE7  1383               	bcf	3,7	;select IRP bank0
  4824  0CE8  0800               	movf	0,w
  4825  0CE9  00AB               	movwf	??_Setting_display
  4826  0CEA  082B               	movf	??_Setting_display,w
  4827  0CEB  00AF               	movwf	Setting_display@Temp_Data
  4828  0CEC                     l5166:
  4829                           
  4830                           ;ht1621.c: 549:             Write1DataHT1621(HT1621_segtab[6], (LCD_RAM_Tab[Temp_Data]|0
      +                          x80)>>4);
  4831  0CEC  082F               	movf	Setting_display@Temp_Data,w
  4832  0CED  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4833  0CEE  0084               	movwf	4
  4834  0CEF  3080               	movlw	128
  4835  0CF0  0400               	iorwf	0,w
  4836  0CF1  00AB               	movwf	??_Setting_display
  4837  0CF2  3000               	movlw	0
  4838  0CF3  00AC               	movwf	??_Setting_display+1
  4839  0CF4  3004               	movlw	4
  4840  0CF5  00FF               	movwf	btemp+1
  4841  0CF6                     u4115:
  4842  0CF6  0D2C               	rlf	??_Setting_display+1,w
  4843  0CF7  0CAC               	rrf	??_Setting_display+1,f
  4844  0CF8  0CAB               	rrf	??_Setting_display,f
  4845  0CF9  0BFF               	decfsz	btemp+1,f
  4846  0CFA  2CF6               	goto	u4115
  4847  0CFB  082B               	movf	??_Setting_display,w
  4848  0CFC  00AD               	movwf	??_Setting_display+2
  4849  0CFD  082D               	movf	??_Setting_display+2,w
  4850  0CFE  00A4               	movwf	Write1DataHT1621@Dat
  4851  0CFF  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  4852  0D00  0084               	movwf	4
  4853  0D01  160A  118A  2000  120A  158A  	fcall	stringdir
  4854  0D06  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4855  0D0B                     l5168:
  4856                           
  4857                           ;ht1621.c: 550:             Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  4858  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0D0D  082F               	movf	Setting_display@Temp_Data,w
  4861  0D0E  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4862  0D0F  0084               	movwf	4
  4863  0D10  1383               	bcf	3,7	;select IRP bank1
  4864  0D11  0800               	movf	0,w
  4865  0D12  00AB               	movwf	??_Setting_display
  4866  0D13  082B               	movf	??_Setting_display,w
  4867  0D14  00A4               	movwf	Write1DataHT1621@Dat
  4868  0D15  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  4869  0D16  0084               	movwf	4
  4870  0D17  160A  118A  2000  120A  158A  	fcall	stringdir
  4871  0D1C  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4872                           
  4873                           ;ht1621.c: 551:             break;
  4874  0D21  2FFF               	goto	l395
  4875  0D22                     l5170:
  4876                           
  4877                           ;ht1621.c: 553:             Temp_Data= dp[0];
  4878  0D22  082A               	movf	Setting_display@dp,w
  4879  0D23  0084               	movwf	4
  4880  0D24  1383               	bcf	3,7	;select IRP bank0
  4881  0D25  0800               	movf	0,w
  4882  0D26  00AB               	movwf	??_Setting_display
  4883  0D27  082B               	movf	??_Setting_display,w
  4884  0D28  00AF               	movwf	Setting_display@Temp_Data
  4885  0D29                     l5172:
  4886                           
  4887                           ;ht1621.c: 554:             Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4
      +                          );
  4888  0D29  082F               	movf	Setting_display@Temp_Data,w
  4889  0D2A  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4890  0D2B  0084               	movwf	4
  4891  0D2C  0800               	movf	0,w
  4892  0D2D  00AB               	movwf	??_Setting_display
  4893  0D2E  3004               	movlw	4
  4894  0D2F                     u4125:
  4895  0D2F  1003               	clrc
  4896  0D30  0CAB               	rrf	??_Setting_display,f
  4897  0D31  3EFF               	addlw	-1
  4898  0D32  1D03               	skipz
  4899  0D33  2D2F               	goto	u4125
  4900  0D34  082B               	movf	??_Setting_display,w
  4901  0D35  00AC               	movwf	??_Setting_display+1
  4902  0D36  082C               	movf	??_Setting_display+1,w
  4903  0D37  00A4               	movwf	Write1DataHT1621@Dat
  4904  0D38  3001               	movlw	low (_HT1621_segtab-__stringbase)
  4905  0D39  0084               	movwf	4
  4906  0D3A  160A  118A  2000  120A  158A  	fcall	stringdir
  4907  0D3F  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4908  0D44                     l5174:
  4909                           
  4910                           ;ht1621.c: 555:             Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  4911  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0D46  082F               	movf	Setting_display@Temp_Data,w
  4914  0D47  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4915  0D48  0084               	movwf	4
  4916  0D49  1383               	bcf	3,7	;select IRP bank1
  4917  0D4A  0800               	movf	0,w
  4918  0D4B  00AB               	movwf	??_Setting_display
  4919  0D4C  082B               	movf	??_Setting_display,w
  4920  0D4D  00A4               	movwf	Write1DataHT1621@Dat
  4921  0D4E  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  4922  0D4F  0084               	movwf	4
  4923  0D50  160A  118A  2000  120A  158A  	fcall	stringdir
  4924  0D55  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4925                           
  4926                           ;ht1621.c: 556:             Temp_Data = dp[1];
  4927  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0D5C  0A2A               	incf	Setting_display@dp,w
  4930  0D5D  0084               	movwf	4
  4931  0D5E  1383               	bcf	3,7	;select IRP bank0
  4932  0D5F  0800               	movf	0,w
  4933  0D60  00AB               	movwf	??_Setting_display
  4934  0D61  082B               	movf	??_Setting_display,w
  4935  0D62  00AF               	movwf	Setting_display@Temp_Data
  4936  0D63                     l5176:
  4937                           
  4938                           ;ht1621.c: 558:             Write1DataHT1621(HT1621_segtab[2], (LCD_RAM_Tab[Temp_Data]|0
      +                          x80)>>4);
  4939  0D63  082F               	movf	Setting_display@Temp_Data,w
  4940  0D64  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4941  0D65  0084               	movwf	4
  4942  0D66  3080               	movlw	128
  4943  0D67  0400               	iorwf	0,w
  4944  0D68  00AB               	movwf	??_Setting_display
  4945  0D69  3000               	movlw	0
  4946  0D6A  00AC               	movwf	??_Setting_display+1
  4947  0D6B  3004               	movlw	4
  4948  0D6C  00FF               	movwf	btemp+1
  4949  0D6D                     u4135:
  4950  0D6D  0D2C               	rlf	??_Setting_display+1,w
  4951  0D6E  0CAC               	rrf	??_Setting_display+1,f
  4952  0D6F  0CAB               	rrf	??_Setting_display,f
  4953  0D70  0BFF               	decfsz	btemp+1,f
  4954  0D71  2D6D               	goto	u4135
  4955  0D72  082B               	movf	??_Setting_display,w
  4956  0D73  00AD               	movwf	??_Setting_display+2
  4957  0D74  082D               	movf	??_Setting_display+2,w
  4958  0D75  00A4               	movwf	Write1DataHT1621@Dat
  4959  0D76  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  4960  0D77  0084               	movwf	4
  4961  0D78  160A  118A  2000  120A  158A  	fcall	stringdir
  4962  0D7D  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4963  0D82                     l5178:
  4964                           
  4965                           ;ht1621.c: 559:             Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  4966  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  4967  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  4968  0D84  082F               	movf	Setting_display@Temp_Data,w
  4969  0D85  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4970  0D86  0084               	movwf	4
  4971  0D87  1383               	bcf	3,7	;select IRP bank1
  4972  0D88  0800               	movf	0,w
  4973  0D89  00AB               	movwf	??_Setting_display
  4974  0D8A  082B               	movf	??_Setting_display,w
  4975  0D8B  00A4               	movwf	Write1DataHT1621@Dat
  4976  0D8C  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  4977  0D8D  0084               	movwf	4
  4978  0D8E  160A  118A  2000  120A  158A  	fcall	stringdir
  4979  0D93  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  4980  0D98                     l5180:
  4981                           
  4982                           ;ht1621.c: 560:             Temp_Data = dp[2];
  4983  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0D9A  082A               	movf	Setting_display@dp,w
  4986  0D9B  3E02               	addlw	2
  4987  0D9C  0084               	movwf	4
  4988  0D9D  1383               	bcf	3,7	;select IRP bank0
  4989  0D9E  0800               	movf	0,w
  4990  0D9F  00AB               	movwf	??_Setting_display
  4991  0DA0  082B               	movf	??_Setting_display,w
  4992  0DA1  00AF               	movwf	Setting_display@Temp_Data
  4993  0DA2                     l5182:
  4994                           
  4995                           ;ht1621.c: 562:             Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data])>
      +                          >4);
  4996  0DA2  082F               	movf	Setting_display@Temp_Data,w
  4997  0DA3  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  4998  0DA4  0084               	movwf	4
  4999  0DA5  0800               	movf	0,w
  5000  0DA6  00AB               	movwf	??_Setting_display
  5001  0DA7  3004               	movlw	4
  5002  0DA8                     u4145:
  5003  0DA8  1003               	clrc
  5004  0DA9  0CAB               	rrf	??_Setting_display,f
  5005  0DAA  3EFF               	addlw	-1
  5006  0DAB  1D03               	skipz
  5007  0DAC  2DA8               	goto	u4145
  5008  0DAD  082B               	movf	??_Setting_display,w
  5009  0DAE  00AC               	movwf	??_Setting_display+1
  5010  0DAF  082C               	movf	??_Setting_display+1,w
  5011  0DB0  00A4               	movwf	Write1DataHT1621@Dat
  5012  0DB1  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  5013  0DB2  0084               	movwf	4
  5014  0DB3  160A  118A  2000  120A  158A  	fcall	stringdir
  5015  0DB8  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5016  0DBD                     l5184:
  5017                           
  5018                           ;ht1621.c: 563:             Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5019  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0DBF  082F               	movf	Setting_display@Temp_Data,w
  5022  0DC0  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5023  0DC1  0084               	movwf	4
  5024  0DC2  1383               	bcf	3,7	;select IRP bank1
  5025  0DC3  0800               	movf	0,w
  5026  0DC4  00AB               	movwf	??_Setting_display
  5027  0DC5  082B               	movf	??_Setting_display,w
  5028  0DC6  00A4               	movwf	Write1DataHT1621@Dat
  5029  0DC7  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  5030  0DC8  0084               	movwf	4
  5031  0DC9  160A  118A  2000  120A  158A  	fcall	stringdir
  5032  0DCE  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5033  0DD3                     l5186:
  5034                           
  5035                           ;ht1621.c: 564:             Temp_Data = dp[3];
  5036  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0DD5  082A               	movf	Setting_display@dp,w
  5039  0DD6  3E03               	addlw	3
  5040  0DD7  0084               	movwf	4
  5041  0DD8  1383               	bcf	3,7	;select IRP bank0
  5042  0DD9  0800               	movf	0,w
  5043  0DDA  00AB               	movwf	??_Setting_display
  5044  0DDB  082B               	movf	??_Setting_display,w
  5045  0DDC  00AF               	movwf	Setting_display@Temp_Data
  5046  0DDD                     l5188:
  5047                           
  5048                           ;ht1621.c: 566:             Write1DataHT1621(HT1621_segtab[6], (LCD_RAM_Tab[Temp_Data])>
      +                          >4);
  5049  0DDD  082F               	movf	Setting_display@Temp_Data,w
  5050  0DDE  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5051  0DDF  0084               	movwf	4
  5052  0DE0  0800               	movf	0,w
  5053  0DE1  00AB               	movwf	??_Setting_display
  5054  0DE2  3004               	movlw	4
  5055  0DE3                     u4155:
  5056  0DE3  1003               	clrc
  5057  0DE4  0CAB               	rrf	??_Setting_display,f
  5058  0DE5  3EFF               	addlw	-1
  5059  0DE6  1D03               	skipz
  5060  0DE7  2DE3               	goto	u4155
  5061  0DE8  082B               	movf	??_Setting_display,w
  5062  0DE9  00AC               	movwf	??_Setting_display+1
  5063  0DEA  082C               	movf	??_Setting_display+1,w
  5064  0DEB  00A4               	movwf	Write1DataHT1621@Dat
  5065  0DEC  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  5066  0DED  0084               	movwf	4
  5067  0DEE  160A  118A  2000  120A  158A  	fcall	stringdir
  5068  0DF3  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5069  0DF8                     l5190:
  5070                           
  5071                           ;ht1621.c: 567:             Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5072  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0DFA  082F               	movf	Setting_display@Temp_Data,w
  5075  0DFB  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5076  0DFC  0084               	movwf	4
  5077  0DFD  1383               	bcf	3,7	;select IRP bank1
  5078  0DFE  0800               	movf	0,w
  5079  0DFF  00AB               	movwf	??_Setting_display
  5080  0E00  082B               	movf	??_Setting_display,w
  5081  0E01  00A4               	movwf	Write1DataHT1621@Dat
  5082  0E02  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  5083  0E03  0084               	movwf	4
  5084  0E04  160A  118A  2000  120A  158A  	fcall	stringdir
  5085  0E09  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5086                           
  5087                           ;ht1621.c: 568:             break;
  5088  0E0E  2FFF               	goto	l395
  5089  0E0F                     l5192:
  5090                           
  5091                           ;ht1621.c: 570:             Temp_Data= dp[0];
  5092  0E0F  082A               	movf	Setting_display@dp,w
  5093  0E10  0084               	movwf	4
  5094  0E11  1383               	bcf	3,7	;select IRP bank0
  5095  0E12  0800               	movf	0,w
  5096  0E13  00AB               	movwf	??_Setting_display
  5097  0E14  082B               	movf	??_Setting_display,w
  5098  0E15  00AF               	movwf	Setting_display@Temp_Data
  5099  0E16                     l5194:
  5100                           
  5101                           ;ht1621.c: 571:             Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4
      +                          );
  5102  0E16  082F               	movf	Setting_display@Temp_Data,w
  5103  0E17  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5104  0E18  0084               	movwf	4
  5105  0E19  0800               	movf	0,w
  5106  0E1A  00AB               	movwf	??_Setting_display
  5107  0E1B  3004               	movlw	4
  5108  0E1C                     u4165:
  5109  0E1C  1003               	clrc
  5110  0E1D  0CAB               	rrf	??_Setting_display,f
  5111  0E1E  3EFF               	addlw	-1
  5112  0E1F  1D03               	skipz
  5113  0E20  2E1C               	goto	u4165
  5114  0E21  082B               	movf	??_Setting_display,w
  5115  0E22  00AC               	movwf	??_Setting_display+1
  5116  0E23  082C               	movf	??_Setting_display+1,w
  5117  0E24  00A4               	movwf	Write1DataHT1621@Dat
  5118  0E25  3001               	movlw	low (_HT1621_segtab-__stringbase)
  5119  0E26  0084               	movwf	4
  5120  0E27  160A  118A  2000  120A  158A  	fcall	stringdir
  5121  0E2C  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5122  0E31                     l5196:
  5123                           
  5124                           ;ht1621.c: 572:             Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5125  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0E33  082F               	movf	Setting_display@Temp_Data,w
  5128  0E34  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5129  0E35  0084               	movwf	4
  5130  0E36  1383               	bcf	3,7	;select IRP bank1
  5131  0E37  0800               	movf	0,w
  5132  0E38  00AB               	movwf	??_Setting_display
  5133  0E39  082B               	movf	??_Setting_display,w
  5134  0E3A  00A4               	movwf	Write1DataHT1621@Dat
  5135  0E3B  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  5136  0E3C  0084               	movwf	4
  5137  0E3D  160A  118A  2000  120A  158A  	fcall	stringdir
  5138  0E42  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5139                           
  5140                           ;ht1621.c: 573:             Temp_Data = dp[1];
  5141  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0E49  0A2A               	incf	Setting_display@dp,w
  5144  0E4A  0084               	movwf	4
  5145  0E4B  1383               	bcf	3,7	;select IRP bank0
  5146  0E4C  0800               	movf	0,w
  5147  0E4D  00AB               	movwf	??_Setting_display
  5148  0E4E  082B               	movf	??_Setting_display,w
  5149  0E4F  00AF               	movwf	Setting_display@Temp_Data
  5150  0E50                     l5198:
  5151                           
  5152                           ;ht1621.c: 575:             Write1DataHT1621(HT1621_segtab[2], (LCD_RAM_Tab[Temp_Data])>
      +                          >4);
  5153  0E50  082F               	movf	Setting_display@Temp_Data,w
  5154  0E51  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5155  0E52  0084               	movwf	4
  5156  0E53  0800               	movf	0,w
  5157  0E54  00AB               	movwf	??_Setting_display
  5158  0E55  3004               	movlw	4
  5159  0E56                     u4175:
  5160  0E56  1003               	clrc
  5161  0E57  0CAB               	rrf	??_Setting_display,f
  5162  0E58  3EFF               	addlw	-1
  5163  0E59  1D03               	skipz
  5164  0E5A  2E56               	goto	u4175
  5165  0E5B  082B               	movf	??_Setting_display,w
  5166  0E5C  00AC               	movwf	??_Setting_display+1
  5167  0E5D  082C               	movf	??_Setting_display+1,w
  5168  0E5E  00A4               	movwf	Write1DataHT1621@Dat
  5169  0E5F  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  5170  0E60  0084               	movwf	4
  5171  0E61  160A  118A  2000  120A  158A  	fcall	stringdir
  5172  0E66  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5173  0E6B                     l5200:
  5174                           
  5175                           ;ht1621.c: 576:             Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5176  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  5177  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  5178  0E6D  082F               	movf	Setting_display@Temp_Data,w
  5179  0E6E  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5180  0E6F  0084               	movwf	4
  5181  0E70  1383               	bcf	3,7	;select IRP bank1
  5182  0E71  0800               	movf	0,w
  5183  0E72  00AB               	movwf	??_Setting_display
  5184  0E73  082B               	movf	??_Setting_display,w
  5185  0E74  00A4               	movwf	Write1DataHT1621@Dat
  5186  0E75  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  5187  0E76  0084               	movwf	4
  5188  0E77  160A  118A  2000  120A  158A  	fcall	stringdir
  5189  0E7C  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5190  0E81                     l5202:
  5191                           
  5192                           ;ht1621.c: 577:             Temp_Data = dp[2];
  5193  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  5194  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  5195  0E83  082A               	movf	Setting_display@dp,w
  5196  0E84  3E02               	addlw	2
  5197  0E85  0084               	movwf	4
  5198  0E86  1383               	bcf	3,7	;select IRP bank0
  5199  0E87  0800               	movf	0,w
  5200  0E88  00AB               	movwf	??_Setting_display
  5201  0E89  082B               	movf	??_Setting_display,w
  5202  0E8A  00AF               	movwf	Setting_display@Temp_Data
  5203  0E8B                     l5204:
  5204                           
  5205                           ;ht1621.c: 579:             Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data]|0
      +                          x80)>>4);
  5206  0E8B  082F               	movf	Setting_display@Temp_Data,w
  5207  0E8C  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5208  0E8D  0084               	movwf	4
  5209  0E8E  3080               	movlw	128
  5210  0E8F  0400               	iorwf	0,w
  5211  0E90  00AB               	movwf	??_Setting_display
  5212  0E91  3000               	movlw	0
  5213  0E92  00AC               	movwf	??_Setting_display+1
  5214  0E93  3004               	movlw	4
  5215  0E94  00FF               	movwf	btemp+1
  5216  0E95                     u4185:
  5217  0E95  0D2C               	rlf	??_Setting_display+1,w
  5218  0E96  0CAC               	rrf	??_Setting_display+1,f
  5219  0E97  0CAB               	rrf	??_Setting_display,f
  5220  0E98  0BFF               	decfsz	btemp+1,f
  5221  0E99  2E95               	goto	u4185
  5222  0E9A  082B               	movf	??_Setting_display,w
  5223  0E9B  00AD               	movwf	??_Setting_display+2
  5224  0E9C  082D               	movf	??_Setting_display+2,w
  5225  0E9D  00A4               	movwf	Write1DataHT1621@Dat
  5226  0E9E  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  5227  0E9F  0084               	movwf	4
  5228  0EA0  160A  118A  2000  120A  158A  	fcall	stringdir
  5229  0EA5  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5230  0EAA                     l5206:
  5231                           
  5232                           ;ht1621.c: 580:             Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5233  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0EAC  082F               	movf	Setting_display@Temp_Data,w
  5236  0EAD  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5237  0EAE  0084               	movwf	4
  5238  0EAF  1383               	bcf	3,7	;select IRP bank1
  5239  0EB0  0800               	movf	0,w
  5240  0EB1  00AB               	movwf	??_Setting_display
  5241  0EB2  082B               	movf	??_Setting_display,w
  5242  0EB3  00A4               	movwf	Write1DataHT1621@Dat
  5243  0EB4  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  5244  0EB5  0084               	movwf	4
  5245  0EB6  160A  118A  2000  120A  158A  	fcall	stringdir
  5246  0EBB  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5247  0EC0                     l5208:
  5248                           
  5249                           ;ht1621.c: 581:             Temp_Data = dp[3];
  5250  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0EC2  082A               	movf	Setting_display@dp,w
  5253  0EC3  3E03               	addlw	3
  5254  0EC4  0084               	movwf	4
  5255  0EC5  1383               	bcf	3,7	;select IRP bank0
  5256  0EC6  0800               	movf	0,w
  5257  0EC7  00AB               	movwf	??_Setting_display
  5258  0EC8  082B               	movf	??_Setting_display,w
  5259  0EC9  00AF               	movwf	Setting_display@Temp_Data
  5260  0ECA                     l5210:
  5261                           
  5262                           ;ht1621.c: 583:             Write1DataHT1621(HT1621_segtab[6], (LCD_RAM_Tab[Temp_Data])>
      +                          >4);
  5263  0ECA  082F               	movf	Setting_display@Temp_Data,w
  5264  0ECB  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5265  0ECC  0084               	movwf	4
  5266  0ECD  0800               	movf	0,w
  5267  0ECE  00AB               	movwf	??_Setting_display
  5268  0ECF  3004               	movlw	4
  5269  0ED0                     u4195:
  5270  0ED0  1003               	clrc
  5271  0ED1  0CAB               	rrf	??_Setting_display,f
  5272  0ED2  3EFF               	addlw	-1
  5273  0ED3  1D03               	skipz
  5274  0ED4  2ED0               	goto	u4195
  5275  0ED5  082B               	movf	??_Setting_display,w
  5276  0ED6  00AC               	movwf	??_Setting_display+1
  5277  0ED7  082C               	movf	??_Setting_display+1,w
  5278  0ED8  00A4               	movwf	Write1DataHT1621@Dat
  5279  0ED9  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  5280  0EDA  0084               	movwf	4
  5281  0EDB  160A  118A  2000  120A  158A  	fcall	stringdir
  5282  0EE0  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5283  0EE5                     l5212:
  5284                           
  5285                           ;ht1621.c: 584:             Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5286  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  5287  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0EE7  082F               	movf	Setting_display@Temp_Data,w
  5289  0EE8  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5290  0EE9  0084               	movwf	4
  5291  0EEA  1383               	bcf	3,7	;select IRP bank1
  5292  0EEB  0800               	movf	0,w
  5293  0EEC  00AB               	movwf	??_Setting_display
  5294  0EED  082B               	movf	??_Setting_display,w
  5295  0EEE  00A4               	movwf	Write1DataHT1621@Dat
  5296  0EEF  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  5297  0EF0  0084               	movwf	4
  5298  0EF1  160A  118A  2000  120A  158A  	fcall	stringdir
  5299  0EF6  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5300                           
  5301                           ;ht1621.c: 585:             break;
  5302  0EFB  2FFF               	goto	l395
  5303  0EFC                     l5214:
  5304                           
  5305                           ;ht1621.c: 587:             Temp_Data= dp[0];
  5306  0EFC  082A               	movf	Setting_display@dp,w
  5307  0EFD  0084               	movwf	4
  5308  0EFE  1383               	bcf	3,7	;select IRP bank0
  5309  0EFF  0800               	movf	0,w
  5310  0F00  00AB               	movwf	??_Setting_display
  5311  0F01  082B               	movf	??_Setting_display,w
  5312  0F02  00AF               	movwf	Setting_display@Temp_Data
  5313  0F03                     l5216:
  5314                           
  5315                           ;ht1621.c: 588:             Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4
      +                          );
  5316  0F03  082F               	movf	Setting_display@Temp_Data,w
  5317  0F04  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5318  0F05  0084               	movwf	4
  5319  0F06  0800               	movf	0,w
  5320  0F07  00AB               	movwf	??_Setting_display
  5321  0F08  3004               	movlw	4
  5322  0F09                     u4205:
  5323  0F09  1003               	clrc
  5324  0F0A  0CAB               	rrf	??_Setting_display,f
  5325  0F0B  3EFF               	addlw	-1
  5326  0F0C  1D03               	skipz
  5327  0F0D  2F09               	goto	u4205
  5328  0F0E  082B               	movf	??_Setting_display,w
  5329  0F0F  00AC               	movwf	??_Setting_display+1
  5330  0F10  082C               	movf	??_Setting_display+1,w
  5331  0F11  00A4               	movwf	Write1DataHT1621@Dat
  5332  0F12  3001               	movlw	low (_HT1621_segtab-__stringbase)
  5333  0F13  0084               	movwf	4
  5334  0F14  160A  118A  2000  120A  158A  	fcall	stringdir
  5335  0F19  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5336  0F1E                     l5218:
  5337                           
  5338                           ;ht1621.c: 589:             Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5339  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0F20  082F               	movf	Setting_display@Temp_Data,w
  5342  0F21  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5343  0F22  0084               	movwf	4
  5344  0F23  1383               	bcf	3,7	;select IRP bank1
  5345  0F24  0800               	movf	0,w
  5346  0F25  00AB               	movwf	??_Setting_display
  5347  0F26  082B               	movf	??_Setting_display,w
  5348  0F27  00A4               	movwf	Write1DataHT1621@Dat
  5349  0F28  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  5350  0F29  0084               	movwf	4
  5351  0F2A  160A  118A  2000  120A  158A  	fcall	stringdir
  5352  0F2F  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5353                           
  5354                           ;ht1621.c: 590:             Temp_Data = dp[1];
  5355  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  5356  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  5357  0F36  0A2A               	incf	Setting_display@dp,w
  5358  0F37  0084               	movwf	4
  5359  0F38  1383               	bcf	3,7	;select IRP bank0
  5360  0F39  0800               	movf	0,w
  5361  0F3A  00AB               	movwf	??_Setting_display
  5362  0F3B  082B               	movf	??_Setting_display,w
  5363  0F3C  00AF               	movwf	Setting_display@Temp_Data
  5364  0F3D                     l5220:
  5365                           
  5366                           ;ht1621.c: 592:             Write1DataHT1621(HT1621_segtab[2], (LCD_RAM_Tab[Temp_Data])>
      +                          >4);
  5367  0F3D  082F               	movf	Setting_display@Temp_Data,w
  5368  0F3E  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5369  0F3F  0084               	movwf	4
  5370  0F40  0800               	movf	0,w
  5371  0F41  00AB               	movwf	??_Setting_display
  5372  0F42  3004               	movlw	4
  5373  0F43                     u4215:
  5374  0F43  1003               	clrc
  5375  0F44  0CAB               	rrf	??_Setting_display,f
  5376  0F45  3EFF               	addlw	-1
  5377  0F46  1D03               	skipz
  5378  0F47  2F43               	goto	u4215
  5379  0F48  082B               	movf	??_Setting_display,w
  5380  0F49  00AC               	movwf	??_Setting_display+1
  5381  0F4A  082C               	movf	??_Setting_display+1,w
  5382  0F4B  00A4               	movwf	Write1DataHT1621@Dat
  5383  0F4C  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  5384  0F4D  0084               	movwf	4
  5385  0F4E  160A  118A  2000  120A  158A  	fcall	stringdir
  5386  0F53  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5387  0F58                     l5222:
  5388                           
  5389                           ;ht1621.c: 593:             Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5390  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0F5A  082F               	movf	Setting_display@Temp_Data,w
  5393  0F5B  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5394  0F5C  0084               	movwf	4
  5395  0F5D  1383               	bcf	3,7	;select IRP bank1
  5396  0F5E  0800               	movf	0,w
  5397  0F5F  00AB               	movwf	??_Setting_display
  5398  0F60  082B               	movf	??_Setting_display,w
  5399  0F61  00A4               	movwf	Write1DataHT1621@Dat
  5400  0F62  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  5401  0F63  0084               	movwf	4
  5402  0F64  160A  118A  2000  120A  158A  	fcall	stringdir
  5403  0F69  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5404  0F6E                     l5224:
  5405                           
  5406                           ;ht1621.c: 594:             Temp_Data = dp[2];
  5407  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0F70  082A               	movf	Setting_display@dp,w
  5410  0F71  3E02               	addlw	2
  5411  0F72  0084               	movwf	4
  5412  0F73  1383               	bcf	3,7	;select IRP bank0
  5413  0F74  0800               	movf	0,w
  5414  0F75  00AB               	movwf	??_Setting_display
  5415  0F76  082B               	movf	??_Setting_display,w
  5416  0F77  00AF               	movwf	Setting_display@Temp_Data
  5417  0F78                     l5226:
  5418                           
  5419                           ;ht1621.c: 596:             Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data])>
      +                          >4);
  5420  0F78  082F               	movf	Setting_display@Temp_Data,w
  5421  0F79  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5422  0F7A  0084               	movwf	4
  5423  0F7B  0800               	movf	0,w
  5424  0F7C  00AB               	movwf	??_Setting_display
  5425  0F7D  3004               	movlw	4
  5426  0F7E                     u4225:
  5427  0F7E  1003               	clrc
  5428  0F7F  0CAB               	rrf	??_Setting_display,f
  5429  0F80  3EFF               	addlw	-1
  5430  0F81  1D03               	skipz
  5431  0F82  2F7E               	goto	u4225
  5432  0F83  082B               	movf	??_Setting_display,w
  5433  0F84  00AC               	movwf	??_Setting_display+1
  5434  0F85  082C               	movf	??_Setting_display+1,w
  5435  0F86  00A4               	movwf	Write1DataHT1621@Dat
  5436  0F87  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  5437  0F88  0084               	movwf	4
  5438  0F89  160A  118A  2000  120A  158A  	fcall	stringdir
  5439  0F8E  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5440  0F93                     l5228:
  5441                           
  5442                           ;ht1621.c: 597:             Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5443  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0F95  082F               	movf	Setting_display@Temp_Data,w
  5446  0F96  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5447  0F97  0084               	movwf	4
  5448  0F98  1383               	bcf	3,7	;select IRP bank1
  5449  0F99  0800               	movf	0,w
  5450  0F9A  00AB               	movwf	??_Setting_display
  5451  0F9B  082B               	movf	??_Setting_display,w
  5452  0F9C  00A4               	movwf	Write1DataHT1621@Dat
  5453  0F9D  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  5454  0F9E  0084               	movwf	4
  5455  0F9F  160A  118A  2000  120A  158A  	fcall	stringdir
  5456  0FA4  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5457  0FA9                     l5230:
  5458                           
  5459                           ;ht1621.c: 598:             Temp_Data = dp[3];
  5460  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0FAB  082A               	movf	Setting_display@dp,w
  5463  0FAC  3E03               	addlw	3
  5464  0FAD  0084               	movwf	4
  5465  0FAE  1383               	bcf	3,7	;select IRP bank0
  5466  0FAF  0800               	movf	0,w
  5467  0FB0  00AB               	movwf	??_Setting_display
  5468  0FB1  082B               	movf	??_Setting_display,w
  5469  0FB2  00AF               	movwf	Setting_display@Temp_Data
  5470  0FB3                     l5232:
  5471                           
  5472                           ;ht1621.c: 600:             Write1DataHT1621(HT1621_segtab[6], (LCD_RAM_Tab[Temp_Data]|0
      +                          x80)>>4);
  5473  0FB3  082F               	movf	Setting_display@Temp_Data,w
  5474  0FB4  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5475  0FB5  0084               	movwf	4
  5476  0FB6  3080               	movlw	128
  5477  0FB7  0400               	iorwf	0,w
  5478  0FB8  00AB               	movwf	??_Setting_display
  5479  0FB9  3000               	movlw	0
  5480  0FBA  00AC               	movwf	??_Setting_display+1
  5481  0FBB  3004               	movlw	4
  5482  0FBC  00FF               	movwf	btemp+1
  5483  0FBD                     u4235:
  5484  0FBD  0D2C               	rlf	??_Setting_display+1,w
  5485  0FBE  0CAC               	rrf	??_Setting_display+1,f
  5486  0FBF  0CAB               	rrf	??_Setting_display,f
  5487  0FC0  0BFF               	decfsz	btemp+1,f
  5488  0FC1  2FBD               	goto	u4235
  5489  0FC2  082B               	movf	??_Setting_display,w
  5490  0FC3  00AD               	movwf	??_Setting_display+2
  5491  0FC4  082D               	movf	??_Setting_display+2,w
  5492  0FC5  00A4               	movwf	Write1DataHT1621@Dat
  5493  0FC6  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  5494  0FC7  0084               	movwf	4
  5495  0FC8  160A  118A  2000  120A  158A  	fcall	stringdir
  5496  0FCD  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5497  0FD2                     l5234:
  5498                           
  5499                           ;ht1621.c: 601:             Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0
      +                          );
  5500  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0FD4  082F               	movf	Setting_display@Temp_Data,w
  5503  0FD5  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5504  0FD6  0084               	movwf	4
  5505  0FD7  1383               	bcf	3,7	;select IRP bank1
  5506  0FD8  0800               	movf	0,w
  5507  0FD9  00AB               	movwf	??_Setting_display
  5508  0FDA  082B               	movf	??_Setting_display,w
  5509  0FDB  00A4               	movwf	Write1DataHT1621@Dat
  5510  0FDC  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  5511  0FDD  0084               	movwf	4
  5512  0FDE  160A  118A  2000  120A  158A  	fcall	stringdir
  5513  0FE3  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5514                           
  5515                           ;ht1621.c: 602:             break;
  5516  0FE8  2FFF               	goto	l395
  5517  0FE9                     l5238:
  5518  0FE9  082E               	movf	Setting_display@cursor,w
  5519  0FEA  00AB               	movwf	??_Setting_display
  5520  0FEB  01AC               	clrf	??_Setting_display+1
  5521                           
  5522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5523                           ; Switch size 1, requested type "simple"
  5524                           ; Number of cases is 1, Range of values is 0 to 0
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; simple_byte            4     3 (average)
  5528                           ; direct_byte           11     8 (fixed)
  5529                           ; jumptable            260     6 (fixed)
  5530                           ;	Chosen strategy is simple_byte
  5531  0FEC  082C               	movf	??_Setting_display+1,w
  5532  0FED  3A00               	xorlw	0	; case 0
  5533  0FEE  1903               	skipnz
  5534  0FEF  2FF1               	goto	l6274
  5535  0FF0  2FFF               	goto	l395
  5536  0FF1                     l6274:
  5537                           
  5538                           ; Switch size 1, requested type "simple"
  5539                           ; Number of cases is 4, Range of values is 0 to 3
  5540                           ; switch strategies available:
  5541                           ; Name         Instructions Cycles
  5542                           ; simple_byte           13     7 (average)
  5543                           ; direct_byte           20     8 (fixed)
  5544                           ; jumptable            260     6 (fixed)
  5545                           ;	Chosen strategy is simple_byte
  5546  0FF1  082B               	movf	??_Setting_display,w
  5547  0FF2  3A00               	xorlw	0	; case 0
  5548  0FF3  1903               	skipnz
  5549  0FF4  2C2D               	goto	l5148
  5550  0FF5  3A01               	xorlw	1	; case 1
  5551  0FF6  1903               	skipnz
  5552  0FF7  2D22               	goto	l5170
  5553  0FF8  3A03               	xorlw	3	; case 2
  5554  0FF9  1903               	skipnz
  5555  0FFA  2E0F               	goto	l5192
  5556  0FFB  3A01               	xorlw	1	; case 3
  5557  0FFC  1903               	skipnz
  5558  0FFD  2EFC               	goto	l5214
  5559  0FFE  2FFF               	goto	l395
  5560  0FFF                     l395:
  5561  0FFF  0008               	return
  5562  1000                     __end_of_Setting_display:
  5563                           
  5564                           	psect	text15
  5565  09E3                     __ptext15:	
  5566 ;; *************** function _IR_data_display *****************
  5567 ;; Defined at:
  5568 ;;		line 511 in file "ht1621.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  data            2   10[BANK0 ] unsigned int 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  Temp_Data       1   15[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         0       2       0       0       0
  5583 ;;      Locals:         0       1       0       0       0
  5584 ;;      Temps:          0       3       0       0       0
  5585 ;;      Totals:         0       6       0       0       0
  5586 ;;Total ram usage:        6 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 5
  5589 ;; This function calls:
  5590 ;;		_Write1DataHT1621
  5591 ;; This function is called by:
  5592 ;;		_main
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function _IR_data_display
  5598  09E3                     _IR_data_display:
  5599  09E3                     l5122:	
  5600                           ;incstack = 0
  5601                           ; Regs used in _IR_data_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5602                           
  5603                           
  5604                           ;ht1621.c: 512:     unsigned char Temp_Data;;ht1621.c: 513:     Temp_Data = data/4096;
  5605  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  5606  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  5607  09E5  082B               	movf	IR_data_display@data+1,w
  5608  09E6  00AD               	movwf	??_IR_data_display+1
  5609  09E7  082A               	movf	IR_data_display@data,w
  5610  09E8  00AC               	movwf	??_IR_data_display
  5611  09E9  0E2D               	swapf	??_IR_data_display+1,w
  5612  09EA  390F               	andlw	15
  5613  09EB  00AC               	movwf	??_IR_data_display
  5614  09EC  01AD               	clrf	??_IR_data_display+1
  5615  09ED  082C               	movf	??_IR_data_display,w
  5616  09EE  00AE               	movwf	??_IR_data_display+2
  5617  09EF  082E               	movf	??_IR_data_display+2,w
  5618  09F0  00AF               	movwf	IR_data_display@Temp_Data
  5619  09F1                     l5124:
  5620                           
  5621                           ;ht1621.c: 515:     Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4);
  5622  09F1  082F               	movf	IR_data_display@Temp_Data,w
  5623  09F2  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5624  09F3  0084               	movwf	4
  5625  09F4  1383               	bcf	3,7	;select IRP bank1
  5626  09F5  0800               	movf	0,w
  5627  09F6  00AC               	movwf	??_IR_data_display
  5628  09F7  3004               	movlw	4
  5629  09F8                     u4035:
  5630  09F8  1003               	clrc
  5631  09F9  0CAC               	rrf	??_IR_data_display,f
  5632  09FA  3EFF               	addlw	-1
  5633  09FB  1D03               	skipz
  5634  09FC  29F8               	goto	u4035
  5635  09FD  082C               	movf	??_IR_data_display,w
  5636  09FE  00AD               	movwf	??_IR_data_display+1
  5637  09FF  082D               	movf	??_IR_data_display+1,w
  5638  0A00  00A4               	movwf	Write1DataHT1621@Dat
  5639  0A01  3001               	movlw	low (_HT1621_segtab-__stringbase)
  5640  0A02  0084               	movwf	4
  5641  0A03  160A  118A  2000  120A  158A  	fcall	stringdir
  5642  0A08  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5643  0A0D                     l5126:
  5644                           
  5645                           ;ht1621.c: 516:  Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0);
  5646  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0A0F  082F               	movf	IR_data_display@Temp_Data,w
  5649  0A10  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5650  0A11  0084               	movwf	4
  5651  0A12  1383               	bcf	3,7	;select IRP bank1
  5652  0A13  0800               	movf	0,w
  5653  0A14  00AC               	movwf	??_IR_data_display
  5654  0A15  082C               	movf	??_IR_data_display,w
  5655  0A16  00A4               	movwf	Write1DataHT1621@Dat
  5656  0A17  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  5657  0A18  0084               	movwf	4
  5658  0A19  160A  118A  2000  120A  158A  	fcall	stringdir
  5659  0A1E  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5660  0A23                     l5128:
  5661                           
  5662                           ;ht1621.c: 517:     Temp_Data = data%4096/256;
  5663  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  5664  0A24  1303               	bcf	3,6	;RP1=0, select bank0
  5665  0A25  082B               	movf	IR_data_display@data+1,w
  5666  0A26  390F               	andlw	15
  5667  0A27  00AC               	movwf	??_IR_data_display
  5668  0A28  082C               	movf	??_IR_data_display,w
  5669  0A29  00AF               	movwf	IR_data_display@Temp_Data
  5670  0A2A                     l5130:
  5671                           
  5672                           ;ht1621.c: 519:     Write1DataHT1621(HT1621_segtab[2], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  5673  0A2A  082F               	movf	IR_data_display@Temp_Data,w
  5674  0A2B  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5675  0A2C  0084               	movwf	4
  5676  0A2D  3080               	movlw	128
  5677  0A2E  1383               	bcf	3,7	;select IRP bank1
  5678  0A2F  0400               	iorwf	0,w
  5679  0A30  00AC               	movwf	??_IR_data_display
  5680  0A31  3000               	movlw	0
  5681  0A32  00AD               	movwf	??_IR_data_display+1
  5682  0A33  3004               	movlw	4
  5683  0A34  00FF               	movwf	btemp+1
  5684  0A35                     u4045:
  5685  0A35  0D2D               	rlf	??_IR_data_display+1,w
  5686  0A36  0CAD               	rrf	??_IR_data_display+1,f
  5687  0A37  0CAC               	rrf	??_IR_data_display,f
  5688  0A38  0BFF               	decfsz	btemp+1,f
  5689  0A39  2A35               	goto	u4045
  5690  0A3A  082C               	movf	??_IR_data_display,w
  5691  0A3B  00AE               	movwf	??_IR_data_display+2
  5692  0A3C  082E               	movf	??_IR_data_display+2,w
  5693  0A3D  00A4               	movwf	Write1DataHT1621@Dat
  5694  0A3E  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  5695  0A3F  0084               	movwf	4
  5696  0A40  160A  118A  2000  120A  158A  	fcall	stringdir
  5697  0A45  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5698  0A4A                     l5132:
  5699                           
  5700                           ;ht1621.c: 520:  Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0);
  5701  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  5702  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0A4C  082F               	movf	IR_data_display@Temp_Data,w
  5704  0A4D  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5705  0A4E  0084               	movwf	4
  5706  0A4F  1383               	bcf	3,7	;select IRP bank1
  5707  0A50  0800               	movf	0,w
  5708  0A51  00AC               	movwf	??_IR_data_display
  5709  0A52  082C               	movf	??_IR_data_display,w
  5710  0A53  00A4               	movwf	Write1DataHT1621@Dat
  5711  0A54  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  5712  0A55  0084               	movwf	4
  5713  0A56  160A  118A  2000  120A  158A  	fcall	stringdir
  5714  0A5B  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5715  0A60                     l5134:
  5716                           
  5717                           ;ht1621.c: 521:     Temp_Data = data%256/16;
  5718  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0A62  082B               	movf	IR_data_display@data+1,w
  5721  0A63  00AD               	movwf	??_IR_data_display+1
  5722  0A64  082A               	movf	IR_data_display@data,w
  5723  0A65  00AC               	movwf	??_IR_data_display
  5724  0A66  3004               	movlw	4
  5725  0A67                     u4055:
  5726  0A67  1003               	clrc
  5727  0A68  0CAD               	rrf	??_IR_data_display+1,f
  5728  0A69  0CAC               	rrf	??_IR_data_display,f
  5729  0A6A  3EFF               	addlw	-1
  5730  0A6B  1D03               	skipz
  5731  0A6C  2A67               	goto	u4055
  5732  0A6D  082C               	movf	??_IR_data_display,w
  5733  0A6E  390F               	andlw	15
  5734  0A6F  00AE               	movwf	??_IR_data_display+2
  5735  0A70  082E               	movf	??_IR_data_display+2,w
  5736  0A71  00AF               	movwf	IR_data_display@Temp_Data
  5737  0A72                     l5136:
  5738                           
  5739                           ;ht1621.c: 523:     Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  5740  0A72  082F               	movf	IR_data_display@Temp_Data,w
  5741  0A73  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5742  0A74  0084               	movwf	4
  5743  0A75  3080               	movlw	128
  5744  0A76  1383               	bcf	3,7	;select IRP bank1
  5745  0A77  0400               	iorwf	0,w
  5746  0A78  00AC               	movwf	??_IR_data_display
  5747  0A79  3000               	movlw	0
  5748  0A7A  00AD               	movwf	??_IR_data_display+1
  5749  0A7B  3004               	movlw	4
  5750  0A7C  00FF               	movwf	btemp+1
  5751  0A7D                     u4065:
  5752  0A7D  0D2D               	rlf	??_IR_data_display+1,w
  5753  0A7E  0CAD               	rrf	??_IR_data_display+1,f
  5754  0A7F  0CAC               	rrf	??_IR_data_display,f
  5755  0A80  0BFF               	decfsz	btemp+1,f
  5756  0A81  2A7D               	goto	u4065
  5757  0A82  082C               	movf	??_IR_data_display,w
  5758  0A83  00AE               	movwf	??_IR_data_display+2
  5759  0A84  082E               	movf	??_IR_data_display+2,w
  5760  0A85  00A4               	movwf	Write1DataHT1621@Dat
  5761  0A86  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  5762  0A87  0084               	movwf	4
  5763  0A88  160A  118A  2000  120A  158A  	fcall	stringdir
  5764  0A8D  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5765  0A92                     l5138:
  5766                           
  5767                           ;ht1621.c: 524:  Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0);
  5768  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  5769  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  5770  0A94  082F               	movf	IR_data_display@Temp_Data,w
  5771  0A95  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5772  0A96  0084               	movwf	4
  5773  0A97  1383               	bcf	3,7	;select IRP bank1
  5774  0A98  0800               	movf	0,w
  5775  0A99  00AC               	movwf	??_IR_data_display
  5776  0A9A  082C               	movf	??_IR_data_display,w
  5777  0A9B  00A4               	movwf	Write1DataHT1621@Dat
  5778  0A9C  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  5779  0A9D  0084               	movwf	4
  5780  0A9E  160A  118A  2000  120A  158A  	fcall	stringdir
  5781  0AA3  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5782                           
  5783                           ;ht1621.c: 525:     Temp_Data = data%16;
  5784  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  5785  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  5786  0AAA  082A               	movf	IR_data_display@data,w
  5787  0AAB  390F               	andlw	15
  5788  0AAC  00AC               	movwf	??_IR_data_display
  5789  0AAD  082C               	movf	??_IR_data_display,w
  5790  0AAE  00AF               	movwf	IR_data_display@Temp_Data
  5791  0AAF                     l5140:
  5792                           
  5793                           ;ht1621.c: 527:     Write1DataHT1621(HT1621_segtab[6], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  5794  0AAF  082F               	movf	IR_data_display@Temp_Data,w
  5795  0AB0  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5796  0AB1  0084               	movwf	4
  5797  0AB2  3080               	movlw	128
  5798  0AB3  1383               	bcf	3,7	;select IRP bank1
  5799  0AB4  0400               	iorwf	0,w
  5800  0AB5  00AC               	movwf	??_IR_data_display
  5801  0AB6  3000               	movlw	0
  5802  0AB7  00AD               	movwf	??_IR_data_display+1
  5803  0AB8  3004               	movlw	4
  5804  0AB9  00FF               	movwf	btemp+1
  5805  0ABA                     u4075:
  5806  0ABA  0D2D               	rlf	??_IR_data_display+1,w
  5807  0ABB  0CAD               	rrf	??_IR_data_display+1,f
  5808  0ABC  0CAC               	rrf	??_IR_data_display,f
  5809  0ABD  0BFF               	decfsz	btemp+1,f
  5810  0ABE  2ABA               	goto	u4075
  5811  0ABF  082C               	movf	??_IR_data_display,w
  5812  0AC0  00AE               	movwf	??_IR_data_display+2
  5813  0AC1  082E               	movf	??_IR_data_display+2,w
  5814  0AC2  00A4               	movwf	Write1DataHT1621@Dat
  5815  0AC3  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  5816  0AC4  0084               	movwf	4
  5817  0AC5  160A  118A  2000  120A  158A  	fcall	stringdir
  5818  0ACA  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5819  0ACF                     l5142:
  5820                           
  5821                           ;ht1621.c: 528:  Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0);
  5822  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0AD1  082F               	movf	IR_data_display@Temp_Data,w
  5825  0AD2  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  5826  0AD3  0084               	movwf	4
  5827  0AD4  1383               	bcf	3,7	;select IRP bank1
  5828  0AD5  0800               	movf	0,w
  5829  0AD6  00AC               	movwf	??_IR_data_display
  5830  0AD7  082C               	movf	??_IR_data_display,w
  5831  0AD8  00A4               	movwf	Write1DataHT1621@Dat
  5832  0AD9  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  5833  0ADA  0084               	movwf	4
  5834  0ADB  160A  118A  2000  120A  158A  	fcall	stringdir
  5835  0AE0  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  5836  0AE5                     l385:
  5837  0AE5  0008               	return
  5838  0AE6                     __end_of_IR_data_display:
  5839                           
  5840                           	psect	text16
  5841  1401                     __ptext16:	
  5842 ;; *************** function _I2C_Init *****************
  5843 ;; Defined at:
  5844 ;;		line 3 in file "clock.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  freq            4   27[BANK0 ] const unsigned long 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		wreg, status,2, status,0, pclath, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5858 ;;      Params:         0       4       0       0       0
  5859 ;;      Locals:         0       0       0       0       0
  5860 ;;      Temps:          0       4       0       0       0
  5861 ;;      Totals:         0       8       0       0       0
  5862 ;;Total ram usage:        8 bytes
  5863 ;; Hardware stack levels used: 1
  5864 ;; Hardware stack levels required when called: 3
  5865 ;; This function calls:
  5866 ;;		___lldiv
  5867 ;;		___lmul
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _I2C_Init
  5875  1401                     _I2C_Init:
  5876  1401                     l5008:	
  5877                           ;incstack = 0
  5878                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  5879                           
  5880                           
  5881                           ;clock.c: 4:   TRISC3 = 1;
  5882  1401  1683               	bsf	3,5	;RP0=1, select bank1
  5883  1402  1303               	bcf	3,6	;RP1=0, select bank1
  5884  1403  1587               	bsf	7,3	;volatile
  5885                           
  5886                           ;clock.c: 5:   TRISC4 = 1;
  5887  1404  1607               	bsf	7,4	;volatile
  5888  1405                     l5010:
  5889                           
  5890                           ;clock.c: 7:   SSPCON = 0b00101000;
  5891  1405  3028               	movlw	40
  5892  1406  1283               	bcf	3,5	;RP0=0, select bank0
  5893  1407  1303               	bcf	3,6	;RP1=0, select bank0
  5894  1408  0094               	movwf	20	;volatile
  5895  1409                     l5012:
  5896                           
  5897                           ;clock.c: 8:   SSPCON2 = 0b00000000;
  5898  1409  1683               	bsf	3,5	;RP0=1, select bank1
  5899  140A  1303               	bcf	3,6	;RP1=0, select bank1
  5900  140B  0191               	clrf	17	;volatile
  5901  140C                     l5014:
  5902                           
  5903                           ;clock.c: 10:   SSPADD = (8000000/(4*freq*100))-1;
  5904  140C  1283               	bcf	3,5	;RP0=0, select bank0
  5905  140D  1303               	bcf	3,6	;RP1=0, select bank0
  5906  140E  083B               	movf	I2C_Init@freq,w
  5907  140F  00BF               	movwf	??_I2C_Init
  5908  1410  083C               	movf	I2C_Init@freq+1,w
  5909  1411  00C0               	movwf	??_I2C_Init+1
  5910  1412  083D               	movf	I2C_Init@freq+2,w
  5911  1413  00C1               	movwf	??_I2C_Init+2
  5912  1414  083E               	movf	I2C_Init@freq+3,w
  5913  1415  00C2               	movwf	??_I2C_Init+3
  5914  1416  3002               	movlw	2
  5915  1417                     u3875:
  5916  1417  1003               	clrc
  5917  1418  0DBF               	rlf	??_I2C_Init,f
  5918  1419  0DC0               	rlf	??_I2C_Init+1,f
  5919  141A  0DC1               	rlf	??_I2C_Init+2,f
  5920  141B  0DC2               	rlf	??_I2C_Init+3,f
  5921  141C                     u3870:
  5922  141C  3EFF               	addlw	-1
  5923  141D  1D03               	skipz
  5924  141E  2C17               	goto	u3875
  5925  141F  0842               	movf	??_I2C_Init+3,w
  5926  1420  00A3               	movwf	___lmul@multiplier+3
  5927  1421  0841               	movf	??_I2C_Init+2,w
  5928  1422  00A2               	movwf	___lmul@multiplier+2
  5929  1423  0840               	movf	??_I2C_Init+1,w
  5930  1424  00A1               	movwf	___lmul@multiplier+1
  5931  1425  083F               	movf	??_I2C_Init,w
  5932  1426  00A0               	movwf	___lmul@multiplier
  5933  1427  3000               	movlw	0
  5934  1428  00A7               	movwf	___lmul@multiplicand+3
  5935  1429  3000               	movlw	0
  5936  142A  00A6               	movwf	___lmul@multiplicand+2
  5937  142B  3000               	movlw	0
  5938  142C  00A5               	movwf	___lmul@multiplicand+1
  5939  142D  3064               	movlw	100
  5940  142E  00A4               	movwf	___lmul@multiplicand
  5941  142F  160A  118A  23B9  160A  118A  	fcall	___lmul
  5942  1434  1283               	bcf	3,5	;RP0=0, select bank0
  5943  1435  1303               	bcf	3,6	;RP1=0, select bank0
  5944  1436  0823               	movf	?___lmul+3,w
  5945  1437  00B0               	movwf	___lldiv@divisor+3
  5946  1438  0822               	movf	?___lmul+2,w
  5947  1439  00AF               	movwf	___lldiv@divisor+2
  5948  143A  0821               	movf	?___lmul+1,w
  5949  143B  00AE               	movwf	___lldiv@divisor+1
  5950  143C  0820               	movf	?___lmul,w
  5951  143D  00AD               	movwf	___lldiv@divisor
  5952  143E  3000               	movlw	0
  5953  143F  00B4               	movwf	___lldiv@dividend+3
  5954  1440  307A               	movlw	122
  5955  1441  00B3               	movwf	___lldiv@dividend+2
  5956  1442  3012               	movlw	18
  5957  1443  00B2               	movwf	___lldiv@dividend+1
  5958  1444  3000               	movlw	0
  5959  1445  00B1               	movwf	___lldiv@dividend
  5960  1446  160A  118A  2512  160A  118A  	fcall	___lldiv
  5961  144B  1283               	bcf	3,5	;RP0=0, select bank0
  5962  144C  1303               	bcf	3,6	;RP1=0, select bank0
  5963  144D  082D               	movf	?___lldiv,w
  5964  144E  3EFF               	addlw	255
  5965  144F  1683               	bsf	3,5	;RP0=1, select bank1
  5966  1450  1303               	bcf	3,6	;RP1=0, select bank1
  5967  1451  0093               	movwf	19	;volatile
  5968  1452                     l5016:
  5969                           
  5970                           ;clock.c: 11:   SSPSTAT = 0b00000000;
  5971  1452  0194               	clrf	20	;volatile
  5972  1453                     l434:
  5973  1453  0008               	return
  5974  1454                     __end_of_I2C_Init:
  5975                           
  5976                           	psect	text17
  5977  13B9                     __ptext17:	
  5978 ;; *************** function ___lmul *****************
  5979 ;; Defined at:
  5980 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5983 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  product         4    9[BANK0 ] unsigned long 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  4    0[BANK0 ] unsigned long 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5995 ;;      Params:         0       8       0       0       0
  5996 ;;      Locals:         0       4       0       0       0
  5997 ;;      Temps:          0       1       0       0       0
  5998 ;;      Totals:         0      13       0       0       0
  5999 ;;Total ram usage:       13 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 2
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_I2C_Init
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function ___lmul
  6011  13B9                     ___lmul:
  6012  13B9                     l4934:	
  6013                           ;incstack = 0
  6014                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6015                           
  6016  13B9  3000               	movlw	0
  6017  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  6018  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  6019  13BC  00AC               	movwf	___lmul@product+3
  6020  13BD  3000               	movlw	0
  6021  13BE  00AB               	movwf	___lmul@product+2
  6022  13BF  3000               	movlw	0
  6023  13C0  00AA               	movwf	___lmul@product+1
  6024  13C1  3000               	movlw	0
  6025  13C2  00A9               	movwf	___lmul@product
  6026  13C3                     l4936:
  6027  13C3  1C20               	btfss	___lmul@multiplier,0
  6028  13C4  2BC6               	goto	u3691
  6029  13C5  2BC7               	goto	u3690
  6030  13C6                     u3691:
  6031  13C6  2BDE               	goto	l4940
  6032  13C7                     u3690:
  6033  13C7                     l4938:
  6034  13C7  0824               	movf	___lmul@multiplicand,w
  6035  13C8  07A9               	addwf	___lmul@product,f
  6036  13C9  0825               	movf	___lmul@multiplicand+1,w
  6037  13CA  1103               	clrz
  6038  13CB  1803               	skipnc
  6039  13CC  3E01               	addlw	1
  6040  13CD  1903               	skipnz
  6041  13CE  2BD0               	goto	u3701
  6042  13CF  07AA               	addwf	___lmul@product+1,f
  6043  13D0                     u3701:
  6044  13D0  0826               	movf	___lmul@multiplicand+2,w
  6045  13D1  1103               	clrz
  6046  13D2  1803               	skipnc
  6047  13D3  3E01               	addlw	1
  6048  13D4  1903               	skipnz
  6049  13D5  2BD7               	goto	u3702
  6050  13D6  07AB               	addwf	___lmul@product+2,f
  6051  13D7                     u3702:
  6052  13D7  0827               	movf	___lmul@multiplicand+3,w
  6053  13D8  1103               	clrz
  6054  13D9  1803               	skipnc
  6055  13DA  3E01               	addlw	1
  6056  13DB  1903               	skipnz
  6057  13DC  2BDE               	goto	u3703
  6058  13DD  07AC               	addwf	___lmul@product+3,f
  6059  13DE                     u3703:
  6060  13DE                     l4940:
  6061  13DE  3001               	movlw	1
  6062  13DF  00A8               	movwf	??___lmul
  6063  13E0                     u3715:
  6064  13E0  1003               	clrc
  6065  13E1  0DA4               	rlf	___lmul@multiplicand,f
  6066  13E2  0DA5               	rlf	___lmul@multiplicand+1,f
  6067  13E3  0DA6               	rlf	___lmul@multiplicand+2,f
  6068  13E4  0DA7               	rlf	___lmul@multiplicand+3,f
  6069  13E5  0BA8               	decfsz	??___lmul,f
  6070  13E6  2BE0               	goto	u3715
  6071  13E7                     l4942:
  6072  13E7  3001               	movlw	1
  6073  13E8                     u3725:
  6074  13E8  1003               	clrc
  6075  13E9  0CA3               	rrf	___lmul@multiplier+3,f
  6076  13EA  0CA2               	rrf	___lmul@multiplier+2,f
  6077  13EB  0CA1               	rrf	___lmul@multiplier+1,f
  6078  13EC  0CA0               	rrf	___lmul@multiplier,f
  6079  13ED  3EFF               	addlw	-1
  6080  13EE  1D03               	skipz
  6081  13EF  2BE8               	goto	u3725
  6082  13F0  0823               	movf	___lmul@multiplier+3,w
  6083  13F1  0422               	iorwf	___lmul@multiplier+2,w
  6084  13F2  0421               	iorwf	___lmul@multiplier+1,w
  6085  13F3  0420               	iorwf	___lmul@multiplier,w
  6086  13F4  1D03               	skipz
  6087  13F5  2BF7               	goto	u3731
  6088  13F6  2BF8               	goto	u3730
  6089  13F7                     u3731:
  6090  13F7  2BC3               	goto	l4936
  6091  13F8                     u3730:
  6092  13F8                     l4944:
  6093  13F8  082C               	movf	___lmul@product+3,w
  6094  13F9  00A3               	movwf	?___lmul+3
  6095  13FA  082B               	movf	___lmul@product+2,w
  6096  13FB  00A2               	movwf	?___lmul+2
  6097  13FC  082A               	movf	___lmul@product+1,w
  6098  13FD  00A1               	movwf	?___lmul+1
  6099  13FE  0829               	movf	___lmul@product,w
  6100  13FF  00A0               	movwf	?___lmul
  6101  1400                     l624:
  6102  1400  0008               	return
  6103  1401                     __end_of___lmul:
  6104                           
  6105                           	psect	text18
  6106  1512                     __ptext18:	
  6107 ;; *************** function ___lldiv *****************
  6108 ;; Defined at:
  6109 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  divisor         4   13[BANK0 ] unsigned long 
  6112 ;;  dividend        4   17[BANK0 ] unsigned long 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  quotient        4   22[BANK0 ] unsigned long 
  6115 ;;  counter         1   26[BANK0 ] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  4   13[BANK0 ] unsigned long 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6125 ;;      Params:         0       8       0       0       0
  6126 ;;      Locals:         0       5       0       0       0
  6127 ;;      Temps:          0       1       0       0       0
  6128 ;;      Totals:         0      14       0       0       0
  6129 ;;Total ram usage:       14 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; Hardware stack levels required when called: 2
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_I2C_Init
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function ___lldiv
  6141  1512                     ___lldiv:
  6142  1512                     l4948:	
  6143                           ;incstack = 0
  6144                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6145                           
  6146  1512  3000               	movlw	0
  6147  1513  1283               	bcf	3,5	;RP0=0, select bank0
  6148  1514  1303               	bcf	3,6	;RP1=0, select bank0
  6149  1515  00B9               	movwf	___lldiv@quotient+3
  6150  1516  3000               	movlw	0
  6151  1517  00B8               	movwf	___lldiv@quotient+2
  6152  1518  3000               	movlw	0
  6153  1519  00B7               	movwf	___lldiv@quotient+1
  6154  151A  3000               	movlw	0
  6155  151B  00B6               	movwf	___lldiv@quotient
  6156  151C  0830               	movf	___lldiv@divisor+3,w
  6157  151D  042F               	iorwf	___lldiv@divisor+2,w
  6158  151E  042E               	iorwf	___lldiv@divisor+1,w
  6159  151F  042D               	iorwf	___lldiv@divisor,w
  6160  1520  1903               	skipnz
  6161  1521  2D23               	goto	u3741
  6162  1522  2D24               	goto	u3740
  6163  1523                     u3741:
  6164  1523  2D71               	goto	l4968
  6165  1524                     u3740:
  6166  1524                     l4950:
  6167  1524  01BA               	clrf	___lldiv@counter
  6168  1525  0ABA               	incf	___lldiv@counter,f
  6169  1526  2D34               	goto	l4954
  6170  1527                     l4952:
  6171  1527  3001               	movlw	1
  6172  1528  00B5               	movwf	??___lldiv
  6173  1529                     u3755:
  6174  1529  1003               	clrc
  6175  152A  0DAD               	rlf	___lldiv@divisor,f
  6176  152B  0DAE               	rlf	___lldiv@divisor+1,f
  6177  152C  0DAF               	rlf	___lldiv@divisor+2,f
  6178  152D  0DB0               	rlf	___lldiv@divisor+3,f
  6179  152E  0BB5               	decfsz	??___lldiv,f
  6180  152F  2D29               	goto	u3755
  6181  1530  3001               	movlw	1
  6182  1531  00B5               	movwf	??___lldiv
  6183  1532  0835               	movf	??___lldiv,w
  6184  1533  07BA               	addwf	___lldiv@counter,f
  6185  1534                     l4954:
  6186  1534  1FB0               	btfss	___lldiv@divisor+3,7
  6187  1535  2D37               	goto	u3761
  6188  1536  2D38               	goto	u3760
  6189  1537                     u3761:
  6190  1537  2D27               	goto	l4952
  6191  1538                     u3760:
  6192  1538                     l4956:
  6193  1538  3001               	movlw	1
  6194  1539  00B5               	movwf	??___lldiv
  6195  153A                     u3775:
  6196  153A  1003               	clrc
  6197  153B  0DB6               	rlf	___lldiv@quotient,f
  6198  153C  0DB7               	rlf	___lldiv@quotient+1,f
  6199  153D  0DB8               	rlf	___lldiv@quotient+2,f
  6200  153E  0DB9               	rlf	___lldiv@quotient+3,f
  6201  153F  0BB5               	decfsz	??___lldiv,f
  6202  1540  2D3A               	goto	u3775
  6203  1541                     l4958:
  6204  1541  0830               	movf	___lldiv@divisor+3,w
  6205  1542  0234               	subwf	___lldiv@dividend+3,w
  6206  1543  1D03               	skipz
  6207  1544  2D4F               	goto	u3785
  6208  1545  082F               	movf	___lldiv@divisor+2,w
  6209  1546  0233               	subwf	___lldiv@dividend+2,w
  6210  1547  1D03               	skipz
  6211  1548  2D4F               	goto	u3785
  6212  1549  082E               	movf	___lldiv@divisor+1,w
  6213  154A  0232               	subwf	___lldiv@dividend+1,w
  6214  154B  1D03               	skipz
  6215  154C  2D4F               	goto	u3785
  6216  154D  082D               	movf	___lldiv@divisor,w
  6217  154E  0231               	subwf	___lldiv@dividend,w
  6218  154F                     u3785:
  6219  154F  1C03               	skipc
  6220  1550  2D52               	goto	u3781
  6221  1551  2D53               	goto	u3780
  6222  1552                     u3781:
  6223  1552  2D62               	goto	l4964
  6224  1553                     u3780:
  6225  1553                     l4960:
  6226  1553  082D               	movf	___lldiv@divisor,w
  6227  1554  02B1               	subwf	___lldiv@dividend,f
  6228  1555  082E               	movf	___lldiv@divisor+1,w
  6229  1556  1C03               	skipc
  6230  1557  0F2E               	incfsz	___lldiv@divisor+1,w
  6231  1558  02B2               	subwf	___lldiv@dividend+1,f
  6232  1559  082F               	movf	___lldiv@divisor+2,w
  6233  155A  1C03               	skipc
  6234  155B  0F2F               	incfsz	___lldiv@divisor+2,w
  6235  155C  02B3               	subwf	___lldiv@dividend+2,f
  6236  155D  0830               	movf	___lldiv@divisor+3,w
  6237  155E  1C03               	skipc
  6238  155F  0F30               	incfsz	___lldiv@divisor+3,w
  6239  1560  02B4               	subwf	___lldiv@dividend+3,f
  6240  1561                     l4962:
  6241  1561  1436               	bsf	___lldiv@quotient,0
  6242  1562                     l4964:
  6243  1562  3001               	movlw	1
  6244  1563                     u3795:
  6245  1563  1003               	clrc
  6246  1564  0CB0               	rrf	___lldiv@divisor+3,f
  6247  1565  0CAF               	rrf	___lldiv@divisor+2,f
  6248  1566  0CAE               	rrf	___lldiv@divisor+1,f
  6249  1567  0CAD               	rrf	___lldiv@divisor,f
  6250  1568  3EFF               	addlw	-1
  6251  1569  1D03               	skipz
  6252  156A  2D63               	goto	u3795
  6253  156B                     l4966:
  6254  156B  3001               	movlw	1
  6255  156C  02BA               	subwf	___lldiv@counter,f
  6256  156D  1D03               	btfss	3,2
  6257  156E  2D70               	goto	u3801
  6258  156F  2D71               	goto	u3800
  6259  1570                     u3801:
  6260  1570  2D38               	goto	l4956
  6261  1571                     u3800:
  6262  1571                     l4968:
  6263  1571  0839               	movf	___lldiv@quotient+3,w
  6264  1572  00B0               	movwf	?___lldiv+3
  6265  1573  0838               	movf	___lldiv@quotient+2,w
  6266  1574  00AF               	movwf	?___lldiv+2
  6267  1575  0837               	movf	___lldiv@quotient+1,w
  6268  1576  00AE               	movwf	?___lldiv+1
  6269  1577  0836               	movf	___lldiv@quotient,w
  6270  1578  00AD               	movwf	?___lldiv
  6271  1579                     l646:
  6272  1579  0008               	return
  6273  157A                     __end_of___lldiv:
  6274                           
  6275                           	psect	text19
  6276  07BE                     __ptext19:	
  6277 ;; *************** function _HT1621_Init *****************
  6278 ;; Defined at:
  6279 ;;		line 270 in file "ht1621.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0, pclath, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6293 ;;      Params:         0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0
  6295 ;;      Temps:          0       1       0       0       0
  6296 ;;      Totals:         0       1       0       0       0
  6297 ;;Total ram usage:        1 bytes
  6298 ;; Hardware stack levels used: 1
  6299 ;; Hardware stack levels required when called: 5
  6300 ;; This function calls:
  6301 ;;		_HT1621_num_init
  6302 ;;		_WriteCommandHT1621
  6303 ;; This function is called by:
  6304 ;;		_main
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _HT1621_Init
  6310  07BE                     _HT1621_Init:
  6311  07BE                     l4994:	
  6312                           ;incstack = 0
  6313                           ; Regs used in _HT1621_Init: [wreg+status,2+status,0+pclath+cstack]
  6314                           
  6315                           
  6316                           ;ht1621.c: 272:     TRISD5=0;
  6317  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  6318  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  6319  07C0  1288               	bcf	8,5	;volatile
  6320                           
  6321                           ;ht1621.c: 273:     TRISD6=0;
  6322  07C1  1308               	bcf	8,6	;volatile
  6323                           
  6324                           ;ht1621.c: 274:     TRISD7=0;
  6325  07C2  1388               	bcf	8,7	;volatile
  6326                           
  6327                           ;ht1621.c: 276:  RD5 = 1;
  6328  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  6329  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  6330  07C5  1688               	bsf	8,5	;volatile
  6331                           
  6332                           ;ht1621.c: 277:  RD6 = 1;
  6333  07C6  1708               	bsf	8,6	;volatile
  6334                           
  6335                           ;ht1621.c: 278:  RD7 = 1;
  6336  07C7  1788               	bsf	8,7	;volatile
  6337  07C8                     l4996:
  6338                           
  6339                           ;ht1621.c: 280:  WriteCommandHT1621(0x01);
  6340  07C8  3001               	movlw	1
  6341  07C9  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6342                           
  6343                           ;ht1621.c: 281:  WriteCommandHT1621(0x03);
  6344  07CE  3003               	movlw	3
  6345  07CF  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6346                           
  6347                           ;ht1621.c: 284:  WriteCommandHT1621(0x29);HT1621_maxcom=4;
  6348  07D4  3029               	movlw	41
  6349  07D5  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6350  07DA                     l4998:
  6351  07DA  3004               	movlw	4
  6352  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  6353  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  6354  07DD  00A9               	movwf	??_HT1621_Init
  6355  07DE  0829               	movf	??_HT1621_Init,w
  6356  07DF  00FB               	movwf	_HT1621_maxcom
  6357  07E0                     l5000:
  6358                           
  6359                           ;ht1621.c: 309:  WriteCommandHT1621(0x04);
  6360  07E0  3004               	movlw	4
  6361  07E1  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6362  07E6                     l5002:
  6363                           
  6364                           ;ht1621.c: 310:  WriteCommandHT1621(0x05);
  6365  07E6  3005               	movlw	5
  6366  07E7  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6367  07EC                     l5004:
  6368                           
  6369                           ;ht1621.c: 311:  WriteCommandHT1621(0x08);
  6370  07EC  3008               	movlw	8
  6371  07ED  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6372  07F2                     l5006:
  6373                           
  6374                           ;ht1621.c: 312:  WriteCommandHT1621(0X80);
  6375  07F2  3080               	movlw	128
  6376  07F3  160A  118A  24AF  120A  118A  	fcall	_WriteCommandHT1621
  6377                           
  6378                           ;ht1621.c: 314:  HT1621_num_init();
  6379  07F8  120A  118A  27FF  120A  118A  	fcall	_HT1621_num_init
  6380  07FD                     l345:
  6381  07FD  0008               	return
  6382  07FE                     __end_of_HT1621_Init:
  6383                           
  6384                           	psect	text20
  6385  14AF                     __ptext20:	
  6386 ;; *************** function _WriteCommandHT1621 *****************
  6387 ;; Defined at:
  6388 ;;		line 68 in file "ht1621.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  FunctonCode     1    wreg     unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  FunctonCode     1    6[BANK0 ] unsigned char 
  6393 ;;  i               1    8[BANK0 ] unsigned char 
  6394 ;;  Shift           1    7[BANK0 ] unsigned char 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0, pclath, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6404 ;;      Params:         0       0       0       0       0
  6405 ;;      Locals:         0       3       0       0       0
  6406 ;;      Temps:          0       2       0       0       0
  6407 ;;      Totals:         0       5       0       0       0
  6408 ;;Total ram usage:        5 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 4
  6411 ;; This function calls:
  6412 ;;		_HT1621_Delay_us
  6413 ;;		_WriteClockHT1621
  6414 ;; This function is called by:
  6415 ;;		_HT1621_Init
  6416 ;;		_HT1621_Halt
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _WriteCommandHT1621
  6422  14AF                     _WriteCommandHT1621:
  6423                           
  6424                           ;incstack = 0
  6425                           ; Regs used in _WriteCommandHT1621: [wreg+status,2+status,0+pclath+cstack]
  6426                           ;WriteCommandHT1621@FunctonCode stored from wreg
  6427  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  6428  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  6429  14B1  00A6               	movwf	WriteCommandHT1621@FunctonCode
  6430  14B2                     l4750:
  6431                           
  6432                           ;ht1621.c: 68: void WriteCommandHT1621(unsigned char FunctonCode);ht1621.c: 69: {;ht1621
      +                          .c: 70:  unsigned char Shift = 0x80;
  6433  14B2  3080               	movlw	128
  6434  14B3  00A4               	movwf	??_WriteCommandHT1621
  6435  14B4  0824               	movf	??_WriteCommandHT1621,w
  6436  14B5  00A7               	movwf	WriteCommandHT1621@Shift
  6437  14B6                     l4752:
  6438                           
  6439                           ;ht1621.c: 71:  unsigned char i;;ht1621.c: 73:  RD5 = 0;
  6440  14B6  1288               	bcf	8,5	;volatile
  6441  14B7                     l4754:
  6442                           
  6443                           ;ht1621.c: 74:  HT1621_Delay_us(10);
  6444  14B7  300A               	movlw	10
  6445  14B8  00A0               	movwf	HT1621_Delay_us@ucDat
  6446  14B9  3000               	movlw	0
  6447  14BA  00A1               	movwf	HT1621_Delay_us@ucDat+1
  6448  14BB  160A  118A  225E  160A  118A  	fcall	_HT1621_Delay_us
  6449  14C0                     l4756:
  6450                           
  6451                           ;ht1621.c: 76:  RD7 = 1;
  6452  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  6453  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  6454  14C2  1788               	bsf	8,7	;volatile
  6455  14C3                     l4758:
  6456                           
  6457                           ;ht1621.c: 77:  WriteClockHT1621();
  6458  14C3  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  6459  14C8                     l4760:
  6460                           
  6461                           ;ht1621.c: 78:  RD7 = 0;
  6462  14C8  1283               	bcf	3,5	;RP0=0, select bank0
  6463  14C9  1303               	bcf	3,6	;RP1=0, select bank0
  6464  14CA  1388               	bcf	8,7	;volatile
  6465  14CB                     l4762:
  6466                           
  6467                           ;ht1621.c: 79:  WriteClockHT1621();
  6468  14CB  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  6469  14D0                     l4764:
  6470                           
  6471                           ;ht1621.c: 80:  RD7 = 0;
  6472  14D0  1283               	bcf	3,5	;RP0=0, select bank0
  6473  14D1  1303               	bcf	3,6	;RP1=0, select bank0
  6474  14D2  1388               	bcf	8,7	;volatile
  6475  14D3                     l4766:
  6476                           
  6477                           ;ht1621.c: 81:  WriteClockHT1621();
  6478  14D3  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  6479  14D8                     l4768:
  6480                           
  6481                           ;ht1621.c: 83:  for(i = 0; i < 8; i++)
  6482  14D8  1283               	bcf	3,5	;RP0=0, select bank0
  6483  14D9  1303               	bcf	3,6	;RP1=0, select bank0
  6484  14DA  01A8               	clrf	WriteCommandHT1621@i
  6485  14DB                     l4774:
  6486                           
  6487                           ;ht1621.c: 84:  {;ht1621.c: 85:   if(Shift & FunctonCode)
  6488  14DB  0827               	movf	WriteCommandHT1621@Shift,w
  6489  14DC  0526               	andwf	WriteCommandHT1621@FunctonCode,w
  6490  14DD  1903               	btfsc	3,2
  6491  14DE  2CE0               	goto	u3561
  6492  14DF  2CE1               	goto	u3560
  6493  14E0                     u3561:
  6494  14E0  2CE3               	goto	l290
  6495  14E1                     u3560:
  6496  14E1                     l4776:
  6497                           
  6498                           ;ht1621.c: 86:    RD7 = 1;
  6499  14E1  1788               	bsf	8,7	;volatile
  6500  14E2  2CE4               	goto	l4778
  6501  14E3                     l290:	
  6502                           ;ht1621.c: 87:   else
  6503                           
  6504                           
  6505                           ;ht1621.c: 88:    RD7 = 0;
  6506  14E3  1388               	bcf	8,7	;volatile
  6507  14E4                     l4778:
  6508                           
  6509                           ;ht1621.c: 90:    WriteClockHT1621();
  6510  14E4  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  6511  14E9                     l4780:
  6512                           
  6513                           ;ht1621.c: 91:    Shift = Shift >> 1;
  6514  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  6515  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  6516  14EB  0827               	movf	WriteCommandHT1621@Shift,w
  6517  14EC  00A4               	movwf	??_WriteCommandHT1621
  6518  14ED  1003               	clrc
  6519  14EE  0C24               	rrf	??_WriteCommandHT1621,w
  6520  14EF  00A5               	movwf	??_WriteCommandHT1621+1
  6521  14F0  0825               	movf	??_WriteCommandHT1621+1,w
  6522  14F1  00A7               	movwf	WriteCommandHT1621@Shift
  6523  14F2                     l4782:
  6524                           
  6525                           ;ht1621.c: 92:  }
  6526  14F2  3001               	movlw	1
  6527  14F3  00A4               	movwf	??_WriteCommandHT1621
  6528  14F4  0824               	movf	??_WriteCommandHT1621,w
  6529  14F5  07A8               	addwf	WriteCommandHT1621@i,f
  6530  14F6                     l4784:
  6531  14F6  3008               	movlw	8
  6532  14F7  0228               	subwf	WriteCommandHT1621@i,w
  6533  14F8  1C03               	skipc
  6534  14F9  2CFB               	goto	u3571
  6535  14FA  2CFC               	goto	u3570
  6536  14FB                     u3571:
  6537  14FB  2CDB               	goto	l4774
  6538  14FC                     u3570:
  6539  14FC                     l289:
  6540                           
  6541                           ;ht1621.c: 93:  RD7 = 0;
  6542  14FC  1388               	bcf	8,7	;volatile
  6543  14FD                     l4786:
  6544                           
  6545                           ;ht1621.c: 94:  WriteClockHT1621();
  6546  14FD  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  6547  1502                     l4788:
  6548                           
  6549                           ;ht1621.c: 96:  RD5 = 1;
  6550  1502  1283               	bcf	3,5	;RP0=0, select bank0
  6551  1503  1303               	bcf	3,6	;RP1=0, select bank0
  6552  1504  1688               	bsf	8,5	;volatile
  6553                           
  6554                           ;ht1621.c: 97:  HT1621_Delay_us(10);
  6555  1505  300A               	movlw	10
  6556  1506  00A0               	movwf	HT1621_Delay_us@ucDat
  6557  1507  3000               	movlw	0
  6558  1508  00A1               	movwf	HT1621_Delay_us@ucDat+1
  6559  1509  160A  118A  225E  160A  118A  	fcall	_HT1621_Delay_us
  6560  150E                     l4790:
  6561                           
  6562                           ;ht1621.c: 98:  RD7 = 1;
  6563  150E  1283               	bcf	3,5	;RP0=0, select bank0
  6564  150F  1303               	bcf	3,6	;RP1=0, select bank0
  6565  1510  1788               	bsf	8,7	;volatile
  6566  1511                     l292:
  6567  1511  0008               	return
  6568  1512                     __end_of_WriteCommandHT1621:
  6569                           
  6570                           	psect	text21
  6571  07FF                     __ptext21:	
  6572 ;; *************** function _HT1621_num_init *****************
  6573 ;; Defined at:
  6574 ;;		line 347 in file "ht1621.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;		None
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  LCD_data        1    0        unsigned char 
  6579 ;;  num             1    0        unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		None
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6589 ;;      Params:         0       0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0
  6592 ;;      Totals:         0       0       0       0       0
  6593 ;;Total ram usage:        0 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 2
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_HT1621_Init
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function _HT1621_num_init
  6605  07FF                     _HT1621_num_init:
  6606  07FF                     l350:	
  6607                           ;incstack = 0
  6608                           ; Regs used in _HT1621_num_init: []
  6609                           
  6610  07FF  0008               	return
  6611  0800                     __end_of_HT1621_num_init:
  6612                           
  6613                           	psect	text22
  6614  1711                     __ptext22:	
  6615 ;; *************** function _HT1621_Display_Year *****************
  6616 ;; Defined at:
  6617 ;;		line 474 in file "ht1621.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  year            2   14[BANK0 ] unsigned int 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  Temp_Data       1   18[BANK0 ] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6631 ;;      Params:         0       2       0       0       0
  6632 ;;      Locals:         0       1       0       0       0
  6633 ;;      Temps:          0       2       0       0       0
  6634 ;;      Totals:         0       5       0       0       0
  6635 ;;Total ram usage:        5 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 5
  6638 ;; This function calls:
  6639 ;;		_Write1DataHT1621
  6640 ;;		___lwdiv
  6641 ;;		___lwmod
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           
  6648                           ;psect for function _HT1621_Display_Year
  6649  1711                     _HT1621_Display_Year:
  6650  1711                     l5042:	
  6651                           ;incstack = 0
  6652                           ; Regs used in _HT1621_Display_Year: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6653                           
  6654  1711                     l5044:
  6655                           
  6656                           ;ht1621.c: 477:     Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4);
  6657  1711  1683               	bsf	3,5	;RP0=1, select bank1
  6658  1712  1303               	bcf	3,6	;RP1=0, select bank1
  6659  1713  0822               	movf	(_LCD_RAM_Tab^(0+128)+2),w
  6660  1714  1283               	bcf	3,5	;RP0=0, select bank0
  6661  1715  1303               	bcf	3,6	;RP1=0, select bank0
  6662  1716  00B0               	movwf	??_HT1621_Display_Year
  6663  1717  3004               	movlw	4
  6664  1718                     u3885:
  6665  1718  1003               	clrc
  6666  1719  0CB0               	rrf	??_HT1621_Display_Year,f
  6667  171A  3EFF               	addlw	-1
  6668  171B  1D03               	skipz
  6669  171C  2F18               	goto	u3885
  6670  171D  0830               	movf	??_HT1621_Display_Year,w
  6671  171E  00B1               	movwf	??_HT1621_Display_Year+1
  6672  171F  0831               	movf	??_HT1621_Display_Year+1,w
  6673  1720  00A4               	movwf	Write1DataHT1621@Dat
  6674  1721  3001               	movlw	low (_HT1621_segtab-__stringbase)
  6675  1722  0084               	movwf	4
  6676  1723  160A  118A  2000  160A  118A  	fcall	stringdir
  6677  1728  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6678  172D                     l5046:
  6679                           
  6680                           ;ht1621.c: 478:  Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0);
  6681  172D  1683               	bsf	3,5	;RP0=1, select bank1
  6682  172E  1303               	bcf	3,6	;RP1=0, select bank1
  6683  172F  0822               	movf	(_LCD_RAM_Tab^(0+128)+2),w
  6684  1730  1283               	bcf	3,5	;RP0=0, select bank0
  6685  1731  1303               	bcf	3,6	;RP1=0, select bank0
  6686  1732  00B0               	movwf	??_HT1621_Display_Year
  6687  1733  0830               	movf	??_HT1621_Display_Year,w
  6688  1734  00A4               	movwf	Write1DataHT1621@Dat
  6689  1735  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  6690  1736  0084               	movwf	4
  6691  1737  160A  118A  2000  160A  118A  	fcall	stringdir
  6692  173C  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6693  1741                     l5048:
  6694  1741                     l5050:
  6695                           
  6696                           ;ht1621.c: 480:     Write1DataHT1621(HT1621_segtab[2], LCD_RAM_Tab[Temp_Data]>>4);
  6697  1741  1683               	bsf	3,5	;RP0=1, select bank1
  6698  1742  1303               	bcf	3,6	;RP1=0, select bank1
  6699  1743  0820               	movf	_LCD_RAM_Tab^(0+128),w
  6700  1744  1283               	bcf	3,5	;RP0=0, select bank0
  6701  1745  1303               	bcf	3,6	;RP1=0, select bank0
  6702  1746  00B0               	movwf	??_HT1621_Display_Year
  6703  1747  3004               	movlw	4
  6704  1748                     u3895:
  6705  1748  1003               	clrc
  6706  1749  0CB0               	rrf	??_HT1621_Display_Year,f
  6707  174A  3EFF               	addlw	-1
  6708  174B  1D03               	skipz
  6709  174C  2F48               	goto	u3895
  6710  174D  0830               	movf	??_HT1621_Display_Year,w
  6711  174E  00B1               	movwf	??_HT1621_Display_Year+1
  6712  174F  0831               	movf	??_HT1621_Display_Year+1,w
  6713  1750  00A4               	movwf	Write1DataHT1621@Dat
  6714  1751  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  6715  1752  0084               	movwf	4
  6716  1753  160A  118A  2000  160A  118A  	fcall	stringdir
  6717  1758  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6718  175D                     l5052:
  6719                           
  6720                           ;ht1621.c: 481:  Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0);
  6721  175D  1683               	bsf	3,5	;RP0=1, select bank1
  6722  175E  1303               	bcf	3,6	;RP1=0, select bank1
  6723  175F  0820               	movf	_LCD_RAM_Tab^(0+128),w
  6724  1760  1283               	bcf	3,5	;RP0=0, select bank0
  6725  1761  1303               	bcf	3,6	;RP1=0, select bank0
  6726  1762  00B0               	movwf	??_HT1621_Display_Year
  6727  1763  0830               	movf	??_HT1621_Display_Year,w
  6728  1764  00A4               	movwf	Write1DataHT1621@Dat
  6729  1765  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  6730  1766  0084               	movwf	4
  6731  1767  160A  118A  2000  160A  118A  	fcall	stringdir
  6732  176C  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6733  1771                     l5054:
  6734                           
  6735                           ;ht1621.c: 483:     Temp_Data=year/10;
  6736  1771  300A               	movlw	10
  6737  1772  1283               	bcf	3,5	;RP0=0, select bank0
  6738  1773  1303               	bcf	3,6	;RP1=0, select bank0
  6739  1774  00A6               	movwf	___lwdiv@divisor
  6740  1775  3000               	movlw	0
  6741  1776  00A7               	movwf	___lwdiv@divisor+1
  6742  1777  082F               	movf	HT1621_Display_Year@year+1,w
  6743  1778  00A9               	movwf	___lwdiv@dividend+1
  6744  1779  082E               	movf	HT1621_Display_Year@year,w
  6745  177A  00A8               	movwf	___lwdiv@dividend
  6746  177B  160A  118A  2373  160A  118A  	fcall	___lwdiv
  6747  1780  1283               	bcf	3,5	;RP0=0, select bank0
  6748  1781  1303               	bcf	3,6	;RP1=0, select bank0
  6749  1782  0826               	movf	?___lwdiv,w
  6750  1783  00B0               	movwf	??_HT1621_Display_Year
  6751  1784  0830               	movf	??_HT1621_Display_Year,w
  6752  1785  00B2               	movwf	HT1621_Display_Year@Temp_Data
  6753  1786                     l5056:
  6754                           
  6755                           ;ht1621.c: 484:     Write1DataHT1621(HT1621_segtab[4], LCD_RAM_Tab[Temp_Data]>>4);
  6756  1786  0832               	movf	HT1621_Display_Year@Temp_Data,w
  6757  1787  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  6758  1788  0084               	movwf	4
  6759  1789  1383               	bcf	3,7	;select IRP bank1
  6760  178A  0800               	movf	0,w
  6761  178B  00B0               	movwf	??_HT1621_Display_Year
  6762  178C  3004               	movlw	4
  6763  178D                     u3905:
  6764  178D  1003               	clrc
  6765  178E  0CB0               	rrf	??_HT1621_Display_Year,f
  6766  178F  3EFF               	addlw	-1
  6767  1790  1D03               	skipz
  6768  1791  2F8D               	goto	u3905
  6769  1792  0830               	movf	??_HT1621_Display_Year,w
  6770  1793  00B1               	movwf	??_HT1621_Display_Year+1
  6771  1794  0831               	movf	??_HT1621_Display_Year+1,w
  6772  1795  00A4               	movwf	Write1DataHT1621@Dat
  6773  1796  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  6774  1797  0084               	movwf	4
  6775  1798  160A  118A  2000  160A  118A  	fcall	stringdir
  6776  179D  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6777  17A2                     l5058:
  6778                           
  6779                           ;ht1621.c: 485:  Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0);
  6780  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  6781  17A3  1303               	bcf	3,6	;RP1=0, select bank0
  6782  17A4  0832               	movf	HT1621_Display_Year@Temp_Data,w
  6783  17A5  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  6784  17A6  0084               	movwf	4
  6785  17A7  1383               	bcf	3,7	;select IRP bank1
  6786  17A8  0800               	movf	0,w
  6787  17A9  00B0               	movwf	??_HT1621_Display_Year
  6788  17AA  0830               	movf	??_HT1621_Display_Year,w
  6789  17AB  00A4               	movwf	Write1DataHT1621@Dat
  6790  17AC  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  6791  17AD  0084               	movwf	4
  6792  17AE  160A  118A  2000  160A  118A  	fcall	stringdir
  6793  17B3  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6794  17B8                     l5060:
  6795                           
  6796                           ;ht1621.c: 486:     Temp_Data=year%10;
  6797  17B8  300A               	movlw	10
  6798  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  6799  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  6800  17BB  00A0               	movwf	___lwmod@divisor
  6801  17BC  3000               	movlw	0
  6802  17BD  00A1               	movwf	___lwmod@divisor+1
  6803  17BE  082F               	movf	HT1621_Display_Year@year+1,w
  6804  17BF  00A3               	movwf	___lwmod@dividend+1
  6805  17C0  082E               	movf	HT1621_Display_Year@year,w
  6806  17C1  00A2               	movwf	___lwmod@dividend
  6807  17C2  160A  118A  2337  160A  118A  	fcall	___lwmod
  6808  17C7  1283               	bcf	3,5	;RP0=0, select bank0
  6809  17C8  1303               	bcf	3,6	;RP1=0, select bank0
  6810  17C9  0820               	movf	?___lwmod,w
  6811  17CA  00B0               	movwf	??_HT1621_Display_Year
  6812  17CB  0830               	movf	??_HT1621_Display_Year,w
  6813  17CC  00B2               	movwf	HT1621_Display_Year@Temp_Data
  6814  17CD                     l5062:
  6815                           
  6816                           ;ht1621.c: 487:     Write1DataHT1621(HT1621_segtab[6], LCD_RAM_Tab[Temp_Data]>>4);
  6817  17CD  0832               	movf	HT1621_Display_Year@Temp_Data,w
  6818  17CE  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  6819  17CF  0084               	movwf	4
  6820  17D0  1383               	bcf	3,7	;select IRP bank1
  6821  17D1  0800               	movf	0,w
  6822  17D2  00B0               	movwf	??_HT1621_Display_Year
  6823  17D3  3004               	movlw	4
  6824  17D4                     u3915:
  6825  17D4  1003               	clrc
  6826  17D5  0CB0               	rrf	??_HT1621_Display_Year,f
  6827  17D6  3EFF               	addlw	-1
  6828  17D7  1D03               	skipz
  6829  17D8  2FD4               	goto	u3915
  6830  17D9  0830               	movf	??_HT1621_Display_Year,w
  6831  17DA  00B1               	movwf	??_HT1621_Display_Year+1
  6832  17DB  0831               	movf	??_HT1621_Display_Year+1,w
  6833  17DC  00A4               	movwf	Write1DataHT1621@Dat
  6834  17DD  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  6835  17DE  0084               	movwf	4
  6836  17DF  160A  118A  2000  160A  118A  	fcall	stringdir
  6837  17E4  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6838  17E9                     l5064:
  6839                           
  6840                           ;ht1621.c: 488:  Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0);
  6841  17E9  1283               	bcf	3,5	;RP0=0, select bank0
  6842  17EA  1303               	bcf	3,6	;RP1=0, select bank0
  6843  17EB  0832               	movf	HT1621_Display_Year@Temp_Data,w
  6844  17EC  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  6845  17ED  0084               	movwf	4
  6846  17EE  1383               	bcf	3,7	;select IRP bank1
  6847  17EF  0800               	movf	0,w
  6848  17F0  00B0               	movwf	??_HT1621_Display_Year
  6849  17F1  0830               	movf	??_HT1621_Display_Year,w
  6850  17F2  00A4               	movwf	Write1DataHT1621@Dat
  6851  17F3  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  6852  17F4  0084               	movwf	4
  6853  17F5  160A  118A  2000  160A  118A  	fcall	stringdir
  6854  17FA  160A  118A  25E3  160A  118A  	fcall	_Write1DataHT1621
  6855  17FF                     l379:
  6856  17FF  0008               	return
  6857  1800                     __end_of_HT1621_Display_Year:
  6858                           
  6859                           	psect	text23
  6860  0672                     __ptext23:	
  6861 ;; *************** function _HT1621_Display_Time *****************
  6862 ;; Defined at:
  6863 ;;		line 427 in file "ht1621.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  sec             1    wreg     unsigned char 
  6866 ;;  hour            2   14[BANK0 ] unsigned int 
  6867 ;;  min             2   16[BANK0 ] unsigned int 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  sec             1   21[BANK0 ] unsigned char 
  6870 ;;  Temp_Data       1   22[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6880 ;;      Params:         0       4       0       0       0
  6881 ;;      Locals:         0       2       0       0       0
  6882 ;;      Temps:          0       3       0       0       0
  6883 ;;      Totals:         0       9       0       0       0
  6884 ;;Total ram usage:        9 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; Hardware stack levels required when called: 5
  6887 ;; This function calls:
  6888 ;;		_Write1DataHT1621
  6889 ;;		___lwdiv
  6890 ;;		___lwmod
  6891 ;; This function is called by:
  6892 ;;		_main
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           
  6897                           ;psect for function _HT1621_Display_Time
  6898  0672                     _HT1621_Display_Time:
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _HT1621_Display_Time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  6902                           ;HT1621_Display_Time@sec stored from wreg
  6903  0672  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0673  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0674  00B5               	movwf	HT1621_Display_Time@sec
  6906  0675                     l5092:
  6907                           
  6908                           ;ht1621.c: 428:     unsigned char Temp_Data;;ht1621.c: 429:     Temp_Data=hour/10;
  6909  0675  300A               	movlw	10
  6910  0676  00A6               	movwf	___lwdiv@divisor
  6911  0677  3000               	movlw	0
  6912  0678  00A7               	movwf	___lwdiv@divisor+1
  6913  0679  082F               	movf	HT1621_Display_Time@hour+1,w
  6914  067A  00A9               	movwf	___lwdiv@dividend+1
  6915  067B  082E               	movf	HT1621_Display_Time@hour,w
  6916  067C  00A8               	movwf	___lwdiv@dividend
  6917  067D  160A  118A  2373  120A  118A  	fcall	___lwdiv
  6918  0682  1283               	bcf	3,5	;RP0=0, select bank0
  6919  0683  1303               	bcf	3,6	;RP1=0, select bank0
  6920  0684  0826               	movf	?___lwdiv,w
  6921  0685  00B2               	movwf	??_HT1621_Display_Time
  6922  0686  0832               	movf	??_HT1621_Display_Time,w
  6923  0687  00B6               	movwf	HT1621_Display_Time@Temp_Data
  6924  0688                     l5094:
  6925                           
  6926                           ;ht1621.c: 430:     if(Temp_Data==0&&sec==0){
  6927  0688  0836               	movf	HT1621_Display_Time@Temp_Data,w
  6928  0689  1D03               	btfss	3,2
  6929  068A  2E8C               	goto	u3971
  6930  068B  2E8D               	goto	u3970
  6931  068C                     u3971:
  6932  068C  2EB2               	goto	l5100
  6933  068D                     u3970:
  6934  068D                     l5096:
  6935  068D  0835               	movf	HT1621_Display_Time@sec,w
  6936  068E  1D03               	btfss	3,2
  6937  068F  2E91               	goto	u3981
  6938  0690  2E92               	goto	u3980
  6939  0691                     u3981:
  6940  0691  2EB2               	goto	l5100
  6941  0692                     u3980:
  6942  0692                     l5098:
  6943                           
  6944                           ;ht1621.c: 431:         Write1DataHT1621(HT1621_segtab[0], (0|0x80)>>4);
  6945  0692  3008               	movlw	8
  6946  0693  00B2               	movwf	??_HT1621_Display_Time
  6947  0694  0832               	movf	??_HT1621_Display_Time,w
  6948  0695  00A4               	movwf	Write1DataHT1621@Dat
  6949  0696  3001               	movlw	low (_HT1621_segtab-__stringbase)
  6950  0697  0084               	movwf	4
  6951  0698  160A  118A  2000  120A  118A  	fcall	stringdir
  6952  069D  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  6953                           
  6954                           ;ht1621.c: 432:         Write1DataHT1621(HT1621_segtab[1], 0);
  6955  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  6956  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  6957  06A4  01A4               	clrf	Write1DataHT1621@Dat
  6958  06A5  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  6959  06A6  0084               	movwf	4
  6960  06A7  160A  118A  2000  120A  118A  	fcall	stringdir
  6961  06AC  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  6962                           
  6963                           ;ht1621.c: 433:     }
  6964  06B1  2EE8               	goto	l5104
  6965  06B2                     l5100:
  6966                           
  6967                           ;ht1621.c: 435:         Write1DataHT1621(HT1621_segtab[0], (LCD_RAM_Tab[Temp_Data]|0x80)
      +                          >>4);
  6968  06B2  0836               	movf	HT1621_Display_Time@Temp_Data,w
  6969  06B3  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  6970  06B4  0084               	movwf	4
  6971  06B5  3080               	movlw	128
  6972  06B6  1383               	bcf	3,7	;select IRP bank1
  6973  06B7  0400               	iorwf	0,w
  6974  06B8  00B2               	movwf	??_HT1621_Display_Time
  6975  06B9  3000               	movlw	0
  6976  06BA  00B3               	movwf	??_HT1621_Display_Time+1
  6977  06BB  3004               	movlw	4
  6978  06BC  00FF               	movwf	btemp+1
  6979  06BD                     u3995:
  6980  06BD  0D33               	rlf	??_HT1621_Display_Time+1,w
  6981  06BE  0CB3               	rrf	??_HT1621_Display_Time+1,f
  6982  06BF  0CB2               	rrf	??_HT1621_Display_Time,f
  6983  06C0  0BFF               	decfsz	btemp+1,f
  6984  06C1  2EBD               	goto	u3995
  6985  06C2  0832               	movf	??_HT1621_Display_Time,w
  6986  06C3  00B4               	movwf	??_HT1621_Display_Time+2
  6987  06C4  0834               	movf	??_HT1621_Display_Time+2,w
  6988  06C5  00A4               	movwf	Write1DataHT1621@Dat
  6989  06C6  3001               	movlw	low (_HT1621_segtab-__stringbase)
  6990  06C7  0084               	movwf	4
  6991  06C8  160A  118A  2000  120A  118A  	fcall	stringdir
  6992  06CD  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  6993  06D2                     l5102:
  6994                           
  6995                           ;ht1621.c: 436:         Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0);
  6996  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  6997  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  6998  06D4  0836               	movf	HT1621_Display_Time@Temp_Data,w
  6999  06D5  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7000  06D6  0084               	movwf	4
  7001  06D7  1383               	bcf	3,7	;select IRP bank1
  7002  06D8  0800               	movf	0,w
  7003  06D9  00B2               	movwf	??_HT1621_Display_Time
  7004  06DA  0832               	movf	??_HT1621_Display_Time,w
  7005  06DB  00A4               	movwf	Write1DataHT1621@Dat
  7006  06DC  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  7007  06DD  0084               	movwf	4
  7008  06DE  160A  118A  2000  120A  118A  	fcall	stringdir
  7009  06E3  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7010  06E8                     l5104:
  7011                           
  7012                           ;ht1621.c: 438:     Temp_Data=hour%10;
  7013  06E8  300A               	movlw	10
  7014  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  7015  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  7016  06EB  00A0               	movwf	___lwmod@divisor
  7017  06EC  3000               	movlw	0
  7018  06ED  00A1               	movwf	___lwmod@divisor+1
  7019  06EE  082F               	movf	HT1621_Display_Time@hour+1,w
  7020  06EF  00A3               	movwf	___lwmod@dividend+1
  7021  06F0  082E               	movf	HT1621_Display_Time@hour,w
  7022  06F1  00A2               	movwf	___lwmod@dividend
  7023  06F2  160A  118A  2337  120A  118A  	fcall	___lwmod
  7024  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  7025  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  7026  06F9  0820               	movf	?___lwmod,w
  7027  06FA  00B2               	movwf	??_HT1621_Display_Time
  7028  06FB  0832               	movf	??_HT1621_Display_Time,w
  7029  06FC  00B6               	movwf	HT1621_Display_Time@Temp_Data
  7030  06FD                     l5106:
  7031                           
  7032                           ;ht1621.c: 439:     Write1DataHT1621(HT1621_segtab[2], LCD_RAM_Tab[Temp_Data]>>4);
  7033  06FD  0836               	movf	HT1621_Display_Time@Temp_Data,w
  7034  06FE  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7035  06FF  0084               	movwf	4
  7036  0700  1383               	bcf	3,7	;select IRP bank1
  7037  0701  0800               	movf	0,w
  7038  0702  00B2               	movwf	??_HT1621_Display_Time
  7039  0703  3004               	movlw	4
  7040  0704                     u4005:
  7041  0704  1003               	clrc
  7042  0705  0CB2               	rrf	??_HT1621_Display_Time,f
  7043  0706  3EFF               	addlw	-1
  7044  0707  1D03               	skipz
  7045  0708  2F04               	goto	u4005
  7046  0709  0832               	movf	??_HT1621_Display_Time,w
  7047  070A  00B3               	movwf	??_HT1621_Display_Time+1
  7048  070B  0833               	movf	??_HT1621_Display_Time+1,w
  7049  070C  00A4               	movwf	Write1DataHT1621@Dat
  7050  070D  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  7051  070E  0084               	movwf	4
  7052  070F  160A  118A  2000  120A  118A  	fcall	stringdir
  7053  0714  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7054  0719                     l5108:
  7055                           
  7056                           ;ht1621.c: 440:  Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0);
  7057  0719  1283               	bcf	3,5	;RP0=0, select bank0
  7058  071A  1303               	bcf	3,6	;RP1=0, select bank0
  7059  071B  0836               	movf	HT1621_Display_Time@Temp_Data,w
  7060  071C  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7061  071D  0084               	movwf	4
  7062  071E  1383               	bcf	3,7	;select IRP bank1
  7063  071F  0800               	movf	0,w
  7064  0720  00B2               	movwf	??_HT1621_Display_Time
  7065  0721  0832               	movf	??_HT1621_Display_Time,w
  7066  0722  00A4               	movwf	Write1DataHT1621@Dat
  7067  0723  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  7068  0724  0084               	movwf	4
  7069  0725  160A  118A  2000  120A  118A  	fcall	stringdir
  7070  072A  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7071  072F                     l5110:
  7072                           
  7073                           ;ht1621.c: 441:     Temp_Data=min/10;
  7074  072F  300A               	movlw	10
  7075  0730  1283               	bcf	3,5	;RP0=0, select bank0
  7076  0731  1303               	bcf	3,6	;RP1=0, select bank0
  7077  0732  00A6               	movwf	___lwdiv@divisor
  7078  0733  3000               	movlw	0
  7079  0734  00A7               	movwf	___lwdiv@divisor+1
  7080  0735  0831               	movf	HT1621_Display_Time@min+1,w
  7081  0736  00A9               	movwf	___lwdiv@dividend+1
  7082  0737  0830               	movf	HT1621_Display_Time@min,w
  7083  0738  00A8               	movwf	___lwdiv@dividend
  7084  0739  160A  118A  2373  120A  118A  	fcall	___lwdiv
  7085  073E  1283               	bcf	3,5	;RP0=0, select bank0
  7086  073F  1303               	bcf	3,6	;RP1=0, select bank0
  7087  0740  0826               	movf	?___lwdiv,w
  7088  0741  00B2               	movwf	??_HT1621_Display_Time
  7089  0742  0832               	movf	??_HT1621_Display_Time,w
  7090  0743  00B6               	movwf	HT1621_Display_Time@Temp_Data
  7091  0744                     l5112:
  7092                           
  7093                           ;ht1621.c: 442:     Write1DataHT1621(HT1621_segtab[4], LCD_RAM_Tab[Temp_Data]>>4);
  7094  0744  0836               	movf	HT1621_Display_Time@Temp_Data,w
  7095  0745  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7096  0746  0084               	movwf	4
  7097  0747  1383               	bcf	3,7	;select IRP bank1
  7098  0748  0800               	movf	0,w
  7099  0749  00B2               	movwf	??_HT1621_Display_Time
  7100  074A  3004               	movlw	4
  7101  074B                     u4015:
  7102  074B  1003               	clrc
  7103  074C  0CB2               	rrf	??_HT1621_Display_Time,f
  7104  074D  3EFF               	addlw	-1
  7105  074E  1D03               	skipz
  7106  074F  2F4B               	goto	u4015
  7107  0750  0832               	movf	??_HT1621_Display_Time,w
  7108  0751  00B3               	movwf	??_HT1621_Display_Time+1
  7109  0752  0833               	movf	??_HT1621_Display_Time+1,w
  7110  0753  00A4               	movwf	Write1DataHT1621@Dat
  7111  0754  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  7112  0755  0084               	movwf	4
  7113  0756  160A  118A  2000  120A  118A  	fcall	stringdir
  7114  075B  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7115  0760                     l5114:
  7116                           
  7117                           ;ht1621.c: 443:  Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0);
  7118  0760  1283               	bcf	3,5	;RP0=0, select bank0
  7119  0761  1303               	bcf	3,6	;RP1=0, select bank0
  7120  0762  0836               	movf	HT1621_Display_Time@Temp_Data,w
  7121  0763  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7122  0764  0084               	movwf	4
  7123  0765  1383               	bcf	3,7	;select IRP bank1
  7124  0766  0800               	movf	0,w
  7125  0767  00B2               	movwf	??_HT1621_Display_Time
  7126  0768  0832               	movf	??_HT1621_Display_Time,w
  7127  0769  00A4               	movwf	Write1DataHT1621@Dat
  7128  076A  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  7129  076B  0084               	movwf	4
  7130  076C  160A  118A  2000  120A  118A  	fcall	stringdir
  7131  0771  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7132  0776                     l5116:
  7133                           
  7134                           ;ht1621.c: 444:     Temp_Data=min%10;
  7135  0776  300A               	movlw	10
  7136  0777  1283               	bcf	3,5	;RP0=0, select bank0
  7137  0778  1303               	bcf	3,6	;RP1=0, select bank0
  7138  0779  00A0               	movwf	___lwmod@divisor
  7139  077A  3000               	movlw	0
  7140  077B  00A1               	movwf	___lwmod@divisor+1
  7141  077C  0831               	movf	HT1621_Display_Time@min+1,w
  7142  077D  00A3               	movwf	___lwmod@dividend+1
  7143  077E  0830               	movf	HT1621_Display_Time@min,w
  7144  077F  00A2               	movwf	___lwmod@dividend
  7145  0780  160A  118A  2337  120A  118A  	fcall	___lwmod
  7146  0785  1283               	bcf	3,5	;RP0=0, select bank0
  7147  0786  1303               	bcf	3,6	;RP1=0, select bank0
  7148  0787  0820               	movf	?___lwmod,w
  7149  0788  00B2               	movwf	??_HT1621_Display_Time
  7150  0789  0832               	movf	??_HT1621_Display_Time,w
  7151  078A  00B6               	movwf	HT1621_Display_Time@Temp_Data
  7152  078B                     l5118:
  7153                           
  7154                           ;ht1621.c: 445:     Write1DataHT1621(HT1621_segtab[6], LCD_RAM_Tab[Temp_Data]>>4);
  7155  078B  0836               	movf	HT1621_Display_Time@Temp_Data,w
  7156  078C  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7157  078D  0084               	movwf	4
  7158  078E  1383               	bcf	3,7	;select IRP bank1
  7159  078F  0800               	movf	0,w
  7160  0790  00B2               	movwf	??_HT1621_Display_Time
  7161  0791  3004               	movlw	4
  7162  0792                     u4025:
  7163  0792  1003               	clrc
  7164  0793  0CB2               	rrf	??_HT1621_Display_Time,f
  7165  0794  3EFF               	addlw	-1
  7166  0795  1D03               	skipz
  7167  0796  2F92               	goto	u4025
  7168  0797  0832               	movf	??_HT1621_Display_Time,w
  7169  0798  00B3               	movwf	??_HT1621_Display_Time+1
  7170  0799  0833               	movf	??_HT1621_Display_Time+1,w
  7171  079A  00A4               	movwf	Write1DataHT1621@Dat
  7172  079B  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  7173  079C  0084               	movwf	4
  7174  079D  160A  118A  2000  120A  118A  	fcall	stringdir
  7175  07A2  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7176  07A7                     l5120:
  7177                           
  7178                           ;ht1621.c: 446:  Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0);
  7179  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  7180  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  7181  07A9  0836               	movf	HT1621_Display_Time@Temp_Data,w
  7182  07AA  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7183  07AB  0084               	movwf	4
  7184  07AC  1383               	bcf	3,7	;select IRP bank1
  7185  07AD  0800               	movf	0,w
  7186  07AE  00B2               	movwf	??_HT1621_Display_Time
  7187  07AF  0832               	movf	??_HT1621_Display_Time,w
  7188  07B0  00A4               	movwf	Write1DataHT1621@Dat
  7189  07B1  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  7190  07B2  0084               	movwf	4
  7191  07B3  160A  118A  2000  120A  118A  	fcall	stringdir
  7192  07B8  160A  118A  25E3  120A  118A  	fcall	_Write1DataHT1621
  7193  07BD                     l371:
  7194  07BD  0008               	return
  7195  07BE                     __end_of_HT1621_Display_Time:
  7196                           
  7197                           	psect	text24
  7198  0AE6                     __ptext24:	
  7199 ;; *************** function _HT1621_Display_Date *****************
  7200 ;; Defined at:
  7201 ;;		line 451 in file "ht1621.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  mon             2   14[BANK0 ] unsigned int 
  7204 ;;  date            2   16[BANK0 ] unsigned int 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  Temp_Data       1   21[BANK0 ] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         0       4       0       0       0
  7217 ;;      Locals:         0       1       0       0       0
  7218 ;;      Temps:          0       3       0       0       0
  7219 ;;      Totals:         0       8       0       0       0
  7220 ;;Total ram usage:        8 bytes
  7221 ;; Hardware stack levels used: 1
  7222 ;; Hardware stack levels required when called: 5
  7223 ;; This function calls:
  7224 ;;		_Write1DataHT1621
  7225 ;;		___lwdiv
  7226 ;;		___lwmod
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function _HT1621_Display_Date
  7234  0AE6                     _HT1621_Display_Date:
  7235  0AE6                     l5066:	
  7236                           ;incstack = 0
  7237                           ; Regs used in _HT1621_Display_Date: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  7238                           
  7239                           
  7240                           ;ht1621.c: 452: unsigned char Temp_Data;;ht1621.c: 453:     Temp_Data=mon/10;
  7241  0AE6  300A               	movlw	10
  7242  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  7243  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  7244  0AE9  00A6               	movwf	___lwdiv@divisor
  7245  0AEA  3000               	movlw	0
  7246  0AEB  00A7               	movwf	___lwdiv@divisor+1
  7247  0AEC  082F               	movf	HT1621_Display_Date@mon+1,w
  7248  0AED  00A9               	movwf	___lwdiv@dividend+1
  7249  0AEE  082E               	movf	HT1621_Display_Date@mon,w
  7250  0AEF  00A8               	movwf	___lwdiv@dividend
  7251  0AF0  160A  118A  2373  120A  158A  	fcall	___lwdiv
  7252  0AF5  1283               	bcf	3,5	;RP0=0, select bank0
  7253  0AF6  1303               	bcf	3,6	;RP1=0, select bank0
  7254  0AF7  0826               	movf	?___lwdiv,w
  7255  0AF8  00B2               	movwf	??_HT1621_Display_Date
  7256  0AF9  0832               	movf	??_HT1621_Display_Date,w
  7257  0AFA  00B5               	movwf	HT1621_Display_Date@Temp_Data
  7258  0AFB                     l5068:
  7259                           
  7260                           ;ht1621.c: 454:     if(Temp_Data==0){
  7261  0AFB  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7262  0AFC  1D03               	btfss	3,2
  7263  0AFD  2AFF               	goto	u3921
  7264  0AFE  2B00               	goto	u3920
  7265  0AFF                     u3921:
  7266  0AFF  2B1D               	goto	l5072
  7267  0B00                     u3920:
  7268  0B00                     l5070:
  7269                           
  7270                           ;ht1621.c: 455:         Write1DataHT1621(HT1621_segtab[0], 0);
  7271  0B00  01A4               	clrf	Write1DataHT1621@Dat
  7272  0B01  3001               	movlw	low (_HT1621_segtab-__stringbase)
  7273  0B02  0084               	movwf	4
  7274  0B03  160A  118A  2000  120A  158A  	fcall	stringdir
  7275  0B08  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7276                           
  7277                           ;ht1621.c: 456:         Write1DataHT1621(HT1621_segtab[1], 0);
  7278  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  7279  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  7280  0B0F  01A4               	clrf	Write1DataHT1621@Dat
  7281  0B10  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  7282  0B11  0084               	movwf	4
  7283  0B12  160A  118A  2000  120A  158A  	fcall	stringdir
  7284  0B17  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7285                           
  7286                           ;ht1621.c: 457:     }
  7287  0B1C  2B4F               	goto	l5074
  7288  0B1D                     l5072:
  7289                           
  7290                           ;ht1621.c: 459:         Write1DataHT1621(HT1621_segtab[0], LCD_RAM_Tab[Temp_Data]>>4);
  7291  0B1D  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7292  0B1E  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7293  0B1F  0084               	movwf	4
  7294  0B20  1383               	bcf	3,7	;select IRP bank1
  7295  0B21  0800               	movf	0,w
  7296  0B22  00B2               	movwf	??_HT1621_Display_Date
  7297  0B23  3004               	movlw	4
  7298  0B24                     u3935:
  7299  0B24  1003               	clrc
  7300  0B25  0CB2               	rrf	??_HT1621_Display_Date,f
  7301  0B26  3EFF               	addlw	-1
  7302  0B27  1D03               	skipz
  7303  0B28  2B24               	goto	u3935
  7304  0B29  0832               	movf	??_HT1621_Display_Date,w
  7305  0B2A  00B3               	movwf	??_HT1621_Display_Date+1
  7306  0B2B  0833               	movf	??_HT1621_Display_Date+1,w
  7307  0B2C  00A4               	movwf	Write1DataHT1621@Dat
  7308  0B2D  3001               	movlw	low (_HT1621_segtab-__stringbase)
  7309  0B2E  0084               	movwf	4
  7310  0B2F  160A  118A  2000  120A  158A  	fcall	stringdir
  7311  0B34  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7312                           
  7313                           ;ht1621.c: 460:         Write1DataHT1621(HT1621_segtab[1], LCD_RAM_Tab[Temp_Data]>>0);
  7314  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  7315  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  7316  0B3B  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7317  0B3C  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7318  0B3D  0084               	movwf	4
  7319  0B3E  1383               	bcf	3,7	;select IRP bank1
  7320  0B3F  0800               	movf	0,w
  7321  0B40  00B2               	movwf	??_HT1621_Display_Date
  7322  0B41  0832               	movf	??_HT1621_Display_Date,w
  7323  0B42  00A4               	movwf	Write1DataHT1621@Dat
  7324  0B43  3002               	movlw	low (((_HT1621_segtab+1)-__stringbase)| (0+32768))
  7325  0B44  0084               	movwf	4
  7326  0B45  160A  118A  2000  120A  158A  	fcall	stringdir
  7327  0B4A  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7328  0B4F                     l5074:
  7329                           
  7330                           ;ht1621.c: 462:     Temp_Data=mon%10;
  7331  0B4F  300A               	movlw	10
  7332  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  7333  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  7334  0B52  00A0               	movwf	___lwmod@divisor
  7335  0B53  3000               	movlw	0
  7336  0B54  00A1               	movwf	___lwmod@divisor+1
  7337  0B55  082F               	movf	HT1621_Display_Date@mon+1,w
  7338  0B56  00A3               	movwf	___lwmod@dividend+1
  7339  0B57  082E               	movf	HT1621_Display_Date@mon,w
  7340  0B58  00A2               	movwf	___lwmod@dividend
  7341  0B59  160A  118A  2337  120A  158A  	fcall	___lwmod
  7342  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  7343  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  7344  0B60  0820               	movf	?___lwmod,w
  7345  0B61  00B2               	movwf	??_HT1621_Display_Date
  7346  0B62  0832               	movf	??_HT1621_Display_Date,w
  7347  0B63  00B5               	movwf	HT1621_Display_Date@Temp_Data
  7348  0B64                     l5076:
  7349                           
  7350                           ;ht1621.c: 463:     Write1DataHT1621(HT1621_segtab[2], LCD_RAM_Tab[Temp_Data]>>4);
  7351  0B64  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7352  0B65  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7353  0B66  0084               	movwf	4
  7354  0B67  1383               	bcf	3,7	;select IRP bank1
  7355  0B68  0800               	movf	0,w
  7356  0B69  00B2               	movwf	??_HT1621_Display_Date
  7357  0B6A  3004               	movlw	4
  7358  0B6B                     u3945:
  7359  0B6B  1003               	clrc
  7360  0B6C  0CB2               	rrf	??_HT1621_Display_Date,f
  7361  0B6D  3EFF               	addlw	-1
  7362  0B6E  1D03               	skipz
  7363  0B6F  2B6B               	goto	u3945
  7364  0B70  0832               	movf	??_HT1621_Display_Date,w
  7365  0B71  00B3               	movwf	??_HT1621_Display_Date+1
  7366  0B72  0833               	movf	??_HT1621_Display_Date+1,w
  7367  0B73  00A4               	movwf	Write1DataHT1621@Dat
  7368  0B74  3003               	movlw	low (((_HT1621_segtab+2)-__stringbase)| (0+32768))
  7369  0B75  0084               	movwf	4
  7370  0B76  160A  118A  2000  120A  158A  	fcall	stringdir
  7371  0B7B  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7372  0B80                     l5078:
  7373                           
  7374                           ;ht1621.c: 464:  Write1DataHT1621(HT1621_segtab[3], LCD_RAM_Tab[Temp_Data]>>0);
  7375  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  7376  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  7377  0B82  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7378  0B83  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7379  0B84  0084               	movwf	4
  7380  0B85  1383               	bcf	3,7	;select IRP bank1
  7381  0B86  0800               	movf	0,w
  7382  0B87  00B2               	movwf	??_HT1621_Display_Date
  7383  0B88  0832               	movf	??_HT1621_Display_Date,w
  7384  0B89  00A4               	movwf	Write1DataHT1621@Dat
  7385  0B8A  3004               	movlw	low (((_HT1621_segtab+3)-__stringbase)| (0+32768))
  7386  0B8B  0084               	movwf	4
  7387  0B8C  160A  118A  2000  120A  158A  	fcall	stringdir
  7388  0B91  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7389  0B96                     l5080:
  7390                           
  7391                           ;ht1621.c: 466:     Temp_Data=date/10;
  7392  0B96  300A               	movlw	10
  7393  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  7394  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  7395  0B99  00A6               	movwf	___lwdiv@divisor
  7396  0B9A  3000               	movlw	0
  7397  0B9B  00A7               	movwf	___lwdiv@divisor+1
  7398  0B9C  0831               	movf	HT1621_Display_Date@date+1,w
  7399  0B9D  00A9               	movwf	___lwdiv@dividend+1
  7400  0B9E  0830               	movf	HT1621_Display_Date@date,w
  7401  0B9F  00A8               	movwf	___lwdiv@dividend
  7402  0BA0  160A  118A  2373  120A  158A  	fcall	___lwdiv
  7403  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  7404  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  7405  0BA7  0826               	movf	?___lwdiv,w
  7406  0BA8  00B2               	movwf	??_HT1621_Display_Date
  7407  0BA9  0832               	movf	??_HT1621_Display_Date,w
  7408  0BAA  00B5               	movwf	HT1621_Display_Date@Temp_Data
  7409  0BAB                     l5082:
  7410                           
  7411                           ;ht1621.c: 467:     Write1DataHT1621(HT1621_segtab[4], (LCD_RAM_Tab[Temp_Data]|0x80)>>4)
      +                          ;
  7412  0BAB  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7413  0BAC  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7414  0BAD  0084               	movwf	4
  7415  0BAE  3080               	movlw	128
  7416  0BAF  1383               	bcf	3,7	;select IRP bank1
  7417  0BB0  0400               	iorwf	0,w
  7418  0BB1  00B2               	movwf	??_HT1621_Display_Date
  7419  0BB2  3000               	movlw	0
  7420  0BB3  00B3               	movwf	??_HT1621_Display_Date+1
  7421  0BB4  3004               	movlw	4
  7422  0BB5  00FF               	movwf	btemp+1
  7423  0BB6                     u3955:
  7424  0BB6  0D33               	rlf	??_HT1621_Display_Date+1,w
  7425  0BB7  0CB3               	rrf	??_HT1621_Display_Date+1,f
  7426  0BB8  0CB2               	rrf	??_HT1621_Display_Date,f
  7427  0BB9  0BFF               	decfsz	btemp+1,f
  7428  0BBA  2BB6               	goto	u3955
  7429  0BBB  0832               	movf	??_HT1621_Display_Date,w
  7430  0BBC  00B4               	movwf	??_HT1621_Display_Date+2
  7431  0BBD  0834               	movf	??_HT1621_Display_Date+2,w
  7432  0BBE  00A4               	movwf	Write1DataHT1621@Dat
  7433  0BBF  3005               	movlw	low (((_HT1621_segtab+4)-__stringbase)| (0+32768))
  7434  0BC0  0084               	movwf	4
  7435  0BC1  160A  118A  2000  120A  158A  	fcall	stringdir
  7436  0BC6  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7437  0BCB                     l5084:
  7438                           
  7439                           ;ht1621.c: 468:  Write1DataHT1621(HT1621_segtab[5], LCD_RAM_Tab[Temp_Data]>>0);
  7440  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  7441  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  7442  0BCD  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7443  0BCE  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7444  0BCF  0084               	movwf	4
  7445  0BD0  1383               	bcf	3,7	;select IRP bank1
  7446  0BD1  0800               	movf	0,w
  7447  0BD2  00B2               	movwf	??_HT1621_Display_Date
  7448  0BD3  0832               	movf	??_HT1621_Display_Date,w
  7449  0BD4  00A4               	movwf	Write1DataHT1621@Dat
  7450  0BD5  3006               	movlw	low (((_HT1621_segtab+5)-__stringbase)| (0+32768))
  7451  0BD6  0084               	movwf	4
  7452  0BD7  160A  118A  2000  120A  158A  	fcall	stringdir
  7453  0BDC  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7454  0BE1                     l5086:
  7455                           
  7456                           ;ht1621.c: 469:     Temp_Data=date%10;
  7457  0BE1  300A               	movlw	10
  7458  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0BE4  00A0               	movwf	___lwmod@divisor
  7461  0BE5  3000               	movlw	0
  7462  0BE6  00A1               	movwf	___lwmod@divisor+1
  7463  0BE7  0831               	movf	HT1621_Display_Date@date+1,w
  7464  0BE8  00A3               	movwf	___lwmod@dividend+1
  7465  0BE9  0830               	movf	HT1621_Display_Date@date,w
  7466  0BEA  00A2               	movwf	___lwmod@dividend
  7467  0BEB  160A  118A  2337  120A  158A  	fcall	___lwmod
  7468  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  7469  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  7470  0BF2  0820               	movf	?___lwmod,w
  7471  0BF3  00B2               	movwf	??_HT1621_Display_Date
  7472  0BF4  0832               	movf	??_HT1621_Display_Date,w
  7473  0BF5  00B5               	movwf	HT1621_Display_Date@Temp_Data
  7474  0BF6                     l5088:
  7475                           
  7476                           ;ht1621.c: 470:     Write1DataHT1621(HT1621_segtab[6], LCD_RAM_Tab[Temp_Data]>>4);
  7477  0BF6  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7478  0BF7  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7479  0BF8  0084               	movwf	4
  7480  0BF9  1383               	bcf	3,7	;select IRP bank1
  7481  0BFA  0800               	movf	0,w
  7482  0BFB  00B2               	movwf	??_HT1621_Display_Date
  7483  0BFC  3004               	movlw	4
  7484  0BFD                     u3965:
  7485  0BFD  1003               	clrc
  7486  0BFE  0CB2               	rrf	??_HT1621_Display_Date,f
  7487  0BFF  3EFF               	addlw	-1
  7488  0C00  1D03               	skipz
  7489  0C01  2BFD               	goto	u3965
  7490  0C02  0832               	movf	??_HT1621_Display_Date,w
  7491  0C03  00B3               	movwf	??_HT1621_Display_Date+1
  7492  0C04  0833               	movf	??_HT1621_Display_Date+1,w
  7493  0C05  00A4               	movwf	Write1DataHT1621@Dat
  7494  0C06  3007               	movlw	low (((_HT1621_segtab+6)-__stringbase)| (0+32768))
  7495  0C07  0084               	movwf	4
  7496  0C08  160A  118A  2000  120A  158A  	fcall	stringdir
  7497  0C0D  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7498  0C12                     l5090:
  7499                           
  7500                           ;ht1621.c: 471:  Write1DataHT1621(HT1621_segtab[7], LCD_RAM_Tab[Temp_Data]>>0);
  7501  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  7502  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  7503  0C14  0835               	movf	HT1621_Display_Date@Temp_Data,w
  7504  0C15  3EA0               	addlw	(low (_LCD_RAM_Tab| 0))& (0+255)
  7505  0C16  0084               	movwf	4
  7506  0C17  1383               	bcf	3,7	;select IRP bank1
  7507  0C18  0800               	movf	0,w
  7508  0C19  00B2               	movwf	??_HT1621_Display_Date
  7509  0C1A  0832               	movf	??_HT1621_Display_Date,w
  7510  0C1B  00A4               	movwf	Write1DataHT1621@Dat
  7511  0C1C  3008               	movlw	low (((_HT1621_segtab+7)-__stringbase)| (0+32768))
  7512  0C1D  0084               	movwf	4
  7513  0C1E  160A  118A  2000  120A  158A  	fcall	stringdir
  7514  0C23  160A  118A  25E3  120A  158A  	fcall	_Write1DataHT1621
  7515  0C28                     l376:
  7516  0C28  0008               	return
  7517  0C29                     __end_of_HT1621_Display_Date:
  7518                           
  7519                           	psect	text25
  7520  1337                     __ptext25:	
  7521 ;; *************** function ___lwmod *****************
  7522 ;; Defined at:
  7523 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  divisor         2    0[BANK0 ] unsigned int 
  7526 ;;  dividend        2    2[BANK0 ] unsigned int 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  counter         1    5[BANK0 ] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  2    0[BANK0 ] unsigned int 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7538 ;;      Params:         0       4       0       0       0
  7539 ;;      Locals:         0       1       0       0       0
  7540 ;;      Temps:          0       1       0       0       0
  7541 ;;      Totals:         0       6       0       0       0
  7542 ;;Total ram usage:        6 bytes
  7543 ;; Hardware stack levels used: 1
  7544 ;; Hardware stack levels required when called: 2
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_main
  7549 ;;		_HT1621_Display_Time
  7550 ;;		_HT1621_Display_Date
  7551 ;;		_HT1621_Display_Year
  7552 ;;		_HT1621_Display
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           
  7557                           ;psect for function ___lwmod
  7558  1337                     ___lwmod:
  7559  1337                     l4972:	
  7560                           ;incstack = 0
  7561                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7562                           
  7563  1337  1283               	bcf	3,5	;RP0=0, select bank0
  7564  1338  1303               	bcf	3,6	;RP1=0, select bank0
  7565  1339  0820               	movf	___lwmod@divisor,w
  7566  133A  0421               	iorwf	___lwmod@divisor+1,w
  7567  133B  1903               	btfsc	3,2
  7568  133C  2B3E               	goto	u3811
  7569  133D  2B3F               	goto	u3810
  7570  133E                     u3811:
  7571  133E  2B6E               	goto	l4990
  7572  133F                     u3810:
  7573  133F                     l4974:
  7574  133F  01A5               	clrf	___lwmod@counter
  7575  1340  0AA5               	incf	___lwmod@counter,f
  7576  1341  2B4D               	goto	l4980
  7577  1342                     l4976:
  7578  1342  3001               	movlw	1
  7579  1343                     u3825:
  7580  1343  1003               	clrc
  7581  1344  0DA0               	rlf	___lwmod@divisor,f
  7582  1345  0DA1               	rlf	___lwmod@divisor+1,f
  7583  1346  3EFF               	addlw	-1
  7584  1347  1D03               	skipz
  7585  1348  2B43               	goto	u3825
  7586  1349                     l4978:
  7587  1349  3001               	movlw	1
  7588  134A  00A4               	movwf	??___lwmod
  7589  134B  0824               	movf	??___lwmod,w
  7590  134C  07A5               	addwf	___lwmod@counter,f
  7591  134D                     l4980:
  7592  134D  1FA1               	btfss	___lwmod@divisor+1,7
  7593  134E  2B50               	goto	u3831
  7594  134F  2B51               	goto	u3830
  7595  1350                     u3831:
  7596  1350  2B42               	goto	l4976
  7597  1351                     u3830:
  7598  1351                     l4982:
  7599  1351  0821               	movf	___lwmod@divisor+1,w
  7600  1352  0223               	subwf	___lwmod@dividend+1,w
  7601  1353  1D03               	skipz
  7602  1354  2B57               	goto	u3845
  7603  1355  0820               	movf	___lwmod@divisor,w
  7604  1356  0222               	subwf	___lwmod@dividend,w
  7605  1357                     u3845:
  7606  1357  1C03               	skipc
  7607  1358  2B5A               	goto	u3841
  7608  1359  2B5B               	goto	u3840
  7609  135A                     u3841:
  7610  135A  2B61               	goto	l4986
  7611  135B                     u3840:
  7612  135B                     l4984:
  7613  135B  0820               	movf	___lwmod@divisor,w
  7614  135C  02A2               	subwf	___lwmod@dividend,f
  7615  135D  0821               	movf	___lwmod@divisor+1,w
  7616  135E  1C03               	skipc
  7617  135F  03A3               	decf	___lwmod@dividend+1,f
  7618  1360  02A3               	subwf	___lwmod@dividend+1,f
  7619  1361                     l4986:
  7620  1361  3001               	movlw	1
  7621  1362                     u3855:
  7622  1362  1003               	clrc
  7623  1363  0CA1               	rrf	___lwmod@divisor+1,f
  7624  1364  0CA0               	rrf	___lwmod@divisor,f
  7625  1365  3EFF               	addlw	-1
  7626  1366  1D03               	skipz
  7627  1367  2B62               	goto	u3855
  7628  1368                     l4988:
  7629  1368  3001               	movlw	1
  7630  1369  02A5               	subwf	___lwmod@counter,f
  7631  136A  1D03               	btfss	3,2
  7632  136B  2B6D               	goto	u3861
  7633  136C  2B6E               	goto	u3860
  7634  136D                     u3861:
  7635  136D  2B51               	goto	l4982
  7636  136E                     u3860:
  7637  136E                     l4990:
  7638  136E  0823               	movf	___lwmod@dividend+1,w
  7639  136F  00A1               	movwf	?___lwmod+1
  7640  1370  0822               	movf	___lwmod@dividend,w
  7641  1371  00A0               	movwf	?___lwmod
  7642  1372                     l892:
  7643  1372  0008               	return
  7644  1373                     __end_of___lwmod:
  7645                           
  7646                           	psect	text26
  7647  1373                     __ptext26:	
  7648 ;; *************** function ___lwdiv *****************
  7649 ;; Defined at:
  7650 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  divisor         2    6[BANK0 ] unsigned int 
  7653 ;;  dividend        2    8[BANK0 ] unsigned int 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  quotient        2   11[BANK0 ] unsigned int 
  7656 ;;  counter         1   13[BANK0 ] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  2    6[BANK0 ] unsigned int 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7666 ;;      Params:         0       4       0       0       0
  7667 ;;      Locals:         0       3       0       0       0
  7668 ;;      Temps:          0       1       0       0       0
  7669 ;;      Totals:         0       8       0       0       0
  7670 ;;Total ram usage:        8 bytes
  7671 ;; Hardware stack levels used: 1
  7672 ;; Hardware stack levels required when called: 2
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_main
  7677 ;;		_HT1621_Display_Time
  7678 ;;		_HT1621_Display_Date
  7679 ;;		_HT1621_Display_Year
  7680 ;;		_HT1621_Display
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           
  7685                           ;psect for function ___lwdiv
  7686  1373                     ___lwdiv:
  7687  1373                     l3216:	
  7688                           ;incstack = 0
  7689                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7690                           
  7691  1373  1283               	bcf	3,5	;RP0=0, select bank0
  7692  1374  1303               	bcf	3,6	;RP1=0, select bank0
  7693  1375  01AB               	clrf	___lwdiv@quotient
  7694  1376  01AC               	clrf	___lwdiv@quotient+1
  7695  1377                     l3218:
  7696  1377  0826               	movf	___lwdiv@divisor,w
  7697  1378  0427               	iorwf	___lwdiv@divisor+1,w
  7698  1379  1903               	btfsc	3,2
  7699  137A  2B7C               	goto	u2181
  7700  137B  2B7D               	goto	u2180
  7701  137C                     u2181:
  7702  137C  2BB4               	goto	l3238
  7703  137D                     u2180:
  7704  137D                     l3220:
  7705  137D  01AD               	clrf	___lwdiv@counter
  7706  137E  0AAD               	incf	___lwdiv@counter,f
  7707  137F  2B8B               	goto	l3226
  7708  1380                     l3222:
  7709  1380  3001               	movlw	1
  7710  1381                     u2195:
  7711  1381  1003               	clrc
  7712  1382  0DA6               	rlf	___lwdiv@divisor,f
  7713  1383  0DA7               	rlf	___lwdiv@divisor+1,f
  7714  1384  3EFF               	addlw	-1
  7715  1385  1D03               	skipz
  7716  1386  2B81               	goto	u2195
  7717  1387                     l3224:
  7718  1387  3001               	movlw	1
  7719  1388  00AA               	movwf	??___lwdiv
  7720  1389  082A               	movf	??___lwdiv,w
  7721  138A  07AD               	addwf	___lwdiv@counter,f
  7722  138B                     l3226:
  7723  138B  1FA7               	btfss	___lwdiv@divisor+1,7
  7724  138C  2B8E               	goto	u2201
  7725  138D  2B8F               	goto	u2200
  7726  138E                     u2201:
  7727  138E  2B80               	goto	l3222
  7728  138F                     u2200:
  7729  138F                     l3228:
  7730  138F  3001               	movlw	1
  7731  1390                     u2215:
  7732  1390  1003               	clrc
  7733  1391  0DAB               	rlf	___lwdiv@quotient,f
  7734  1392  0DAC               	rlf	___lwdiv@quotient+1,f
  7735  1393  3EFF               	addlw	-1
  7736  1394  1D03               	skipz
  7737  1395  2B90               	goto	u2215
  7738  1396  0827               	movf	___lwdiv@divisor+1,w
  7739  1397  0229               	subwf	___lwdiv@dividend+1,w
  7740  1398  1D03               	skipz
  7741  1399  2B9C               	goto	u2225
  7742  139A  0826               	movf	___lwdiv@divisor,w
  7743  139B  0228               	subwf	___lwdiv@dividend,w
  7744  139C                     u2225:
  7745  139C  1C03               	skipc
  7746  139D  2B9F               	goto	u2221
  7747  139E  2BA0               	goto	u2220
  7748  139F                     u2221:
  7749  139F  2BA7               	goto	l3234
  7750  13A0                     u2220:
  7751  13A0                     l3230:
  7752  13A0  0826               	movf	___lwdiv@divisor,w
  7753  13A1  02A8               	subwf	___lwdiv@dividend,f
  7754  13A2  0827               	movf	___lwdiv@divisor+1,w
  7755  13A3  1C03               	skipc
  7756  13A4  03A9               	decf	___lwdiv@dividend+1,f
  7757  13A5  02A9               	subwf	___lwdiv@dividend+1,f
  7758  13A6                     l3232:
  7759  13A6  142B               	bsf	___lwdiv@quotient,0
  7760  13A7                     l3234:
  7761  13A7  3001               	movlw	1
  7762  13A8                     u2235:
  7763  13A8  1003               	clrc
  7764  13A9  0CA7               	rrf	___lwdiv@divisor+1,f
  7765  13AA  0CA6               	rrf	___lwdiv@divisor,f
  7766  13AB  3EFF               	addlw	-1
  7767  13AC  1D03               	skipz
  7768  13AD  2BA8               	goto	u2235
  7769  13AE                     l3236:
  7770  13AE  3001               	movlw	1
  7771  13AF  02AD               	subwf	___lwdiv@counter,f
  7772  13B0  1D03               	btfss	3,2
  7773  13B1  2BB3               	goto	u2241
  7774  13B2  2BB4               	goto	u2240
  7775  13B3                     u2241:
  7776  13B3  2B8F               	goto	l3228
  7777  13B4                     u2240:
  7778  13B4                     l3238:
  7779  13B4  082C               	movf	___lwdiv@quotient+1,w
  7780  13B5  00A7               	movwf	?___lwdiv+1
  7781  13B6  082B               	movf	___lwdiv@quotient,w
  7782  13B7  00A6               	movwf	?___lwdiv
  7783  13B8                     l882:
  7784  13B8  0008               	return
  7785  13B9                     __end_of___lwdiv:
  7786                           
  7787                           	psect	text27
  7788  15E3                     __ptext27:	
  7789 ;; *************** function _Write1DataHT1621 *****************
  7790 ;; Defined at:
  7791 ;;		line 106 in file "ht1621.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  Addr            1    wreg     unsigned char 
  7794 ;;  Dat             1    4[BANK0 ] unsigned char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  Addr            1    7[BANK0 ] unsigned char 
  7797 ;;  Shift           1    9[BANK0 ] unsigned char 
  7798 ;;  i               1    8[BANK0 ] unsigned char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, pclath, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7808 ;;      Params:         0       1       0       0       0
  7809 ;;      Locals:         0       3       0       0       0
  7810 ;;      Temps:          0       2       0       0       0
  7811 ;;      Totals:         0       6       0       0       0
  7812 ;;Total ram usage:        6 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 4
  7815 ;; This function calls:
  7816 ;;		_HT1621_Delay_us
  7817 ;;		_WriteClockHT1621
  7818 ;; This function is called by:
  7819 ;;		_HT1621_Display_Time
  7820 ;;		_HT1621_Display_Date
  7821 ;;		_HT1621_Display_Year
  7822 ;;		_IR_data_display
  7823 ;;		_Setting_display
  7824 ;;		_HT1621_DisSegOn
  7825 ;;		_HT1621_DisSegOff
  7826 ;;		_HT1621_Display
  7827 ;;		_IR_test_display
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function _Write1DataHT1621
  7833  15E3                     _Write1DataHT1621:
  7834                           
  7835                           ;incstack = 0
  7836                           ; Regs used in _Write1DataHT1621: [wreg+status,2+status,0+pclath+cstack]
  7837                           ;Write1DataHT1621@Addr stored from wreg
  7838  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  7839  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  7840  15E5  00A7               	movwf	Write1DataHT1621@Addr
  7841  15E6                     l4792:
  7842                           
  7843                           ;ht1621.c: 106: void Write1DataHT1621(unsigned char Addr,unsigned char Dat);ht1621.c: 10
      +                          7: {;ht1621.c: 108:  unsigned char i;;ht1621.c: 109:  unsigned char Shift;;ht1621.c: 111
      +                          :  RD5 = 0;
  7844  15E6  1288               	bcf	8,5	;volatile
  7845  15E7                     l4794:
  7846                           
  7847                           ;ht1621.c: 112:  HT1621_Delay_us(10);
  7848  15E7  300A               	movlw	10
  7849  15E8  00A0               	movwf	HT1621_Delay_us@ucDat
  7850  15E9  3000               	movlw	0
  7851  15EA  00A1               	movwf	HT1621_Delay_us@ucDat+1
  7852  15EB  160A  118A  225E  160A  118A  	fcall	_HT1621_Delay_us
  7853  15F0                     l4796:
  7854                           
  7855                           ;ht1621.c: 114:  RD7 = 1;
  7856  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  7857  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  7858  15F2  1788               	bsf	8,7	;volatile
  7859                           
  7860                           ;ht1621.c: 115:  WriteClockHT1621();
  7861  15F3  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  7862  15F8                     l4798:
  7863                           
  7864                           ;ht1621.c: 116:  RD7 = 0;
  7865  15F8  1283               	bcf	3,5	;RP0=0, select bank0
  7866  15F9  1303               	bcf	3,6	;RP1=0, select bank0
  7867  15FA  1388               	bcf	8,7	;volatile
  7868                           
  7869                           ;ht1621.c: 117:  WriteClockHT1621();
  7870  15FB  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  7871  1600                     l4800:
  7872                           
  7873                           ;ht1621.c: 118:  RD7 = 1;
  7874  1600  1283               	bcf	3,5	;RP0=0, select bank0
  7875  1601  1303               	bcf	3,6	;RP1=0, select bank0
  7876  1602  1788               	bsf	8,7	;volatile
  7877                           
  7878                           ;ht1621.c: 119:  WriteClockHT1621();
  7879  1603  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  7880  1608                     l4802:
  7881                           
  7882                           ;ht1621.c: 121:  Shift = 0x20;
  7883  1608  3020               	movlw	32
  7884  1609  1283               	bcf	3,5	;RP0=0, select bank0
  7885  160A  1303               	bcf	3,6	;RP1=0, select bank0
  7886  160B  00A5               	movwf	??_Write1DataHT1621
  7887  160C  0825               	movf	??_Write1DataHT1621,w
  7888  160D  00A9               	movwf	Write1DataHT1621@Shift
  7889  160E                     l4804:
  7890                           
  7891                           ;ht1621.c: 122:  for( i = 0; i < HT1621_addrbit; i++)
  7892  160E  01A8               	clrf	Write1DataHT1621@i
  7893  160F  2E2B               	goto	l4816
  7894  1610                     l4806:
  7895                           
  7896                           ;ht1621.c: 123:  {;ht1621.c: 124:   if(Addr & Shift)
  7897  1610  0827               	movf	Write1DataHT1621@Addr,w
  7898  1611  0529               	andwf	Write1DataHT1621@Shift,w
  7899  1612  1903               	btfsc	3,2
  7900  1613  2E15               	goto	u3581
  7901  1614  2E16               	goto	u3580
  7902  1615                     u3581:
  7903  1615  2E18               	goto	l297
  7904  1616                     u3580:
  7905  1616                     l4808:
  7906                           
  7907                           ;ht1621.c: 125:    RD7 = 1;
  7908  1616  1788               	bsf	8,7	;volatile
  7909  1617  2E19               	goto	l4810
  7910  1618                     l297:	
  7911                           ;ht1621.c: 126:   else
  7912                           
  7913                           
  7914                           ;ht1621.c: 127:    RD7 = 0;
  7915  1618  1388               	bcf	8,7	;volatile
  7916  1619                     l4810:
  7917                           
  7918                           ;ht1621.c: 128:   WriteClockHT1621();
  7919  1619  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  7920  161E                     l4812:
  7921                           
  7922                           ;ht1621.c: 129:   Shift = Shift >> 1;
  7923  161E  1283               	bcf	3,5	;RP0=0, select bank0
  7924  161F  1303               	bcf	3,6	;RP1=0, select bank0
  7925  1620  0829               	movf	Write1DataHT1621@Shift,w
  7926  1621  00A5               	movwf	??_Write1DataHT1621
  7927  1622  1003               	clrc
  7928  1623  0C25               	rrf	??_Write1DataHT1621,w
  7929  1624  00A6               	movwf	??_Write1DataHT1621+1
  7930  1625  0826               	movf	??_Write1DataHT1621+1,w
  7931  1626  00A9               	movwf	Write1DataHT1621@Shift
  7932  1627                     l4814:
  7933                           
  7934                           ;ht1621.c: 130:  }
  7935  1627  3001               	movlw	1
  7936  1628  00A5               	movwf	??_Write1DataHT1621
  7937  1629  0825               	movf	??_Write1DataHT1621,w
  7938  162A  07A8               	addwf	Write1DataHT1621@i,f
  7939  162B                     l4816:
  7940  162B  3006               	movlw	6
  7941  162C  0228               	subwf	Write1DataHT1621@i,w
  7942  162D  1C03               	skipc
  7943  162E  2E30               	goto	u3591
  7944  162F  2E31               	goto	u3590
  7945  1630                     u3591:
  7946  1630  2E10               	goto	l4806
  7947  1631                     u3590:
  7948  1631                     l299:
  7949                           
  7950                           ;ht1621.c: 132:  Shift = 0x01;
  7951  1631  01A9               	clrf	Write1DataHT1621@Shift
  7952  1632  0AA9               	incf	Write1DataHT1621@Shift,f
  7953  1633                     l4818:
  7954                           
  7955                           ;ht1621.c: 133:  for (i = 0; i < 4; i++)
  7956  1633  01A8               	clrf	Write1DataHT1621@i
  7957  1634                     l4824:
  7958                           
  7959                           ;ht1621.c: 134:  {;ht1621.c: 135:   if( Dat & Shift)
  7960  1634  0824               	movf	Write1DataHT1621@Dat,w
  7961  1635  0529               	andwf	Write1DataHT1621@Shift,w
  7962  1636  1903               	btfsc	3,2
  7963  1637  2E39               	goto	u3601
  7964  1638  2E3A               	goto	u3600
  7965  1639                     u3601:
  7966  1639  2E3C               	goto	l302
  7967  163A                     u3600:
  7968  163A                     l4826:
  7969                           
  7970                           ;ht1621.c: 136:    RD7 = 1;
  7971  163A  1788               	bsf	8,7	;volatile
  7972  163B  2E3D               	goto	l4828
  7973  163C                     l302:	
  7974                           ;ht1621.c: 137:   else
  7975                           
  7976                           
  7977                           ;ht1621.c: 138:    RD7 = 0;
  7978  163C  1388               	bcf	8,7	;volatile
  7979  163D                     l4828:
  7980                           
  7981                           ;ht1621.c: 139:   WriteClockHT1621();
  7982  163D  120A  158A  2001  160A  118A  	fcall	_WriteClockHT1621
  7983  1642                     l4830:
  7984                           
  7985                           ;ht1621.c: 140:   Shift = Shift << 1;
  7986  1642  1283               	bcf	3,5	;RP0=0, select bank0
  7987  1643  1303               	bcf	3,6	;RP1=0, select bank0
  7988  1644  0829               	movf	Write1DataHT1621@Shift,w
  7989  1645  00A5               	movwf	??_Write1DataHT1621
  7990  1646  0725               	addwf	??_Write1DataHT1621,w
  7991  1647  00A6               	movwf	??_Write1DataHT1621+1
  7992  1648  0826               	movf	??_Write1DataHT1621+1,w
  7993  1649  00A9               	movwf	Write1DataHT1621@Shift
  7994  164A                     l4832:
  7995                           
  7996                           ;ht1621.c: 141:  }
  7997  164A  3001               	movlw	1
  7998  164B  00A5               	movwf	??_Write1DataHT1621
  7999  164C  0825               	movf	??_Write1DataHT1621,w
  8000  164D  07A8               	addwf	Write1DataHT1621@i,f
  8001  164E                     l4834:
  8002  164E  3004               	movlw	4
  8003  164F  0228               	subwf	Write1DataHT1621@i,w
  8004  1650  1C03               	skipc
  8005  1651  2E53               	goto	u3611
  8006  1652  2E54               	goto	u3610
  8007  1653                     u3611:
  8008  1653  2E34               	goto	l4824
  8009  1654                     u3610:
  8010  1654                     l301:
  8011                           
  8012                           ;ht1621.c: 142:  RD5 = 1;
  8013  1654  1688               	bsf	8,5	;volatile
  8014  1655                     l4836:
  8015                           
  8016                           ;ht1621.c: 143:  HT1621_Delay_us(10);
  8017  1655  300A               	movlw	10
  8018  1656  00A0               	movwf	HT1621_Delay_us@ucDat
  8019  1657  3000               	movlw	0
  8020  1658  00A1               	movwf	HT1621_Delay_us@ucDat+1
  8021  1659  160A  118A  225E  160A  118A  	fcall	_HT1621_Delay_us
  8022  165E                     l4838:
  8023                           
  8024                           ;ht1621.c: 144:  RD7 = 1;
  8025  165E  1283               	bcf	3,5	;RP0=0, select bank0
  8026  165F  1303               	bcf	3,6	;RP1=0, select bank0
  8027  1660  1788               	bsf	8,7	;volatile
  8028  1661                     l304:
  8029  1661  0008               	return
  8030  1662                     __end_of_Write1DataHT1621:
  8031                           
  8032                           	psect	text28
  8033  0801                     __ptext28:	
  8034 ;; *************** function _WriteClockHT1621 *****************
  8035 ;; Defined at:
  8036 ;;		line 56 in file "ht1621.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;		None
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      void 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2, status,0, pclath, cstack
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8050 ;;      Params:         0       0       0       0       0
  8051 ;;      Locals:         0       0       0       0       0
  8052 ;;      Temps:          0       0       0       0       0
  8053 ;;      Totals:         0       0       0       0       0
  8054 ;;Total ram usage:        0 bytes
  8055 ;; Hardware stack levels used: 1
  8056 ;; Hardware stack levels required when called: 3
  8057 ;; This function calls:
  8058 ;;		_HT1621_Delay_us
  8059 ;; This function is called by:
  8060 ;;		_WriteCommandHT1621
  8061 ;;		_Write1DataHT1621
  8062 ;;		_WritenDataHT1621
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function _WriteClockHT1621
  8068  0801                     _WriteClockHT1621:
  8069  0801                     l4642:	
  8070                           ;incstack = 0
  8071                           ; Regs used in _WriteClockHT1621: [wreg+status,2+status,0+pclath+cstack]
  8072                           
  8073                           
  8074                           ;ht1621.c: 58:  RD6 = 0;
  8075  0801  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0802  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0803  1308               	bcf	8,6	;volatile
  8078  0804                     l4644:
  8079                           
  8080                           ;ht1621.c: 59:  HT1621_Delay_us(10);
  8081  0804  300A               	movlw	10
  8082  0805  00A0               	movwf	HT1621_Delay_us@ucDat
  8083  0806  3000               	movlw	0
  8084  0807  00A1               	movwf	HT1621_Delay_us@ucDat+1
  8085  0808  160A  118A  225E  120A  158A  	fcall	_HT1621_Delay_us
  8086  080D                     l4646:
  8087                           
  8088                           ;ht1621.c: 60:  RD6 = 1;
  8089  080D  1283               	bcf	3,5	;RP0=0, select bank0
  8090  080E  1303               	bcf	3,6	;RP1=0, select bank0
  8091  080F  1708               	bsf	8,6	;volatile
  8092                           
  8093                           ;ht1621.c: 61:  HT1621_Delay_us(10);
  8094  0810  300A               	movlw	10
  8095  0811  00A0               	movwf	HT1621_Delay_us@ucDat
  8096  0812  3000               	movlw	0
  8097  0813  00A1               	movwf	HT1621_Delay_us@ucDat+1
  8098  0814  160A  118A  225E  120A  158A  	fcall	_HT1621_Delay_us
  8099  0819                     l285:
  8100  0819  0008               	return
  8101  081A                     __end_of_WriteClockHT1621:
  8102                           
  8103                           	psect	text29
  8104  125E                     __ptext29:	
  8105 ;; *************** function _HT1621_Delay_us *****************
  8106 ;; Defined at:
  8107 ;;		line 23 in file "ht1621.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  ucDat           2    0[BANK0 ] unsigned int 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  d               2    2[BANK0 ] unsigned int 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1    wreg      void 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8121 ;;      Params:         0       2       0       0       0
  8122 ;;      Locals:         0       2       0       0       0
  8123 ;;      Temps:          0       0       0       0       0
  8124 ;;      Totals:         0       4       0       0       0
  8125 ;;Total ram usage:        4 bytes
  8126 ;; Hardware stack levels used: 1
  8127 ;; Hardware stack levels required when called: 2
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_WriteClockHT1621
  8132 ;;		_WriteCommandHT1621
  8133 ;;		_Write1DataHT1621
  8134 ;;		_WritenDataHT1621
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function _HT1621_Delay_us
  8140  125E                     _HT1621_Delay_us:
  8141  125E                     l4634:	
  8142                           ;incstack = 0
  8143                           ; Regs used in _HT1621_Delay_us: [wreg+status,2+status,0]
  8144                           
  8145                           
  8146                           ;ht1621.c: 23: void HT1621_Delay_us(unsigned int ucDat);ht1621.c: 24: {;ht1621.c: 25:  w
      +                          hile(ucDat--)
  8147  125E  2A6F               	goto	l4640
  8148  125F                     l4636:
  8149                           
  8150                           ;ht1621.c: 26:  {;ht1621.c: 27:   unsigned int d=6;
  8151  125F  3006               	movlw	6
  8152  1260  00A2               	movwf	HT1621_Delay_us@d
  8153  1261  3000               	movlw	0
  8154  1262  00A3               	movwf	HT1621_Delay_us@d+1
  8155  1263                     l4638:	
  8156                           ;ht1621.c: 28:         while(--d){
  8157                           
  8158                           
  8159                           ;ht1621.c: 28:         while(--d){
  8160  1263  3001               	movlw	1
  8161  1264  02A2               	subwf	HT1621_Delay_us@d,f
  8162  1265  3000               	movlw	0
  8163  1266  1C03               	skipc
  8164  1267  03A3               	decf	HT1621_Delay_us@d+1,f
  8165  1268  02A3               	subwf	HT1621_Delay_us@d+1,f
  8166  1269  0822               	movf	HT1621_Delay_us@d,w
  8167  126A  0423               	iorwf	HT1621_Delay_us@d+1,w
  8168  126B  1D03               	btfss	3,2
  8169  126C  2A6E               	goto	u3291
  8170  126D  2A6F               	goto	u3290
  8171  126E                     u3291:
  8172  126E  2A63               	goto	l4638
  8173  126F                     u3290:
  8174  126F                     l4640:
  8175                           
  8176                           ;ht1621.c: 25:  while(ucDat--)
  8177  126F  3001               	movlw	1
  8178  1270  1283               	bcf	3,5	;RP0=0, select bank0
  8179  1271  1303               	bcf	3,6	;RP1=0, select bank0
  8180  1272  02A0               	subwf	HT1621_Delay_us@ucDat,f
  8181  1273  3000               	movlw	0
  8182  1274  1C03               	skipc
  8183  1275  03A1               	decf	HT1621_Delay_us@ucDat+1,f
  8184  1276  02A1               	subwf	HT1621_Delay_us@ucDat+1,f
  8185  1277  0A20               	incf	HT1621_Delay_us@ucDat,w
  8186  1278  1D03               	skipz
  8187  1279  2A7E               	goto	u3301
  8188  127A  0A21               	incf	HT1621_Delay_us@ucDat+1,w
  8189  127B  1D03               	btfss	3,2
  8190  127C  2A7E               	goto	u3301
  8191  127D  2A7F               	goto	u3300
  8192  127E                     u3301:
  8193  127E  2A5F               	goto	l4636
  8194  127F                     u3300:
  8195  127F                     l275:
  8196  127F  0008               	return
  8197  1280                     __end_of_HT1621_Delay_us:
  8198                           
  8199                           	psect	text30
  8200  081A                     __ptext30:	
  8201 ;; *************** function _interrupt_service *****************
  8202 ;; Defined at:
  8203 ;;		line 365 in file "eleclockmain.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;		None
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;		None
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      void 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2, status,0, pclath, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8217 ;;      Params:         0       0       0       0       0
  8218 ;;      Locals:         0       0       0       0       0
  8219 ;;      Temps:          4       0       0       0       0
  8220 ;;      Totals:         4       0       0       0       0
  8221 ;;Total ram usage:        4 bytes
  8222 ;; Hardware stack levels used: 1
  8223 ;; Hardware stack levels required when called: 1
  8224 ;; This function calls:
  8225 ;;		_one_zero
  8226 ;;		_wrong
  8227 ;; This function is called by:
  8228 ;;		Interrupt level 1
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function _interrupt_service
  8234  081A                     _interrupt_service:
  8235  081A                     i1l3996:
  8236                           
  8237                           ;eleclockmain.c: 366:     if(T0IF==1)
  8238  081A  1D0B               	btfss	11,2	;volatile
  8239  081B  281D               	goto	u301_21
  8240  081C  281E               	goto	u301_20
  8241  081D                     u301_21:
  8242  081D  2827               	goto	i1l4004
  8243  081E                     u301_20:
  8244  081E                     i1l3998:
  8245                           
  8246                           ;eleclockmain.c: 367:     {;eleclockmain.c: 368:         TMR0=0x13;
  8247  081E  3013               	movlw	19
  8248  081F  1283               	bcf	3,5	;RP0=0, select bank0
  8249  0820  1303               	bcf	3,6	;RP1=0, select bank0
  8250  0821  0081               	movwf	1	;volatile
  8251  0822                     i1l4000:
  8252                           
  8253                           ;eleclockmain.c: 369:         T0IF=0;
  8254  0822  110B               	bcf	11,2	;volatile
  8255  0823                     i1l4002:
  8256                           
  8257                           ;eleclockmain.c: 371:   tmr_times++;
  8258  0823  3001               	movlw	1
  8259  0824  00F2               	movwf	??_interrupt_service
  8260  0825  0872               	movf	??_interrupt_service,w
  8261  0826  07FA               	addwf	_tmr_times,f
  8262  0827                     i1l4004:
  8263                           
  8264                           ;eleclockmain.c: 374:  if(CCP2IF==1)
  8265  0827  1283               	bcf	3,5	;RP0=0, select bank0
  8266  0828  1303               	bcf	3,6	;RP1=0, select bank0
  8267  0829  1C0D               	btfss	13,0	;volatile
  8268  082A  282C               	goto	u302_21
  8269  082B  282D               	goto	u302_20
  8270  082C                     u302_21:
  8271  082C  28DE               	goto	i1l229
  8272  082D                     u302_20:
  8273  082D                     i1l4006:
  8274                           
  8275                           ;eleclockmain.c: 375:  {;eleclockmain.c: 376:   CCP2IF=0;
  8276  082D  100D               	bcf	13,0	;volatile
  8277                           
  8278                           ;eleclockmain.c: 377:   GIE=0;
  8279  082E  138B               	bcf	11,7	;volatile
  8280  082F                     i1l4008:
  8281                           
  8282                           ;eleclockmain.c: 378:     int_times++;
  8283  082F  3001               	movlw	1
  8284  0830  00F2               	movwf	??_interrupt_service
  8285  0831  0872               	movf	??_interrupt_service,w
  8286  0832  07F8               	addwf	_int_times,f
  8287                           
  8288                           ;eleclockmain.c: 379:     if(head_ok==0)
  8289  0833  0876               	movf	_head_ok,w
  8290  0834  1D03               	btfss	3,2
  8291  0835  2837               	goto	u303_21
  8292  0836  2838               	goto	u303_20
  8293  0837                     u303_21:
  8294  0837  2853               	goto	i1l4020
  8295  0838                     u303_20:
  8296  0838                     i1l4010:
  8297                           
  8298                           ;eleclockmain.c: 380:     {;eleclockmain.c: 382:       if(tmr_times>100&tmr_times<116)
  8299  0838  3065               	movlw	101
  8300  0839  027A               	subwf	_tmr_times,w
  8301  083A  1C03               	skipc
  8302  083B  283D               	goto	u304_21
  8303  083C  283E               	goto	u304_20
  8304  083D                     u304_21:
  8305  083D  2849               	goto	i1l4018
  8306  083E                     u304_20:
  8307  083E                     i1l4012:
  8308  083E  3074               	movlw	116
  8309  083F  027A               	subwf	_tmr_times,w
  8310  0840  1803               	skipnc
  8311  0841  2843               	goto	u305_21
  8312  0842  2844               	goto	u305_20
  8313  0843                     u305_21:
  8314  0843  2849               	goto	i1l4018
  8315  0844                     u305_20:
  8316  0844                     i1l4014:
  8317                           
  8318                           ;eleclockmain.c: 383:       {;eleclockmain.c: 384:          head_ok=1;
  8319  0844  01F6               	clrf	_head_ok
  8320  0845  0AF6               	incf	_head_ok,f
  8321  0846                     i1l4016:
  8322                           
  8323                           ;eleclockmain.c: 385:          int_times=0;
  8324  0846  01F8               	clrf	_int_times
  8325                           
  8326                           ;eleclockmain.c: 386:          tmr_times=0;
  8327  0847  01FA               	clrf	_tmr_times
  8328                           
  8329                           ;eleclockmain.c: 387:       }
  8330  0848  28DD               	goto	i1l4068
  8331  0849                     i1l4018:
  8332                           
  8333                           ;eleclockmain.c: 389:       {;eleclockmain.c: 390:          wrong(0xE010);
  8334  0849  3010               	movlw	16
  8335  084A  00F0               	movwf	wrong@errorid
  8336  084B  30E0               	movlw	224
  8337  084C  00F1               	movwf	wrong@errorid+1
  8338  084D  160A  118A  21BD  120A  158A  	fcall	_wrong
  8339  0852  28DD               	goto	i1l4068
  8340  0853                     i1l4020:
  8341                           
  8342                           ;eleclockmain.c: 394:     {;eleclockmain.c: 395:       code_data=code_data>>1;
  8343  0853  0879               	movf	_code_data,w
  8344  0854  00F2               	movwf	??_interrupt_service
  8345  0855  1003               	clrc
  8346  0856  0C72               	rrf	??_interrupt_service,w
  8347  0857  00F3               	movwf	??_interrupt_service+1
  8348  0858  0873               	movf	??_interrupt_service+1,w
  8349  0859  00F9               	movwf	_code_data
  8350  085A                     i1l4022:
  8351                           
  8352                           ;eleclockmain.c: 396:    buf1=one_zero();
  8353  085A  160A  118A  2240  120A  158A  	fcall	_one_zero
  8354  085F  00F2               	movwf	??_interrupt_service
  8355  0860  0872               	movf	??_interrupt_service,w
  8356  0861  00F7               	movwf	_buf1
  8357  0862                     i1l4024:
  8358                           
  8359                           ;eleclockmain.c: 397:    tmr_times=0;
  8360  0862  01FA               	clrf	_tmr_times
  8361  0863                     i1l4026:
  8362                           
  8363                           ;eleclockmain.c: 398:       if(buf1==1)
  8364  0863  0377               	decf	_buf1,w
  8365  0864  1D03               	btfss	3,2
  8366  0865  2867               	goto	u306_21
  8367  0866  2868               	goto	u306_20
  8368  0867                     u306_21:
  8369  0867  286A               	goto	i1l4030
  8370  0868                     u306_20:
  8371  0868                     i1l4028:
  8372                           
  8373                           ;eleclockmain.c: 399:       {;eleclockmain.c: 400:          code_data|=0x80;
  8374  0868  17F9               	bsf	_code_data,7
  8375                           
  8376                           ;eleclockmain.c: 401:       }
  8377  0869  287E               	goto	i1l4038
  8378  086A                     i1l4030:
  8379  086A  0877               	movf	_buf1,w
  8380  086B  1D03               	btfss	3,2
  8381  086C  286E               	goto	u307_21
  8382  086D  286F               	goto	u307_20
  8383  086E                     u307_21:
  8384  086E  2874               	goto	i1l4034
  8385  086F                     u307_20:
  8386  086F                     i1l4032:
  8387                           
  8388                           ;eleclockmain.c: 403:          {;eleclockmain.c: 404:          code_data&=0x7f;
  8389  086F  307F               	movlw	127
  8390  0870  00F2               	movwf	??_interrupt_service
  8391  0871  0872               	movf	??_interrupt_service,w
  8392  0872  05F9               	andwf	_code_data,f
  8393                           
  8394                           ;eleclockmain.c: 405:       }
  8395  0873  287E               	goto	i1l4038
  8396  0874                     i1l4034:
  8397                           
  8398                           ;eleclockmain.c: 407:             {;eleclockmain.c: 408:     wrong(0xE002);
  8399  0874  3002               	movlw	2
  8400  0875  00F0               	movwf	wrong@errorid
  8401  0876  30E0               	movlw	224
  8402  0877  00F1               	movwf	wrong@errorid+1
  8403  0878  160A  118A  21BD  120A  158A  	fcall	_wrong
  8404  087D  28DE               	goto	i1l229
  8405  087E                     i1l4038:
  8406                           
  8407                           ;eleclockmain.c: 411:       if(int_times==8)
  8408  087E  3008               	movlw	8
  8409  087F  0678               	xorwf	_int_times,w
  8410  0880  1D03               	btfss	3,2
  8411  0881  2883               	goto	u308_21
  8412  0882  2884               	goto	u308_20
  8413  0883                     u308_21:
  8414  0883  2893               	goto	i1l4046
  8415  0884                     u308_20:
  8416  0884                     i1l4040:
  8417                           
  8418                           ;eleclockmain.c: 412:       {;eleclockmain.c: 414:           if(code_data!=0x00)
  8419  0884  0879               	movf	_code_data,w
  8420  0885  1903               	btfsc	3,2
  8421  0886  2888               	goto	u309_21
  8422  0887  2889               	goto	u309_20
  8423  0888                     u309_21:
  8424  0888  28DD               	goto	i1l4068
  8425  0889                     u309_20:
  8426  0889                     i1l4042:
  8427                           
  8428                           ;eleclockmain.c: 415:           {;eleclockmain.c: 416:            wrong(0xE003);
  8429  0889  3003               	movlw	3
  8430  088A  00F0               	movwf	wrong@errorid
  8431  088B  30E0               	movlw	224
  8432  088C  00F1               	movwf	wrong@errorid+1
  8433  088D  160A  118A  21BD  120A  158A  	fcall	_wrong
  8434  0892  28DE               	goto	i1l229
  8435  0893                     i1l4046:
  8436  0893  3010               	movlw	16
  8437  0894  0678               	xorwf	_int_times,w
  8438  0895  1D03               	btfss	3,2
  8439  0896  2898               	goto	u310_21
  8440  0897  2899               	goto	u310_20
  8441  0898                     u310_21:
  8442  0898  28A8               	goto	i1l4054
  8443  0899                     u310_20:
  8444  0899                     i1l4048:
  8445                           
  8446                           ;eleclockmain.c: 421:       {;eleclockmain.c: 423:           if(code_data!=0xFF)
  8447  0899  0A79               	incf	_code_data,w
  8448  089A  1903               	btfsc	3,2
  8449  089B  289D               	goto	u311_21
  8450  089C  289E               	goto	u311_20
  8451  089D                     u311_21:
  8452  089D  28DD               	goto	i1l4068
  8453  089E                     u311_20:
  8454  089E                     i1l4050:
  8455                           
  8456                           ;eleclockmain.c: 424:           {;eleclockmain.c: 425:               wrong(0xE004);
  8457  089E  3004               	movlw	4
  8458  089F  00F0               	movwf	wrong@errorid
  8459  08A0  30E0               	movlw	224
  8460  08A1  00F1               	movwf	wrong@errorid+1
  8461  08A2  160A  118A  21BD  120A  158A  	fcall	_wrong
  8462  08A7  28DE               	goto	i1l229
  8463  08A8                     i1l4054:
  8464  08A8  3018               	movlw	24
  8465  08A9  0678               	xorwf	_int_times,w
  8466  08AA  1D03               	btfss	3,2
  8467  08AB  28AD               	goto	u312_21
  8468  08AC  28AE               	goto	u312_20
  8469  08AD                     u312_21:
  8470  08AD  28B8               	goto	i1l4058
  8471  08AE                     u312_20:
  8472  08AE                     i1l4056:
  8473                           
  8474                           ;eleclockmain.c: 430:       {;eleclockmain.c: 431:          code=code_data;
  8475  08AE  0879               	movf	_code_data,w
  8476  08AF  00F2               	movwf	??_interrupt_service
  8477  08B0  01F3               	clrf	??_interrupt_service+1
  8478  08B1  0872               	movf	??_interrupt_service,w
  8479  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  8480  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  8481  08B4  00D7               	movwf	_code
  8482  08B5  0873               	movf	??_interrupt_service+1,w
  8483  08B6  00D8               	movwf	_code+1
  8484                           
  8485                           ;eleclockmain.c: 432:       }
  8486  08B7  28DD               	goto	i1l4068
  8487  08B8                     i1l4058:
  8488  08B8  3020               	movlw	32
  8489  08B9  0678               	xorwf	_int_times,w
  8490  08BA  1D03               	btfss	3,2
  8491  08BB  28BD               	goto	u313_21
  8492  08BC  28BE               	goto	u313_20
  8493  08BD                     u313_21:
  8494  08BD  28DD               	goto	i1l4068
  8495  08BE                     u313_20:
  8496  08BE                     i1l4060:
  8497                           
  8498                           ;eleclockmain.c: 434:       {;eleclockmain.c: 435:          int_times=0;
  8499  08BE  01F8               	clrf	_int_times
  8500                           
  8501                           ;eleclockmain.c: 436:          head_ok=0;
  8502  08BF  01F6               	clrf	_head_ok
  8503  08C0                     i1l4062:
  8504                           
  8505                           ;eleclockmain.c: 437:          if((code+code_data)==0xff)
  8506  08C0  0879               	movf	_code_data,w
  8507  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  8508  08C2  1303               	bcf	3,6	;RP1=0, select bank0
  8509  08C3  0757               	addwf	_code,w
  8510  08C4  00F2               	movwf	??_interrupt_service
  8511  08C5  0858               	movf	_code+1,w
  8512  08C6  1803               	skipnc
  8513  08C7  0A58               	incf	_code+1,w
  8514  08C8  00F3               	movwf	??_interrupt_service+1
  8515  08C9  0A72               	incf	??_interrupt_service,w
  8516  08CA  0473               	iorwf	??_interrupt_service+1,w
  8517  08CB  1D03               	btfss	3,2
  8518  08CC  28CE               	goto	u314_21
  8519  08CD  28CF               	goto	u314_20
  8520  08CE                     u314_21:
  8521  08CE  28D4               	goto	i1l4066
  8522  08CF                     u314_20:
  8523  08CF                     i1l4064:
  8524                           
  8525                           ;eleclockmain.c: 438:          {;eleclockmain.c: 439:               IRKey= code;
  8526  08CF  0858               	movf	_code+1,w
  8527  08D0  00D4               	movwf	_IRKey+1
  8528  08D1  0857               	movf	_code,w
  8529  08D2  00D3               	movwf	_IRKey
  8530                           
  8531                           ;eleclockmain.c: 440:              }
  8532  08D3  28DD               	goto	i1l4068
  8533  08D4                     i1l4066:
  8534                           
  8535                           ;eleclockmain.c: 442:                     wrong(0x05);
  8536  08D4  3005               	movlw	5
  8537  08D5  00F0               	movwf	wrong@errorid
  8538  08D6  3000               	movlw	0
  8539  08D7  00F1               	movwf	wrong@errorid+1
  8540  08D8  160A  118A  21BD  120A  158A  	fcall	_wrong
  8541  08DD                     i1l4068:
  8542                           
  8543                           ;eleclockmain.c: 446:     GIE=1;
  8544  08DD  178B               	bsf	11,7	;volatile
  8545  08DE                     i1l229:
  8546  08DE  0875               	movf	??_interrupt_service+3,w
  8547  08DF  008A               	movwf	10
  8548  08E0  0E74               	swapf	??_interrupt_service+2,w
  8549  08E1  0083               	movwf	3
  8550  08E2  0EFE               	swapf	btemp,f
  8551  08E3  0E7E               	swapf	btemp,w
  8552  08E4  0009               	retfie
  8553  08E5                     __end_of_interrupt_service:
  8554                           
  8555                           	psect	intentry
  8556  0004                     __pintentry:	
  8557                           ;incstack = 0
  8558                           ; Regs used in _interrupt_service: [wreg+status,2+status,0+pclath+cstack]
  8559                           
  8560  0004                     interrupt_function:
  8561  007E                     saved_w	set	btemp
  8562  0004  00FE               	movwf	btemp
  8563  0005  0E03               	swapf	3,w
  8564  0006  00F4               	movwf	??_interrupt_service+2
  8565  0007  080A               	movf	10,w
  8566  0008  00F5               	movwf	??_interrupt_service+3
  8567  0009  120A  158A  281A   	ljmp	_interrupt_service
  8568                           
  8569                           	psect	text31
  8570  11BD                     __ptext31:	
  8571 ;; *************** function _wrong *****************
  8572 ;; Defined at:
  8573 ;;		line 36 in file "irf.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  errorid         2    0[COMMON] int 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		status,2
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8587 ;;      Params:         2       0       0       0       0
  8588 ;;      Locals:         0       0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0
  8590 ;;      Totals:         2       0       0       0       0
  8591 ;;Total ram usage:        2 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; This function calls:
  8594 ;;		Nothing
  8595 ;; This function is called by:
  8596 ;;		_interrupt_service
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           
  8601                           ;psect for function _wrong
  8602  11BD                     _wrong:
  8603  11BD                     i1l3516:	
  8604                           ;incstack = 0
  8605                           ; Regs used in _wrong: [status,2]
  8606                           
  8607                           
  8608                           ;irf.c: 36: void wrong(int errorid);irf.c: 37: {;irf.c: 38:    int_times=0;
  8609  11BD  01F8               	clrf	_int_times
  8610                           
  8611                           ;irf.c: 39:    tmr_times=0;
  8612  11BE  01FA               	clrf	_tmr_times
  8613                           
  8614                           ;irf.c: 40:    head_ok=0;
  8615  11BF  01F6               	clrf	_head_ok
  8616                           
  8617                           ;irf.c: 41:    code_data=0;
  8618  11C0  01F9               	clrf	_code_data
  8619  11C1                     i1l518:
  8620  11C1  0008               	return
  8621  11C2                     __end_of_wrong:
  8622                           
  8623                           	psect	text32
  8624  1240                     __ptext32:	
  8625 ;; *************** function _one_zero *****************
  8626 ;; Defined at:
  8627 ;;		line 45 in file "irf.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;		None
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      unsigned char 
  8634 ;; Registers used:
  8635 ;;		wreg
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8641 ;;      Params:         0       0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0
  8644 ;;      Totals:         0       0       0       0       0
  8645 ;;Total ram usage:        0 bytes
  8646 ;; Hardware stack levels used: 1
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_interrupt_service
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           
  8655                           ;psect for function _one_zero
  8656  1240                     _one_zero:
  8657  1240                     i1l3518:	
  8658                           ;incstack = 0
  8659                           ; Regs used in _one_zero: [wreg]
  8660                           
  8661                           
  8662                           ;irf.c: 49:    if((tmr_times>6)&(tmr_times<12))
  8663  1240  3007               	movlw	7
  8664  1241  027A               	subwf	_tmr_times,w
  8665  1242  1C03               	skipc
  8666  1243  2A45               	goto	u268_21
  8667  1244  2A46               	goto	u268_20
  8668  1245                     u268_21:
  8669  1245  2A4E               	goto	i1l3528
  8670  1246                     u268_20:
  8671  1246                     i1l3520:
  8672  1246  300C               	movlw	12
  8673  1247  027A               	subwf	_tmr_times,w
  8674  1248  1803               	skipnc
  8675  1249  2A4B               	goto	u269_21
  8676  124A  2A4C               	goto	u269_20
  8677  124B                     u269_21:
  8678  124B  2A4E               	goto	i1l3528
  8679  124C                     u269_20:
  8680  124C                     i1l3522:
  8681                           
  8682                           ;irf.c: 50:    {;irf.c: 51:      return 0;
  8683  124C  3000               	movlw	0
  8684  124D  2A5D               	goto	i1l522
  8685  124E                     i1l3528:
  8686  124E  300E               	movlw	14
  8687  124F  027A               	subwf	_tmr_times,w
  8688  1250  1C03               	skipc
  8689  1251  2A53               	goto	u270_21
  8690  1252  2A54               	goto	u270_20
  8691  1253                     u270_21:
  8692  1253  2A5C               	goto	i1l3536
  8693  1254                     u270_20:
  8694  1254                     i1l3530:
  8695  1254  3016               	movlw	22
  8696  1255  027A               	subwf	_tmr_times,w
  8697  1256  1803               	skipnc
  8698  1257  2A59               	goto	u271_21
  8699  1258  2A5A               	goto	u271_20
  8700  1259                     u271_21:
  8701  1259  2A5C               	goto	i1l3536
  8702  125A                     u271_20:
  8703  125A                     i1l3532:
  8704                           
  8705                           ;irf.c: 56:    {;irf.c: 57:      return 1;
  8706  125A  3001               	movlw	1
  8707  125B  2A5D               	goto	i1l522
  8708  125C                     i1l3536:
  8709                           
  8710                           ;irf.c: 60:    return 2;
  8711  125C  3002               	movlw	2
  8712  125D                     i1l522:
  8713  125D  0008               	return
  8714  125E                     __end_of_one_zero:
  8715  007E                     btemp	set	126	;btemp
  8716  007E                     wtemp0	set	126
  8717                           
  8718                           	psect	config
  8719                           
  8720                           ;Config register CONFIG @ 0x2007
  8721                           ;	Oscillator Selection bits
  8722                           ;	FOSC = HS, HS oscillator
  8723                           ;	Watchdog Timer Enable bit
  8724                           ;	WDTE = OFF, WDT disabled
  8725                           ;	Power-up Timer Enable bit
  8726                           ;	PWRTE = OFF, PWRT disabled
  8727                           ;	Brown-out Reset Enable bit
  8728                           ;	BOREN = OFF, BOR disabled
  8729                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8730                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8731                           ;	Data EEPROM Memory Code Protection bit
  8732                           ;	CPD = OFF, Data EEPROM code protection off
  8733                           ;	Flash Program Memory Write Enable bits
  8734                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8735                           ;	In-Circuit Debugger Mode bit
  8736                           ;	DEBUG = 0x1, unprogrammed default
  8737                           ;	Flash Program Memory Code Protection bit
  8738                           ;	CP = OFF, Code protection off
  8739  2007                     	org	8199
  8740  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     51      79
    BANK1            80      0      24
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Setting_display@dp	PTR unsigned char  size(1) Largest target is 4
		 -> display(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_service in COMMON

    _interrupt_service->_wrong

Critical Paths under _main in BANK0

    _main->_I2C_Init
    _updateTime->_I2C_Write
    _b2d->_I2C_Read
    _b2d->___wmul
    _setTime->_I2C_Write
    _d2b->___awdiv
    _I2C_Write->_d2b
    _Setting_display->_Write1DataHT1621
    _IR_data_display->_Write1DataHT1621
    _I2C_Init->___lldiv
    ___lldiv->___lmul
    _HT1621_Init->_WriteCommandHT1621
    _WriteCommandHT1621->_HT1621_Delay_us
    _HT1621_Display_Year->___lwdiv
    _HT1621_Display_Time->___lwdiv
    _HT1621_Display_Date->___lwdiv
    ___lwdiv->___lwmod
    _Write1DataHT1621->_HT1621_Delay_us
    _WriteClockHT1621->_HT1621_Delay_us

Critical Paths under _interrupt_service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_service in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_service in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_service in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   93759
                                             35 BANK0     16    16      0
                _HT1621_Display_Date
                _HT1621_Display_Time
                _HT1621_Display_Year
                        _HT1621_Init
                           _I2C_Init
                    _IR_data_display
                    _Setting_display
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _init_io
                            _setTime
                         _updateTime
 ---------------------------------------------------------------------------------
 (1) _updateTime                                           0     0      0    4524
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
                                _b2d
 ---------------------------------------------------------------------------------
 (2) _b2d                                                  4     2      2    2538
                                              6 BANK0      4     2      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1936
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     785
                                              0 BANK0      6     4      2
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (1) _setTime                                              0     0      0    3041
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
                                _d2b
 ---------------------------------------------------------------------------------
 (2) _d2b                                                  4     2      2    1840
                                              9 BANK0      4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1201
                                             13 BANK0      2     0      2
                           _I2C_Hold
                                _d2b (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setting_display                                      6     5      1   12350
                                             10 BANK0      6     5      1
                   _Write1DataHT1621
 ---------------------------------------------------------------------------------
 (1) _IR_data_display                                      6     4      2   10087
                                             10 BANK0      6     4      2
                   _Write1DataHT1621
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     858
                                             27 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                             13 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _HT1621_Init                                          1     1      0    1737
                                              9 BANK0      1     1      0
                    _HT1621_num_init
                 _WriteCommandHT1621
 ---------------------------------------------------------------------------------
 (2) _WriteCommandHT1621                                   5     5      0    1737
                                              4 BANK0      5     5      0
                    _HT1621_Delay_us
                   _WriteClockHT1621
 ---------------------------------------------------------------------------------
 (2) _HT1621_num_init                                      2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _HT1621_Display_Year                                  5     3      2   17143
                                             14 BANK0      5     3      2
                   _Write1DataHT1621
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _HT1621_Display_Time                                  9     5      4   17537
                                             14 BANK0      9     5      4
                   _Write1DataHT1621
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _HT1621_Display_Date                                  8     4      4   17326
                                             14 BANK0      8     4      4
                   _Write1DataHT1621
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4    4372
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    2746
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Write1DataHT1621                                     6     5      1    9613
                                              4 BANK0      6     5      1
                    _HT1621_Delay_us
                   _WriteClockHT1621
 ---------------------------------------------------------------------------------
 (3) _WriteClockHT1621                                     0     0      0     785
                    _HT1621_Delay_us
 ---------------------------------------------------------------------------------
 (4) _HT1621_Delay_us                                      4     2      2     785
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupt_service                                    4     4      0     380
                                              2 COMMON     4     4      0
                           _one_zero
                              _wrong
 ---------------------------------------------------------------------------------
 (6) _wrong                                                2     0      2     380
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _one_zero                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HT1621_Display_Date
     _Write1DataHT1621
       _HT1621_Delay_us
       _WriteClockHT1621
         _HT1621_Delay_us
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _HT1621_Display_Time
     _Write1DataHT1621
     ___lwdiv
     ___lwmod
   _HT1621_Display_Year
     _Write1DataHT1621
     ___lwdiv
     ___lwmod
   _HT1621_Init
     _HT1621_num_init
     _WriteCommandHT1621
       _HT1621_Delay_us
       _WriteClockHT1621
   _I2C_Init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _IR_data_display
     _Write1DataHT1621
   _Setting_display
     _Write1DataHT1621
   ___lwdiv
   ___lwmod
   ___wmul
   _init_io
   _setTime
     _I2C_Begin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
       _d2b (ARG)
         ___awdiv
         ___awmod
     _d2b
   _updateTime
     _I2C_Begin
     _I2C_End
     _I2C_Read
       _I2C_Hold
     _I2C_Write
     _b2d
       _I2C_Read (ARG)
       ___wmul (ARG)

 _interrupt_service (ROOT)
   _one_zero
   _wrong

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      18       7       30.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     33      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      73      12        0.0%
ABS                  0      0      73       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 11 11:10:22 2022

           __size_of_I2C_Begin 0009                              pc 0002             __size_of_I2C_Write 000A  
                 ___awdiv@sign 0026                             fsr 0004            ___wmul@multiplicand 0022  
WriteCommandHT1621@FunctonCode 0026                            l101 039A                            l120 03E0  
                          l201 0606                            l121 03E3                            l122 03E6  
                          l301 1654                            l302 163C                            l118 03DD  
                          l304 1661                            l350 07FF                            l440 11F2  
                          l345 07FD                            l290 14E3                            l434 1453  
                          l610 128E                            l275 127F                            l371 07BD  
                          l515 123F                            l443 11D2                            l292 1511  
                          l612 12A6                            l452 12CF                            l285 0819  
                          l461 1710                            l446 11DB                            l455 1336  
                          l376 0C28                            l624 1400                            l464 09E2  
                          l297 1618                            l289 14FC                            l385 0AE5  
                          l449 11E5                            l458 1300                            l299 1631  
                          l379 17FF                            l395 0FFF                            l646 1579  
                          l763 15E2                            l776 14AE                            l882 13B8  
                          l892 1372                            _GIE 005F                            _RB5 0035  
                          _RD5 0045                            _RD6 0046                            _RD7 0047  
                          _PEN 048A                            _SEN 0488                            _PSA 040B  
                          _b2d 12A7                            _d2b 1301                __end_of_I2C_End 11DC  
                          _min 0064                            _sec 0062                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0026              Setting_display@dp 002A  
                         ?_b2d 0026                           ?_d2b 0029                           l3220 137D  
                         l3230 13A0                           l3222 1380                           l3232 13A6  
                         l3224 1387                           l3216 1373                           l5000 07E0  
                         l3234 13A7                           l3226 138B                           l3218 1377  
                         l5002 07E6                           l5010 1405                           l3236 13AE  
                         l3228 138F                           l5100 06B2                           l5004 07EC  
                         l5012 1409                           l5020 1227                           l3238 13B4  
                         l5110 072F                           l5102 06D2                           l5006 07F2  
                         l5014 140C                           l5030 1232                           l5022 1228  
                         l5120 07A7                           l5112 0744                           l5104 06E8  
                         l5016 1452                           l5008 1401                           l5200 0E6B  
                         l5032 1235                           l5024 122D                           l5040 08E5  
                         l5114 0760                           l5106 06FD                           l5050 1741  
                         l5042 1711                           l5130 0A2A                           l5122 09E3  
                         l5210 0ECA                           l5202 0E81                           l5034 1238  
                         l5026 122E                           l5018 1223                           l5116 0776  
                         l5108 0719                           l5060 17B8                           l5052 175D  
                         l5044 1711                           l5140 0AAF                           l5132 0A4A  
                         l5124 09F1                           l5220 0F3D                           l5212 0EE5  
                         l5204 0E8B                           l5036 123B                           l5028 1231  
                         l5300 0068                           l5070 0B00                           l5118 078B  
                         l5062 17CD                           l5054 1771                           l5046 172D  
                         l5142 0ACF                           l5134 0A60                           l5126 0A0D  
                         l5230 0FA9                           l5222 0F58                           l5214 0EFC  
                         l5206 0EAA                           l5150 0C34                           l5038 123E  
                         l5310 008A                           l5302 006E                           l5080 0B96  
                         l5072 0B1D                           l5064 17E9                           l5056 1786  
                         l5048 1741                           l5136 0A72                           l5128 0A23  
                         l5232 0FB3                           l5224 0F6E                           l5216 0F03  
                         l5208 0EC0                           l5160 0CAD                           l5152 0C4F  
                         l5144 1662                           l5312 0098                           l5320 00C0  
                         l5304 0073                           l5090 0C12                           l5082 0BAB  
                         l5074 0B4F                           l5066 0AE6                           l5058 17A2  
                         l5138 0A92                           l5234 0FD2                           l5226 0F78  
                         l5218 0F1E                           l5170 0D22                           l5162 0CCC  
                         l5154 0C6E                           l5146 0C2C                           l5402 0410  
                         l5330 0166                           l5322 00D8                           l5314 00A7  
                         l5306 007A                           l5084 0BCB                           l5076 0B64  
                         l5068 0AFB                           l5092 0675                           l5228 0F93  
                         l5180 0D98                           l5172 0D29                           l5164 0CE2  
                         l5156 0C8D                           l5148 0C2D                           l4700 15C7  
                         l5404 0415                           l5412 0424                           l5340 01EB  
                         l5332 019B                           l5316 00B6                           l5308 0080  
                         l5086 0BE1                           l5078 0B80                           l5094 0688  
                         l5190 0DF8                           l5182 0DA2                           l5174 0D44  
                         l5166 0CEC                           l5158 0CA3                           l5238 0FE9  
                         l4702 15CE                           l5502 0537                           l5422 044B  
                         l5406 041A                           l5414 043A                           l5350 029D  
                         l5326 00DE                           l5342 01EE                           l4640 126F  
                         l4800 1600                           l5088 0BF6                           l5096 068D  
                         l5192 0E0F                           l5184 0DBD                           l5176 0D63  
                         l5168 0D0B                           l4704 15D4                           l4720 1462  
                         l4712 1454                           l5504 053C                           l5512 054B  
                         l5424 0450                           l5432 045F                           l5408 041F  
                         l5360 039C                           l5352 02EA                           l5344 01F3  
                         l5328 0131                           l5336 01D0                           l4634 125E  
                         l4642 0801                           l4810 1619                           l4802 1608  
                         l5098 0692                           l5194 0E16                           l5186 0DD3  
                         l5178 0D82                           l4650 11E6                           l4706 15D9  
                         l4730 147B                           l4722 1466                           l4714 1457  
                         l5522 0572                           l5506 0541                           l5514 0561  
                         l5442 0486                           l5426 0455                           l5434 0475  
                         l5418 0445                           l5370 03AE                           l5362 039D  
                         l6250 038C                           l5354 0337                           l5338 01E6  
                         l4636 125F                           l4644 0804                           l4812 161E  
                         l4804 160E                           l5196 0E31                           l5188 0DDD  
                         l4652 11EE                           l4900 11CF                           l4708 15DE  
                         l4740 149A                           l4732 147F                           l4724 146B  
                         l4716 145B                           l4660 1295                           l5524 0577  
                         l5532 0586                           l5508 0546                           l6260 04A2  
                         l5444 048B                           l5452 049A                           l5428 045A  
                         l6252 03BE                           l5372 03B0                           l5380 03B6  
                         l5348 01F9                           l4638 1263                           l4646 080D  
                         l4830 1642                           l4814 1627                           l4806 1610  
                         l4750 14B2                           l5198 0E50                           l4902 11D3  
                         l4670 157D                           l4734 1483                           l4726 1471  
                         l4742 14A0                           l4718 1460                           l4662 129C  
                         l4654 1280                           l4910 12A7                           l6270 05C9  
                         l5542 05AD                           l5526 057C                           l5534 059C  
                         l5518 056C                           l6262 04DD                           l5462 04C1  
                         l5446 0490                           l5454 04B0                           l5438 0480  
                         l6254 03F1                           l5374 03B2                           l5382 03CC  
                         l5366 03A8                           l5358 0384                           l6246 00CA  
                         l4832 164A                           l4824 1634                           l4808 1616  
                         l4816 162B                           l4760 14C8                           l4752 14B6  
                         l4648 11E6                           l4904 11D8                           l4680 1591  
                         l4672 1581                           l4744 14A5                           l4736 148D  
                         l4728 1474                           l4920 12D5                           l4664 12A2  
                         l4656 1284                           l6272 0640                           l5560 05E7  
                         l5544 05B2                           l5552 05C1                           l5528 0581  
                         l6264 0518                           l5464 04C6                           l5472 04D5  
                         l5448 0495                           l6256 042C                           l5392 03E9  
                         l5376 03B4                           l6248 01D8                           l5296 0049  
                         l4834 164E                           l4826 163A                           l4818 1633  
                         l4762 14CB                           l4754 14B7                           l6274 0FF1  
                         l4906 11DC                           l4690 15A7                           l4682 1595  
                         l4674 1586                           l4746 14AA                           l4738 1493  
                         l4914 1301                           l4930 12FA                           l4922 12DD  
                         l4658 1288                           l5570 0603                           l5562 05EC  
                         l5546 05B7                           l5554 05D7                           l5538 05A7  
                         l6266 0553                           l5482 04FC                           l5466 04CB  
                         l5474 04EB                           l5458 04BB                           l6258 0467  
                         l5394 03FF                           l5386 03D7                           l5298 004F  
                         l4836 1655                           l4828 163D                           l4780 14E9  
                         l4764 14D0                           l4756 14C0                           l4940 13DE  
                         l4908 11E1                           l4692 15AB                           l4684 1597  
                         l4676 1588                           l4668 157A                           l4924 12E6  
                         l5580 0616                           l5564 05EF                           l5548 05BC  
                         l6268 058E                           l5484 0501                           l5492 0510  
                         l5468 04D0                           l4838 165E                           l4790 150E  
                         l4782 14F2                           l4774 14DB                           l4766 14D3  
                         l4758 14C3                           l4950 1524                           l4942 13E7  
                         l4934 13B9                           l4694 15AF                           l4686 159D  
                         l4678 158C                           l4926 12EB                           l4918 12D0  
                         l5582 061A                           l5574 0609                           l5566 05F3  
                         l5558 05E2                           l5486 0506                           l5494 0526  
                         l5478 04F6                           l5398 040A                           l4792 15E6  
                         l4784 14F6                           l4776 14E1                           l4768 14D8  
                         l4960 1553                           l4952 1527                           l4944 13F8  
                         l4936 13C3                           l4696 15C0                           l4688 15A0  
                         l4928 12F9                           l5592 0635                           l5576 060E  
                         l5584 0625                           l5568 05FE                           l5488 050B  
                         l4794 15E7                           l4786 14FD                           l4778 14E4  
                         l4962 1561                           l4954 1534                           l4938 13C7  
                         l4698 15C6                           l5586 062B                           l5578 0614  
                         l5498 0531                           l4796 15F0                           l4980 134D  
                         l4972 1337                           l4788 1502                           l4964 1562  
                         l4956 1538                           l4948 1512                           l5588 0630  
                         l5596 0639                           l4798 15F8                           l4982 1351  
                         l4974 133F                           l4990 136E                           l4966 156B  
                         l4958 1541                           l4984 135B                           l4976 1342  
                         l4968 1571                           l4986 1361                           l4978 1349  
                         l4994 07BE                           l4898 11CA                           l4988 1368  
                         l4996 07C8                           l4998 07DA                           _T0IE 005D  
                         _T0IF 005A                           _T0CS 040D                           u2200 138F  
                         u2201 138E                           u2220 13A0                           u2221 139F  
                         u2215 1390                           u2240 13B4                           u2241 13B3  
                         u2225 139C                           u2235 13A8                           u3300 127F  
                         u2180 137D                           u3301 127E                           u2181 137C  
                         u4005 0704                           u3310 11EE                           u4015 074B  
                         u3311 11ED                           u3320 11F2                           u4025 0792  
                         u4105 0CB7                           u3321 11F1                           u3410 15AF  
                         u3330 1288                           u2195 1381                           u4035 09F8  
                         u4115 0CF6                           u3411 15AE                           u3331 1287  
                         u4045 0A35                           u4205 0F09                           u4125 0D2F  
                         u3405 15A1                           u3430 15C0                           u3510 1483  
                         u4055 0A67                           u4215 0F43                           u4135 0D6D  
                         u3431 15BF                           u3511 1482                           u3600 163A  
                         u3520 148D                           u3360 12A2                           u4400 04C0  
                         u4320 007A                           u3601 1639                           u4065 0A7D  
                         u4225 0F7E                           u4145 0DA8                           u3425 15B0  
                         u3521 148C                           u3505 1475                           u3361 12A1  
                         u3345 128F                           u4401 04BF                           u4321 0079  
                         u3290 126F                           u3610 1654                           u3450 15D4  
                         u3370 1581                           u4410 04FB                           u4330 00DD  
                         u3291 126E                           u3611 1653                           u4075 0ABA  
                         u4235 0FBD                           u4155 0DE3                           u3451 15D3  
                         u3435 15BC                           u3371 1580                           u3355 1296  
                         u4411 04FA                           u4331 00DC                           u3460 15D9  
                         u3380 158C                           u3540 14A0                           u4500 062B  
                         u4420 0536                           u4340 01F8                           u3701 13D0  
                         u4165 0E1C                           u4085 0C3A                           u3461 15D8  
                         u3445 15C8                           u3381 158B                           u3541 149F  
                         u3525 1489                           u4501 062A                           u4421 0535  
                         u4341 01F7                           u3702 13D7                           u3390 159D  
                         u3550 14A5                           u3470 145B                           u4430 0571  
                         u4350 03AD                           u3703 13DE                           u4175 0E56  
                         u4095 0C78                           u3391 159C                           u3551 14A4  
                         u3535 1494                           u3471 145A                           u4431 0570  
                         u4351 03AC                           u3560 14E1                           u3800 1571  
                         u3480 1466                           u4440 05AC                           u4360 03DC  
                         u3561 14E0                           u3801 1570                           u4185 0E95  
                         u3481 1465                           u4441 05AB                           u4361 03DB  
                         u3810 133F                           u3570 14FC                           u3730 13F8  
                         u3490 1471                           u4450 05E7                           u4370 040F  
                         u3811 133E                           u3571 14FB                           u3731 13F7  
                         u3715 13E0                           u4195 0ED0                           u3491 1470  
                         u4451 05E6                           u4371 040E                           u3580 1616  
                         u3740 1524                           u4460 05EC                           u4380 044A  
                         u3581 1615                           u3741 1523                           u3725 13E8  
                         u4461 05EB                           u4381 0449                           u3590 1631  
                         u3830 1351                           u3670 12F6                           u4470 0603  
                         u4390 0485                           u3591 1630                           u3831 1350  
                         u3671 12F2                           u4471 0602                           u4391 0484  
                         u3840 135B                           u3920 0B00                           u3760 1538  
                         u4480 060E                           u3841 135A                           u3825 1343  
                         u3921 0AFF                           u3905 178D                           u3761 1537  
                         u4481 060D                           u3690 13C7                           u4490 0614  
                         u3915 17D4                           u3755 1529                           u3691 13C6  
                         u4491 0613                           u3860 136E                           u3780 1553  
                         u3684 12F9                           _RCEN 048B                           u3861 136D  
                         u3845 1357                           u3781 1552                           u3870 141C  
                         u3855 1362                           u3935 0B24                           u3775 153A  
                         u3945 0B6B                           u3785 154F                           u3970 068D  
                         u3955 0BB6                           u3971 068C                           u3795 1563  
                         u3875 1417                           u3980 0692                           u3965 0BFD  
                         u3981 0691                           u3885 1718                           u3895 1748  
                         u3995 06BD                           _TMR0 0001                           _Mode 005D  
                         _buf1 0077                           _date 0068                           _code 0057  
                         _main 0049                           _hour 0066   __size_of_HT1621_Display_Date 0143  
             __end_of_I2C_Hold 11F3               __end_of_I2C_Init 1454               __end_of_I2C_Read 1301  
                         _year 006C                           btemp 007E   __size_of_HT1621_Display_Time 014C  
 __size_of_HT1621_Display_Year 00EF                           start 000C           __size_of_HT1621_Init 0040  
         HT1621_Delay_us@ucDat 0020                          ??_b2d 0028                          ??_d2b 002B  
      __end_of_Setting_display 1000                          ?_main 0070                          _ACKEN 048C  
                        _ACKDT 048D                __end_of___awdiv 15E3                __end_of___awmod 14AF  
              __end_of___lldiv 157A                ___awdiv@divisor 0020                          _T1CON 0010  
              __end_of___lwdiv 13B9                          i1l229 08DE                __end_of___lwmod 1373  
                        i1l522 125D                          i1l518 11C1                ___awdiv@counter 0025  
                        _IRKey 0053                          _TRISC 0087            ___lmul@multiplicand 0024  
            __end_of_I2C_Begin 11D3                __end_of_init_io 1240                          _month 006A  
                        _wrong 11BD                __end_of_setTime 1711              __end_of_I2C_Write 11E6  
     __size_of_HT1621_Delay_us 0022                          pclath 000A                          status 0003  
                        wtemp0 007E      __size_of_WriteClockHT1621 0019                __initialization 000F  
                 __end_of_main 0672                      ??_I2C_End 0020                         ??_main 0043  
            ?_Write1DataHT1621 0024             ??_Write1DataHT1621 0025                         _CCP2IE 0468  
                       _CCP2IF 0068               ___awdiv@dividend 0022                         ?_wrong 0070  
                       i1l4000 0822                         i1l4010 0838                         i1l4002 0823  
                       i1l4012 083E                         i1l4020 0853                         i1l4004 0827  
                       i1l4030 086A                         i1l4022 085A                         i1l4014 0844  
                       i1l4006 082D                         i1l4040 0884                         i1l4032 086F  
                       i1l4024 0862                         i1l4016 0846                         i1l4008 082F  
                       i1l4050 089E                         i1l4042 0889                         i1l4034 0874  
                       i1l4026 0863                         i1l4018 0849                         i1l4060 08BE  
                       i1l4028 0868                         i1l4062 08C0                         i1l4054 08A8  
                       i1l4046 0893                         i1l4038 087E                         i1l3520 1246  
                       i1l4064 08CF                         i1l4056 08AE                         i1l4048 0899  
                       i1l3530 1254                         i1l3522 124C                         i1l4066 08D4  
                       i1l4058 08B8                         i1l3532 125A                         i1l3516 11BD  
                       i1l4068 08DD                         i1l3518 1240                         i1l3536 125C  
                       i1l3528 124E                         u301_20 081E                         u301_21 081D  
                       u310_20 0899                         u302_20 082D                         u310_21 0898  
                       u302_21 082C                         i1l3996 081A                         i1l3998 081E  
                       u311_20 089E                         u303_20 0838                         u311_21 089D  
                       u303_21 0837                         u312_20 08AE                         u304_20 083E  
                       u312_21 08AD                         u304_21 083D                         u313_20 08BE  
                       u305_20 0844                         u313_21 08BD                         u305_21 0843  
                       u314_20 08CF                         u306_20 0868                         u314_21 08CE  
                       u306_21 0867                         u307_20 086F                         u307_21 086E  
                       u308_20 0884                         u308_21 0883                         u309_20 0889  
                       u309_21 0888                         u270_20 1254                         u270_21 1253  
                       u271_20 125A                         u271_21 1259                         u268_20 1246  
                       u268_21 1245                         u269_20 124C                         u269_21 124B  
                       _TMR1ON 0080                         _SSPADD 0093                         _TRISC1 0439  
                       _TRISB5 0435                         _TRISC3 043B                         _TRISC4 043C  
                       _TRISD5 0445                         _TRISD6 0446                         _TRISD7 0447  
                       _SSPCON 0014                         _SSPBUF 0013               HT1621_Delay_us@d 0022  
 HT1621_Display_Time@Temp_Data 0036                  d2b@to_convert 0029                         ___lmul 13B9  
                       ___wmul 1280                      ??___awdiv 0024                      ??___awmod 0024  
                    ??___lldiv 0035                      ??___lwdiv 002A                      ??___lwmod 0024  
                       _cursor 005B       __size_of_IR_data_display 0103               ___awdiv@quotient 0027  
              ___awmod@divisor 0020               ?_Setting_display 002A       __size_of_HT1621_num_init 0001  
              ___awmod@counter 0025               __end_of_one_zero 125E                      ??_init_io 0020  
                 __pdataCOMMON 007B                      ?_I2C_Hold 0070                      ?_I2C_Init 003B  
                    ?_I2C_Read 0020                         saved_w 007E                      ??_setTime 002F  
      __end_of__initialization 0045     __end_of_WriteCommandHT1621 1512              ??_HT1621_Delay_us 0022  
               __pcstackCOMMON 0070                   __pidataBANK0 11F3                   __pidataBANK1 1200  
                __end_of_wrong 11C2            _HT1621_Display_Date 0AE6            _HT1621_Display_Time 0672  
          _HT1621_Display_Year 1711                     ??_I2C_Hold 0020                     ??_I2C_Init 003F  
                   ??_I2C_Read 0022                        ??_wrong 0072                     __pbssBANK0 0053  
                   __pbssBANK1 00B0           ?_HT1621_Display_Date 002E           ?_HT1621_Display_Time 002E  
         ?_HT1621_Display_Year 002E               _WriteClockHT1621 0801                   I2C_Init@freq 003B  
                   __pmaintext 0049                        ?___lmul 0020                        ?___wmul 0020  
                   __pintentry 0004                        _CCP2CON 001D                        _I2C_End 11D3  
               ___lmul@product 0029               I2C_Read@incoming 0024              ??_IR_data_display 002C  
            ??_HT1621_num_init 0020                        _SSPCON2 0091                        _SSPSTAT 0094  
                   __stringtab 1000          ??_HT1621_Display_Date 0032                      _I2C_Begin 11CA  
        ??_HT1621_Display_Time 0032          ??_HT1621_Display_Year 0030                      _I2C_Write 11DC  
                ??_HT1621_Init 0029                      ?_one_zero 0070                  _HT1621_maxcom 007B  
                _HT1621_segtab 1006                        _Setting 005C                        ___awdiv 157A  
              __size_of___lmul 0048                        ___awmod 1454                        ___lldiv 1512  
              __size_of___wmul 0027                        ___lwdiv 1373                        ___lwmod 1337  
 HT1621_Display_Year@Temp_Data 0032                        _head_ok 0076                        _fengcon 0055  
                      __ptext1 08E5                        __ptext2 12A7                        __ptext3 1280  
                      __ptext4 12D0                        __ptext5 1662                        __ptext6 1301  
                      __ptext7 1454                        __ptext8 157A                        __ptext9 11DC  
                      _display 005E                   __size_of_b2d 0029                   __size_of_d2b 0036  
                      _init_io 1223               ___awmod@dividend 0022                        _setTime 1662  
      WriteCommandHT1621@Shift 0027                        clrloop0 11C3           end_of_initialization 0045  
         Write1DataHT1621@Addr 0027                     ?_I2C_Begin 0070      __size_of_Write1DataHT1621 007F  
                   ?_I2C_Write 002D                ___lldiv@divisor 002D                     ??_one_zero 0070  
              ___lldiv@counter 003A            WriteCommandHT1621@i 0028            __end_of_HT1621_Init 07FE  
                   _updateTime 08E5              __size_of_I2C_Hold 000D              __size_of_I2C_Init 0053  
            __size_of_I2C_Read 0031                _HT1621_Delay_us 125E                   wrong@errorid 0070  
     Setting_display@Temp_Data 002F                 __end_of___lmul 1401             _WriteCommandHT1621 14AF  
               __end_of___wmul 12A7                  __pidataCOMMON 07FE            ?_WriteCommandHT1621 0070  
          start_initialization 000F       __end_of_WriteClockHT1621 081A                    __end_of_b2d 12D0  
                  __end_of_d2b 1337       __size_of_Setting_display 03D7          Setting_display@cursor 002E  
                  ??_I2C_Begin 0020                    ??_I2C_Write 002F           ??_WriteCommandHT1621 0024  
                  _HT1621_Init 07BE                    _HT1621_comi 0059                    _HT1621_segi 005A  
                     ??___lmul 0028                       ??___wmul 0024                     init_fetch0 1210  
              _IR_data_display 09E3                    __pdataBANK0 0062                    __pdataBANK1 00A0  
              _HT1621_num_init 07FF                       ?_I2C_End 0070        __end_of_HT1621_Delay_us 1280  
                  __pbssCOMMON 0076                      ___latbits 0002                  __pcstackBANK0 0020  
                  ?_updateTime 0070               _Write1DataHT1621 15E3               ___lwdiv@dividend 0028  
                  I2C_Read@ack 0020                      _code_data 0079              __size_of_one_zero 001E  
                     ?___awdiv 0020                       ?___awmod 0020                       ?___lldiv 002D  
                     ?___lwdiv 0026                       ?___lwmod 0020                      __pstrings 1000  
                     ?_init_io 0070                       _I2C_Hold 11E6                       _I2C_Init 1401  
                     _I2C_Read 12D0                       ?_setTime 0070    __end_of_HT1621_Display_Date 0C29  
  __end_of_HT1621_Display_Time 07BE    __end_of_HT1621_Display_Year 1800               ___lwdiv@quotient 002B  
            _interrupt_service 081A                 __size_of_wrong 0005                      _int_times 0078  
           ?_interrupt_service 0070              interrupt_function 0004                 ___wmul@product 0024  
            ??_Setting_display 002B                      clear_ram0 11C2   HT1621_Display_Date@Temp_Data 0035  
                  _LCD_RAM_Tab 00A0            Write1DataHT1621@Dat 0024        __end_of_IR_data_display 0AE6  
      __end_of_HT1621_num_init 0800            ??_interrupt_service 0072            __size_of_updateTime 00FE  
             __size_of_I2C_End 0009        HT1621_Display_Date@date 0030                    __stringbase 1005  
            ___wmul@multiplier 0020                      _tmr_times 007A               ?_HT1621_Delay_us 0020  
    __end_of_interrupt_service 08E5              ___lmul@multiplier 0020            IR_data_display@data 002A  
               _HT1621_addrbit 006E                 _HT1621_dispram 00B0                  I2C_Write@data 002D  
             __size_of___awdiv 0069               __size_of___awmod 005B               __size_of___lldiv 0068  
             __size_of___lwdiv 0046               __size_of___lwmod 003C             __end_of__stringtab 1006  
      HT1621_Display_Time@hour 002E               __size_of_init_io 001D                       _main$927 0051  
                     _main$928 004F                ___lwdiv@divisor 0026              ?_WriteClockHT1621 0070  
              ___lwdiv@counter 002D               __size_of_setTime 00AF                       __ptext10 11D3  
                     __ptext11 11CA                       __ptext20 14AF                       __ptext12 11E6  
                     __ptext21 07FF                       __ptext13 1223                       __ptext30 081A  
                     __ptext22 1711                       __ptext14 0C29                       __ptext31 11BD  
                     __ptext23 0672                       __ptext15 09E3                       __ptext32 1240  
                     __ptext24 0AE6                       __ptext16 1401                       __ptext25 1337  
                     __ptext17 13B9                       __ptext26 1373                       __ptext18 1512  
                     __ptext27 15E3                       __ptext19 07BE                       __ptext28 0801  
                     __ptext29 125E        HT1621_Display_Year@year 002E             ??_WriteClockHT1621 0024  
                __size_of_main 0629                   ?_HT1621_Init 0070               ?_IR_data_display 002A  
                     _one_zero 1240               ?_HT1621_num_init 0070         HT1621_Display_Date@mon 002E  
     __end_of_Write1DataHT1621 1662     __size_of_interrupt_service 00CB                   ??_updateTime 002F  
                     init_ram0 1214          Write1DataHT1621@Shift 0029                       intlevel1 0000  
       HT1621_Display_Time@min 0030         HT1621_Display_Time@sec 0035               ___lwmod@dividend 0022  
             ___lldiv@dividend 0031    __size_of_WriteCommandHT1621 0063                      stringcode 1000  
        __end_of_HT1621_segtab 100E              Write1DataHT1621@i 0028             __end_of_updateTime 09E3  
             ___lldiv@quotient 0036                ___lwmod@divisor 0020                ___lwmod@counter 0025  
                     stringdir 1000                _Setting_display 0C29                       stringtab 1000  
     IR_data_display@Temp_Data 002F                  b2d@to_convert 0026  
